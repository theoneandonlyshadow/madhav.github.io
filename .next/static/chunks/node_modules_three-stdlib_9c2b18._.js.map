{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/misc/MorphBlendMesh.js"],"sourcesContent":["import { Mesh, MathUtils } from \"three\";\nclass MorphBlendMesh extends Mesh {\n  constructor(geometry, material) {\n    super(geometry, material);\n    this.animationsMap = {};\n    this.animationsList = [];\n    const numFrames = Object.keys(this.morphTargetDictionary).length;\n    const name = \"__default\";\n    const startFrame = 0;\n    const endFrame = numFrames - 1;\n    const fps = numFrames / 1;\n    this.createAnimation(name, startFrame, endFrame, fps);\n    this.setAnimationWeight(name, 1);\n  }\n  createAnimation(name, start, end, fps) {\n    const animation = {\n      start,\n      end,\n      length: end - start + 1,\n      fps,\n      duration: (end - start) / fps,\n      lastFrame: 0,\n      currentFrame: 0,\n      active: false,\n      time: 0,\n      direction: 1,\n      weight: 1,\n      directionBackwards: false,\n      mirroredLoop: false\n    };\n    this.animationsMap[name] = animation;\n    this.animationsList.push(animation);\n  }\n  autoCreateAnimations(fps) {\n    const pattern = /([a-z]+)_?(\\d+)/i;\n    let firstAnimation;\n    const frameRanges = {};\n    let i = 0;\n    for (const key in this.morphTargetDictionary) {\n      const chunks = key.match(pattern);\n      if (chunks && chunks.length > 1) {\n        const name = chunks[1];\n        if (!frameRanges[name])\n          frameRanges[name] = { start: Infinity, end: -Infinity };\n        const range = frameRanges[name];\n        if (i < range.start)\n          range.start = i;\n        if (i > range.end)\n          range.end = i;\n        if (!firstAnimation)\n          firstAnimation = name;\n      }\n      i++;\n    }\n    for (const name in frameRanges) {\n      const range = frameRanges[name];\n      this.createAnimation(name, range.start, range.end, fps);\n    }\n    this.firstAnimation = firstAnimation;\n  }\n  setAnimationDirectionForward(name) {\n    const animation = this.animationsMap[name];\n    if (animation) {\n      animation.direction = 1;\n      animation.directionBackwards = false;\n    }\n  }\n  setAnimationDirectionBackward(name) {\n    const animation = this.animationsMap[name];\n    if (animation) {\n      animation.direction = -1;\n      animation.directionBackwards = true;\n    }\n  }\n  setAnimationFPS(name, fps) {\n    const animation = this.animationsMap[name];\n    if (animation) {\n      animation.fps = fps;\n      animation.duration = (animation.end - animation.start) / animation.fps;\n    }\n  }\n  setAnimationDuration(name, duration) {\n    const animation = this.animationsMap[name];\n    if (animation) {\n      animation.duration = duration;\n      animation.fps = (animation.end - animation.start) / animation.duration;\n    }\n  }\n  setAnimationWeight(name, weight) {\n    const animation = this.animationsMap[name];\n    if (animation) {\n      animation.weight = weight;\n    }\n  }\n  setAnimationTime(name, time) {\n    const animation = this.animationsMap[name];\n    if (animation) {\n      animation.time = time;\n    }\n  }\n  getAnimationTime(name) {\n    let time = 0;\n    const animation = this.animationsMap[name];\n    if (animation) {\n      time = animation.time;\n    }\n    return time;\n  }\n  getAnimationDuration(name) {\n    let duration = -1;\n    const animation = this.animationsMap[name];\n    if (animation) {\n      duration = animation.duration;\n    }\n    return duration;\n  }\n  playAnimation(name) {\n    const animation = this.animationsMap[name];\n    if (animation) {\n      animation.time = 0;\n      animation.active = true;\n    } else {\n      console.warn(\"THREE.MorphBlendMesh: animation[\" + name + \"] undefined in .playAnimation()\");\n    }\n  }\n  stopAnimation(name) {\n    const animation = this.animationsMap[name];\n    if (animation) {\n      animation.active = false;\n    }\n  }\n  update(delta) {\n    for (let i = 0, il = this.animationsList.length; i < il; i++) {\n      const animation = this.animationsList[i];\n      if (!animation.active)\n        continue;\n      const frameTime = animation.duration / animation.length;\n      animation.time += animation.direction * delta;\n      if (animation.mirroredLoop) {\n        if (animation.time > animation.duration || animation.time < 0) {\n          animation.direction *= -1;\n          if (animation.time > animation.duration) {\n            animation.time = animation.duration;\n            animation.directionBackwards = true;\n          }\n          if (animation.time < 0) {\n            animation.time = 0;\n            animation.directionBackwards = false;\n          }\n        }\n      } else {\n        animation.time = animation.time % animation.duration;\n        if (animation.time < 0)\n          animation.time += animation.duration;\n      }\n      const keyframe = animation.start + MathUtils.clamp(Math.floor(animation.time / frameTime), 0, animation.length - 1);\n      const weight = animation.weight;\n      if (keyframe !== animation.currentFrame) {\n        this.morphTargetInfluences[animation.lastFrame] = 0;\n        this.morphTargetInfluences[animation.currentFrame] = 1 * weight;\n        this.morphTargetInfluences[keyframe] = 0;\n        animation.lastFrame = animation.currentFrame;\n        animation.currentFrame = keyframe;\n      }\n      let mix = animation.time % frameTime / frameTime;\n      if (animation.directionBackwards)\n        mix = 1 - mix;\n      if (animation.currentFrame !== animation.lastFrame) {\n        this.morphTargetInfluences[animation.currentFrame] = mix * weight;\n        this.morphTargetInfluences[animation.lastFrame] = (1 - mix) * weight;\n      } else {\n        this.morphTargetInfluences[animation.currentFrame] = weight;\n      }\n    }\n  }\n}\nexport {\n  MorphBlendMesh\n};\n//# sourceMappingURL=MorphBlendMesh.js.map\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 185, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 191, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/misc/MD2CharacterComplex.js"],"sourcesContent":["import { Object3D, Box3, MathUtils, MeshLambertMaterial, TextureLoader, UVMapping } from \"three\";\nimport { MD2Loader } from \"../loaders/MD2Loader.js\";\nimport { MorphBlendMesh } from \"./MorphBlendMesh.js\";\nclass MD2CharacterComplex {\n  constructor() {\n    this.scale = 1;\n    this.animationFPS = 6;\n    this.transitionFrames = 15;\n    this.maxSpeed = 275;\n    this.maxReverseSpeed = -275;\n    this.frontAcceleration = 600;\n    this.backAcceleration = 600;\n    this.frontDecceleration = 600;\n    this.angularSpeed = 2.5;\n    this.root = new Object3D();\n    this.meshBody = null;\n    this.meshWeapon = null;\n    this.controls = null;\n    this.skinsBody = [];\n    this.skinsWeapon = [];\n    this.weapons = [];\n    this.currentSkin = void 0;\n    this.onLoadComplete = function() {\n    };\n    this.meshes = [];\n    this.animations = {};\n    this.loadCounter = 0;\n    this.speed = 0;\n    this.bodyOrientation = 0;\n    this.walkSpeed = this.maxSpeed;\n    this.crouchSpeed = this.maxSpeed * 0.5;\n    this.activeAnimation = null;\n    this.oldAnimation = null;\n  }\n  enableShadows(enable) {\n    for (let i = 0; i < this.meshes.length; i++) {\n      this.meshes[i].castShadow = enable;\n      this.meshes[i].receiveShadow = enable;\n    }\n  }\n  setVisible(enable) {\n    for (let i = 0; i < this.meshes.length; i++) {\n      this.meshes[i].visible = enable;\n      this.meshes[i].visible = enable;\n    }\n  }\n  shareParts(original) {\n    this.animations = original.animations;\n    this.walkSpeed = original.walkSpeed;\n    this.crouchSpeed = original.crouchSpeed;\n    this.skinsBody = original.skinsBody;\n    this.skinsWeapon = original.skinsWeapon;\n    const mesh = this._createPart(original.meshBody.geometry, this.skinsBody[0]);\n    mesh.scale.set(this.scale, this.scale, this.scale);\n    this.root.position.y = original.root.position.y;\n    this.root.add(mesh);\n    this.meshBody = mesh;\n    this.meshes.push(mesh);\n    for (let i = 0; i < original.weapons.length; i++) {\n      const meshWeapon = this._createPart(original.weapons[i].geometry, this.skinsWeapon[i]);\n      meshWeapon.scale.set(this.scale, this.scale, this.scale);\n      meshWeapon.visible = false;\n      meshWeapon.name = original.weapons[i].name;\n      this.root.add(meshWeapon);\n      this.weapons[i] = meshWeapon;\n      this.meshWeapon = meshWeapon;\n      this.meshes.push(meshWeapon);\n    }\n  }\n  loadParts(config) {\n    const scope = this;\n    function loadTextures(baseUrl, textureUrls) {\n      const textureLoader = new TextureLoader();\n      const textures = [];\n      for (let i = 0; i < textureUrls.length; i++) {\n        textures[i] = textureLoader.load(baseUrl + textureUrls[i], checkLoadingComplete);\n        textures[i].mapping = UVMapping;\n        textures[i].name = textureUrls[i];\n        if (\"colorSpace\" in textures[i])\n          textures[i].colorSpace = \"srgb\";\n        else\n          textures[i].encoding = 3001;\n      }\n      return textures;\n    }\n    function checkLoadingComplete() {\n      scope.loadCounter -= 1;\n      if (scope.loadCounter === 0)\n        scope.onLoadComplete();\n    }\n    this.animations = config.animations;\n    this.walkSpeed = config.walkSpeed;\n    this.crouchSpeed = config.crouchSpeed;\n    this.loadCounter = config.weapons.length * 2 + config.skins.length + 1;\n    const weaponsTextures = [];\n    for (let i = 0; i < config.weapons.length; i++)\n      weaponsTextures[i] = config.weapons[i][1];\n    this.skinsBody = loadTextures(config.baseUrl + \"skins/\", config.skins);\n    this.skinsWeapon = loadTextures(config.baseUrl + \"skins/\", weaponsTextures);\n    const loader = new MD2Loader();\n    loader.load(config.baseUrl + config.body, function(geo) {\n      const boundingBox = new Box3();\n      boundingBox.setFromBufferAttribute(geo.attributes.position);\n      scope.root.position.y = -scope.scale * boundingBox.min.y;\n      const mesh = scope._createPart(geo, scope.skinsBody[0]);\n      mesh.scale.set(scope.scale, scope.scale, scope.scale);\n      scope.root.add(mesh);\n      scope.meshBody = mesh;\n      scope.meshes.push(mesh);\n      checkLoadingComplete();\n    });\n    const generateCallback = function(index, name) {\n      return function(geo) {\n        const mesh = scope._createPart(geo, scope.skinsWeapon[index]);\n        mesh.scale.set(scope.scale, scope.scale, scope.scale);\n        mesh.visible = false;\n        mesh.name = name;\n        scope.root.add(mesh);\n        scope.weapons[index] = mesh;\n        scope.meshWeapon = mesh;\n        scope.meshes.push(mesh);\n        checkLoadingComplete();\n      };\n    };\n    for (let i = 0; i < config.weapons.length; i++) {\n      loader.load(config.baseUrl + config.weapons[i][0], generateCallback(i, config.weapons[i][0]));\n    }\n  }\n  setPlaybackRate(rate) {\n    if (this.meshBody)\n      this.meshBody.duration = this.meshBody.baseDuration / rate;\n    if (this.meshWeapon)\n      this.meshWeapon.duration = this.meshWeapon.baseDuration / rate;\n  }\n  setWireframe(wireframeEnabled) {\n    if (wireframeEnabled) {\n      if (this.meshBody)\n        this.meshBody.material = this.meshBody.materialWireframe;\n      if (this.meshWeapon)\n        this.meshWeapon.material = this.meshWeapon.materialWireframe;\n    } else {\n      if (this.meshBody)\n        this.meshBody.material = this.meshBody.materialTexture;\n      if (this.meshWeapon)\n        this.meshWeapon.material = this.meshWeapon.materialTexture;\n    }\n  }\n  setSkin(index) {\n    if (this.meshBody && this.meshBody.material.wireframe === false) {\n      this.meshBody.material.map = this.skinsBody[index];\n      this.currentSkin = index;\n    }\n  }\n  setWeapon(index) {\n    for (let i = 0; i < this.weapons.length; i++)\n      this.weapons[i].visible = false;\n    const activeWeapon = this.weapons[index];\n    if (activeWeapon) {\n      activeWeapon.visible = true;\n      this.meshWeapon = activeWeapon;\n      if (this.activeAnimation) {\n        activeWeapon.playAnimation(this.activeAnimation);\n        this.meshWeapon.setAnimationTime(this.activeAnimation, this.meshBody.getAnimationTime(this.activeAnimation));\n      }\n    }\n  }\n  setAnimation(animationName) {\n    if (animationName === this.activeAnimation || !animationName)\n      return;\n    if (this.meshBody) {\n      this.meshBody.setAnimationWeight(animationName, 0);\n      this.meshBody.playAnimation(animationName);\n      this.oldAnimation = this.activeAnimation;\n      this.activeAnimation = animationName;\n      this.blendCounter = this.transitionFrames;\n    }\n    if (this.meshWeapon) {\n      this.meshWeapon.setAnimationWeight(animationName, 0);\n      this.meshWeapon.playAnimation(animationName);\n    }\n  }\n  update(delta) {\n    if (this.controls)\n      this.updateMovementModel(delta);\n    if (this.animations) {\n      this.updateBehaviors();\n      this.updateAnimations(delta);\n    }\n  }\n  updateAnimations(delta) {\n    let mix = 1;\n    if (this.blendCounter > 0) {\n      mix = (this.transitionFrames - this.blendCounter) / this.transitionFrames;\n      this.blendCounter -= 1;\n    }\n    if (this.meshBody) {\n      this.meshBody.update(delta);\n      this.meshBody.setAnimationWeight(this.activeAnimation, mix);\n      this.meshBody.setAnimationWeight(this.oldAnimation, 1 - mix);\n    }\n    if (this.meshWeapon) {\n      this.meshWeapon.update(delta);\n      this.meshWeapon.setAnimationWeight(this.activeAnimation, mix);\n      this.meshWeapon.setAnimationWeight(this.oldAnimation, 1 - mix);\n    }\n  }\n  updateBehaviors() {\n    const controls = this.controls;\n    const animations = this.animations;\n    let moveAnimation, idleAnimation;\n    if (controls.crouch) {\n      moveAnimation = animations[\"crouchMove\"];\n      idleAnimation = animations[\"crouchIdle\"];\n    } else {\n      moveAnimation = animations[\"move\"];\n      idleAnimation = animations[\"idle\"];\n    }\n    if (controls.jump) {\n      moveAnimation = animations[\"jump\"];\n      idleAnimation = animations[\"jump\"];\n    }\n    if (controls.attack) {\n      if (controls.crouch) {\n        moveAnimation = animations[\"crouchAttack\"];\n        idleAnimation = animations[\"crouchAttack\"];\n      } else {\n        moveAnimation = animations[\"attack\"];\n        idleAnimation = animations[\"attack\"];\n      }\n    }\n    if (controls.moveForward || controls.moveBackward || controls.moveLeft || controls.moveRight) {\n      if (this.activeAnimation !== moveAnimation) {\n        this.setAnimation(moveAnimation);\n      }\n    }\n    if (Math.abs(this.speed) < 0.2 * this.maxSpeed && !(controls.moveLeft || controls.moveRight || controls.moveForward || controls.moveBackward)) {\n      if (this.activeAnimation !== idleAnimation) {\n        this.setAnimation(idleAnimation);\n      }\n    }\n    if (controls.moveForward) {\n      if (this.meshBody) {\n        this.meshBody.setAnimationDirectionForward(this.activeAnimation);\n        this.meshBody.setAnimationDirectionForward(this.oldAnimation);\n      }\n      if (this.meshWeapon) {\n        this.meshWeapon.setAnimationDirectionForward(this.activeAnimation);\n        this.meshWeapon.setAnimationDirectionForward(this.oldAnimation);\n      }\n    }\n    if (controls.moveBackward) {\n      if (this.meshBody) {\n        this.meshBody.setAnimationDirectionBackward(this.activeAnimation);\n        this.meshBody.setAnimationDirectionBackward(this.oldAnimation);\n      }\n      if (this.meshWeapon) {\n        this.meshWeapon.setAnimationDirectionBackward(this.activeAnimation);\n        this.meshWeapon.setAnimationDirectionBackward(this.oldAnimation);\n      }\n    }\n  }\n  updateMovementModel(delta) {\n    function exponentialEaseOut(k) {\n      return k === 1 ? 1 : -Math.pow(2, -10 * k) + 1;\n    }\n    const controls = this.controls;\n    if (controls.crouch)\n      this.maxSpeed = this.crouchSpeed;\n    else\n      this.maxSpeed = this.walkSpeed;\n    this.maxReverseSpeed = -this.maxSpeed;\n    if (controls.moveForward)\n      this.speed = MathUtils.clamp(this.speed + delta * this.frontAcceleration, this.maxReverseSpeed, this.maxSpeed);\n    if (controls.moveBackward)\n      this.speed = MathUtils.clamp(this.speed - delta * this.backAcceleration, this.maxReverseSpeed, this.maxSpeed);\n    const dir = 1;\n    if (controls.moveLeft) {\n      this.bodyOrientation += delta * this.angularSpeed;\n      this.speed = MathUtils.clamp(\n        this.speed + dir * delta * this.frontAcceleration,\n        this.maxReverseSpeed,\n        this.maxSpeed\n      );\n    }\n    if (controls.moveRight) {\n      this.bodyOrientation -= delta * this.angularSpeed;\n      this.speed = MathUtils.clamp(\n        this.speed + dir * delta * this.frontAcceleration,\n        this.maxReverseSpeed,\n        this.maxSpeed\n      );\n    }\n    if (!(controls.moveForward || controls.moveBackward)) {\n      if (this.speed > 0) {\n        const k = exponentialEaseOut(this.speed / this.maxSpeed);\n        this.speed = MathUtils.clamp(this.speed - k * delta * this.frontDecceleration, 0, this.maxSpeed);\n      } else {\n        const k = exponentialEaseOut(this.speed / this.maxReverseSpeed);\n        this.speed = MathUtils.clamp(this.speed + k * delta * this.backAcceleration, this.maxReverseSpeed, 0);\n      }\n    }\n    const forwardDelta = this.speed * delta;\n    this.root.position.x += Math.sin(this.bodyOrientation) * forwardDelta;\n    this.root.position.z += Math.cos(this.bodyOrientation) * forwardDelta;\n    this.root.rotation.y = this.bodyOrientation;\n  }\n  // internal\n  _createPart(geometry, skinMap) {\n    const materialWireframe = new MeshLambertMaterial({\n      color: 16755200,\n      wireframe: true,\n      morphTargets: true,\n      morphNormals: true\n    });\n    const materialTexture = new MeshLambertMaterial({\n      color: 16777215,\n      wireframe: false,\n      map: skinMap,\n      morphTargets: true,\n      morphNormals: true\n    });\n    const mesh = new MorphBlendMesh(geometry, materialTexture);\n    mesh.rotation.y = -Math.PI / 2;\n    mesh.materialTexture = materialTexture;\n    mesh.materialWireframe = materialWireframe;\n    mesh.autoCreateAnimations(this.animationFPS);\n    return mesh;\n  }\n}\nexport {\n  MD2CharacterComplex\n};\n//# sourceMappingURL=MD2CharacterComplex.js.map\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 502, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 508, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/misc/ConvexObjectBreaker.js"],"sourcesContent":["import { Line3, Plane, Vector3, Mesh } from \"three\";\nimport { ConvexGeometry } from \"../geometries/ConvexGeometry.js\";\nconst _v1 = /* @__PURE__ */ new Vector3();\nconst ConvexObjectBreaker = /* @__PURE__ */ (() => {\n  class ConvexObjectBreaker2 {\n    constructor(minSizeForBreak = 1.4, smallDelta = 1e-4) {\n      this.minSizeForBreak = minSizeForBreak;\n      this.smallDelta = smallDelta;\n      this.tempLine1 = new Line3();\n      this.tempPlane1 = new Plane();\n      this.tempPlane2 = new Plane();\n      this.tempPlane_Cut = new Plane();\n      this.tempCM1 = new Vector3();\n      this.tempCM2 = new Vector3();\n      this.tempVector3 = new Vector3();\n      this.tempVector3_2 = new Vector3();\n      this.tempVector3_3 = new Vector3();\n      this.tempVector3_P0 = new Vector3();\n      this.tempVector3_P1 = new Vector3();\n      this.tempVector3_P2 = new Vector3();\n      this.tempVector3_N0 = new Vector3();\n      this.tempVector3_N1 = new Vector3();\n      this.tempVector3_AB = new Vector3();\n      this.tempVector3_CB = new Vector3();\n      this.tempResultObjects = { object1: null, object2: null };\n      this.segments = [];\n      const n = 30 * 30;\n      for (let i = 0; i < n; i++)\n        this.segments[i] = false;\n    }\n    prepareBreakableObject(object, mass, velocity, angularVelocity, breakable) {\n      const userData = object.userData;\n      userData.mass = mass;\n      userData.velocity = velocity.clone();\n      userData.angularVelocity = angularVelocity.clone();\n      userData.breakable = breakable;\n    }\n    /*\n     * @param {int} maxRadialIterations Iterations for radial cuts.\n     * @param {int} maxRandomIterations Max random iterations for not-radial cuts\n     *\n     * Returns the array of pieces\n     */\n    subdivideByImpact(object, pointOfImpact, normal, maxRadialIterations, maxRandomIterations) {\n      const debris = [];\n      const tempPlane1 = this.tempPlane1;\n      const tempPlane2 = this.tempPlane2;\n      this.tempVector3.addVectors(pointOfImpact, normal);\n      tempPlane1.setFromCoplanarPoints(pointOfImpact, object.position, this.tempVector3);\n      const maxTotalIterations = maxRandomIterations + maxRadialIterations;\n      const scope = this;\n      function subdivideRadial(subObject, startAngle, endAngle, numIterations) {\n        if (Math.random() < numIterations * 0.05 || numIterations > maxTotalIterations) {\n          debris.push(subObject);\n          return;\n        }\n        let angle = Math.PI;\n        if (numIterations === 0) {\n          tempPlane2.normal.copy(tempPlane1.normal);\n          tempPlane2.constant = tempPlane1.constant;\n        } else {\n          if (numIterations <= maxRadialIterations) {\n            angle = (endAngle - startAngle) * (0.2 + 0.6 * Math.random()) + startAngle;\n            scope.tempVector3_2.copy(object.position).sub(pointOfImpact).applyAxisAngle(normal, angle).add(pointOfImpact);\n            tempPlane2.setFromCoplanarPoints(pointOfImpact, scope.tempVector3, scope.tempVector3_2);\n          } else {\n            angle = (0.5 * (numIterations & 1) + 0.2 * (2 - Math.random())) * Math.PI;\n            scope.tempVector3_2.copy(pointOfImpact).sub(subObject.position).applyAxisAngle(normal, angle).add(subObject.position);\n            scope.tempVector3_3.copy(normal).add(subObject.position);\n            tempPlane2.setFromCoplanarPoints(subObject.position, scope.tempVector3_3, scope.tempVector3_2);\n          }\n        }\n        scope.cutByPlane(subObject, tempPlane2, scope.tempResultObjects);\n        const obj1 = scope.tempResultObjects.object1;\n        const obj2 = scope.tempResultObjects.object2;\n        if (obj1) {\n          subdivideRadial(obj1, startAngle, angle, numIterations + 1);\n        }\n        if (obj2) {\n          subdivideRadial(obj2, angle, endAngle, numIterations + 1);\n        }\n      }\n      subdivideRadial(object, 0, 2 * Math.PI, 0);\n      return debris;\n    }\n    cutByPlane(object, plane, output) {\n      const geometry = object.geometry;\n      const coords = geometry.attributes.position.array;\n      const normals = geometry.attributes.normal.array;\n      const numPoints = coords.length / 3;\n      let numFaces = numPoints / 3;\n      let indices = geometry.getIndex();\n      if (indices) {\n        indices = indices.array;\n        numFaces = indices.length / 3;\n      }\n      function getVertexIndex(faceIdx, vert) {\n        const idx = faceIdx * 3 + vert;\n        return indices ? indices[idx] : idx;\n      }\n      const points1 = [];\n      const points2 = [];\n      const delta = this.smallDelta;\n      const numPointPairs = numPoints * numPoints;\n      for (let i = 0; i < numPointPairs; i++)\n        this.segments[i] = false;\n      const p0 = this.tempVector3_P0;\n      const p1 = this.tempVector3_P1;\n      const n0 = this.tempVector3_N0;\n      const n1 = this.tempVector3_N1;\n      for (let i = 0; i < numFaces - 1; i++) {\n        const a1 = getVertexIndex(i, 0);\n        const b1 = getVertexIndex(i, 1);\n        const c1 = getVertexIndex(i, 2);\n        n0.set(normals[a1], normals[a1] + 1, normals[a1] + 2);\n        for (let j = i + 1; j < numFaces; j++) {\n          const a2 = getVertexIndex(j, 0);\n          const b2 = getVertexIndex(j, 1);\n          const c2 = getVertexIndex(j, 2);\n          n1.set(normals[a2], normals[a2] + 1, normals[a2] + 2);\n          const coplanar = 1 - n0.dot(n1) < delta;\n          if (coplanar) {\n            if (a1 === a2 || a1 === b2 || a1 === c2) {\n              if (b1 === a2 || b1 === b2 || b1 === c2) {\n                this.segments[a1 * numPoints + b1] = true;\n                this.segments[b1 * numPoints + a1] = true;\n              } else {\n                this.segments[c1 * numPoints + a1] = true;\n                this.segments[a1 * numPoints + c1] = true;\n              }\n            } else if (b1 === a2 || b1 === b2 || b1 === c2) {\n              this.segments[c1 * numPoints + b1] = true;\n              this.segments[b1 * numPoints + c1] = true;\n            }\n          }\n        }\n      }\n      const localPlane = this.tempPlane_Cut;\n      object.updateMatrix();\n      ConvexObjectBreaker2.transformPlaneToLocalSpace(plane, object.matrix, localPlane);\n      for (let i = 0; i < numFaces; i++) {\n        const va = getVertexIndex(i, 0);\n        const vb = getVertexIndex(i, 1);\n        const vc = getVertexIndex(i, 2);\n        for (let segment = 0; segment < 3; segment++) {\n          const i0 = segment === 0 ? va : segment === 1 ? vb : vc;\n          const i1 = segment === 0 ? vb : segment === 1 ? vc : va;\n          const segmentState = this.segments[i0 * numPoints + i1];\n          if (segmentState)\n            continue;\n          this.segments[i0 * numPoints + i1] = true;\n          this.segments[i1 * numPoints + i0] = true;\n          p0.set(coords[3 * i0], coords[3 * i0 + 1], coords[3 * i0 + 2]);\n          p1.set(coords[3 * i1], coords[3 * i1 + 1], coords[3 * i1 + 2]);\n          let mark0 = 0;\n          let d = localPlane.distanceToPoint(p0);\n          if (d > delta) {\n            mark0 = 2;\n            points2.push(p0.clone());\n          } else if (d < -delta) {\n            mark0 = 1;\n            points1.push(p0.clone());\n          } else {\n            mark0 = 3;\n            points1.push(p0.clone());\n            points2.push(p0.clone());\n          }\n          let mark1 = 0;\n          d = localPlane.distanceToPoint(p1);\n          if (d > delta) {\n            mark1 = 2;\n            points2.push(p1.clone());\n          } else if (d < -delta) {\n            mark1 = 1;\n            points1.push(p1.clone());\n          } else {\n            mark1 = 3;\n            points1.push(p1.clone());\n            points2.push(p1.clone());\n          }\n          if (mark0 === 1 && mark1 === 2 || mark0 === 2 && mark1 === 1) {\n            this.tempLine1.start.copy(p0);\n            this.tempLine1.end.copy(p1);\n            let intersection = new Vector3();\n            intersection = localPlane.intersectLine(this.tempLine1, intersection);\n            if (intersection === null) {\n              console.error(\"Internal error: segment does not intersect plane.\");\n              output.segmentedObject1 = null;\n              output.segmentedObject2 = null;\n              return 0;\n            }\n            points1.push(intersection);\n            points2.push(intersection.clone());\n          }\n        }\n      }\n      const newMass = object.userData.mass * 0.5;\n      this.tempCM1.set(0, 0, 0);\n      let radius1 = 0;\n      const numPoints1 = points1.length;\n      if (numPoints1 > 0) {\n        for (let i = 0; i < numPoints1; i++)\n          this.tempCM1.add(points1[i]);\n        this.tempCM1.divideScalar(numPoints1);\n        for (let i = 0; i < numPoints1; i++) {\n          const p = points1[i];\n          p.sub(this.tempCM1);\n          radius1 = Math.max(radius1, p.x, p.y, p.z);\n        }\n        this.tempCM1.add(object.position);\n      }\n      this.tempCM2.set(0, 0, 0);\n      let radius2 = 0;\n      const numPoints2 = points2.length;\n      if (numPoints2 > 0) {\n        for (let i = 0; i < numPoints2; i++)\n          this.tempCM2.add(points2[i]);\n        this.tempCM2.divideScalar(numPoints2);\n        for (let i = 0; i < numPoints2; i++) {\n          const p = points2[i];\n          p.sub(this.tempCM2);\n          radius2 = Math.max(radius2, p.x, p.y, p.z);\n        }\n        this.tempCM2.add(object.position);\n      }\n      let object1 = null;\n      let object2 = null;\n      let numObjects = 0;\n      if (numPoints1 > 4) {\n        object1 = new Mesh(new ConvexGeometry(points1), object.material);\n        object1.position.copy(this.tempCM1);\n        object1.quaternion.copy(object.quaternion);\n        this.prepareBreakableObject(\n          object1,\n          newMass,\n          object.userData.velocity,\n          object.userData.angularVelocity,\n          2 * radius1 > this.minSizeForBreak\n        );\n        numObjects++;\n      }\n      if (numPoints2 > 4) {\n        object2 = new Mesh(new ConvexGeometry(points2), object.material);\n        object2.position.copy(this.tempCM2);\n        object2.quaternion.copy(object.quaternion);\n        this.prepareBreakableObject(\n          object2,\n          newMass,\n          object.userData.velocity,\n          object.userData.angularVelocity,\n          2 * radius2 > this.minSizeForBreak\n        );\n        numObjects++;\n      }\n      output.object1 = object1;\n      output.object2 = object2;\n      return numObjects;\n    }\n    static transformFreeVector(v, m) {\n      const x = v.x, y = v.y, z = v.z;\n      const e = m.elements;\n      v.x = e[0] * x + e[4] * y + e[8] * z;\n      v.y = e[1] * x + e[5] * y + e[9] * z;\n      v.z = e[2] * x + e[6] * y + e[10] * z;\n      return v;\n    }\n    static transformFreeVectorInverse(v, m) {\n      const x = v.x, y = v.y, z = v.z;\n      const e = m.elements;\n      v.x = e[0] * x + e[1] * y + e[2] * z;\n      v.y = e[4] * x + e[5] * y + e[6] * z;\n      v.z = e[8] * x + e[9] * y + e[10] * z;\n      return v;\n    }\n    static transformTiedVectorInverse(v, m) {\n      const x = v.x, y = v.y, z = v.z;\n      const e = m.elements;\n      v.x = e[0] * x + e[1] * y + e[2] * z - e[12];\n      v.y = e[4] * x + e[5] * y + e[6] * z - e[13];\n      v.z = e[8] * x + e[9] * y + e[10] * z - e[14];\n      return v;\n    }\n    static transformPlaneToLocalSpace(plane, m, resultPlane) {\n      resultPlane.normal.copy(plane.normal);\n      resultPlane.constant = plane.constant;\n      const referencePoint = ConvexObjectBreaker2.transformTiedVectorInverse(plane.coplanarPoint(_v1), m);\n      ConvexObjectBreaker2.transformFreeVectorInverse(resultPlane.normal, m);\n      resultPlane.constant = -referencePoint.dot(resultPlane.normal);\n    }\n  }\n  return ConvexObjectBreaker2;\n})();\nexport {\n  ConvexObjectBreaker\n};\n//# sourceMappingURL=ConvexObjectBreaker.js.map\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 792, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 798, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/misc/GPUComputationRenderer.js"],"sourcesContent":["import { Scene, Camera, Mesh, PlaneGeometry, ShaderMaterial, WebGLRenderTarget, RGBAFormat, DataTexture, FloatType, NoToneMapping, NearestFilter, ClampToEdgeWrapping } from \"three\";\nclass GPUComputationRenderer {\n  constructor(sizeX, sizeY, renderer) {\n    this.variables = [];\n    this.currentTextureIndex = 0;\n    let dataType = FloatType;\n    const scene = new Scene();\n    const camera = new Camera();\n    camera.position.z = 1;\n    const passThruUniforms = {\n      passThruTexture: { value: null }\n    };\n    const passThruShader = createShaderMaterial(getPassThroughFragmentShader(), passThruUniforms);\n    const mesh = new Mesh(new PlaneGeometry(2, 2), passThruShader);\n    scene.add(mesh);\n    this.setDataType = function(type) {\n      dataType = type;\n      return this;\n    };\n    this.addVariable = function(variableName, computeFragmentShader, initialValueTexture) {\n      const material = this.createShaderMaterial(computeFragmentShader);\n      const variable = {\n        name: variableName,\n        initialValueTexture,\n        material,\n        dependencies: null,\n        renderTargets: [],\n        wrapS: null,\n        wrapT: null,\n        minFilter: NearestFilter,\n        magFilter: NearestFilter\n      };\n      this.variables.push(variable);\n      return variable;\n    };\n    this.setVariableDependencies = function(variable, dependencies) {\n      variable.dependencies = dependencies;\n    };\n    this.init = function() {\n      if (renderer.capabilities.isWebGL2 === false && renderer.extensions.has(\"OES_texture_float\") === false) {\n        return \"No OES_texture_float support for float textures.\";\n      }\n      if (renderer.capabilities.maxVertexTextures === 0) {\n        return \"No support for vertex shader textures.\";\n      }\n      for (let i = 0; i < this.variables.length; i++) {\n        const variable = this.variables[i];\n        variable.renderTargets[0] = this.createRenderTarget(\n          sizeX,\n          sizeY,\n          variable.wrapS,\n          variable.wrapT,\n          variable.minFilter,\n          variable.magFilter\n        );\n        variable.renderTargets[1] = this.createRenderTarget(\n          sizeX,\n          sizeY,\n          variable.wrapS,\n          variable.wrapT,\n          variable.minFilter,\n          variable.magFilter\n        );\n        this.renderTexture(variable.initialValueTexture, variable.renderTargets[0]);\n        this.renderTexture(variable.initialValueTexture, variable.renderTargets[1]);\n        const material = variable.material;\n        const uniforms = material.uniforms;\n        if (variable.dependencies !== null) {\n          for (let d = 0; d < variable.dependencies.length; d++) {\n            const depVar = variable.dependencies[d];\n            if (depVar.name !== variable.name) {\n              let found = false;\n              for (let j = 0; j < this.variables.length; j++) {\n                if (depVar.name === this.variables[j].name) {\n                  found = true;\n                  break;\n                }\n              }\n              if (!found) {\n                return \"Variable dependency not found. Variable=\" + variable.name + \", dependency=\" + depVar.name;\n              }\n            }\n            uniforms[depVar.name] = { value: null };\n            material.fragmentShader = \"\\nuniform sampler2D \" + depVar.name + \";\\n\" + material.fragmentShader;\n          }\n        }\n      }\n      this.currentTextureIndex = 0;\n      return null;\n    };\n    this.compute = function() {\n      const currentTextureIndex = this.currentTextureIndex;\n      const nextTextureIndex = this.currentTextureIndex === 0 ? 1 : 0;\n      for (let i = 0, il = this.variables.length; i < il; i++) {\n        const variable = this.variables[i];\n        if (variable.dependencies !== null) {\n          const uniforms = variable.material.uniforms;\n          for (let d = 0, dl = variable.dependencies.length; d < dl; d++) {\n            const depVar = variable.dependencies[d];\n            uniforms[depVar.name].value = depVar.renderTargets[currentTextureIndex].texture;\n          }\n        }\n        this.doRenderTarget(variable.material, variable.renderTargets[nextTextureIndex]);\n      }\n      this.currentTextureIndex = nextTextureIndex;\n    };\n    this.getCurrentRenderTarget = function(variable) {\n      return variable.renderTargets[this.currentTextureIndex];\n    };\n    this.getAlternateRenderTarget = function(variable) {\n      return variable.renderTargets[this.currentTextureIndex === 0 ? 1 : 0];\n    };\n    this.dispose = function() {\n      mesh.geometry.dispose();\n      mesh.material.dispose();\n      const variables = this.variables;\n      for (let i = 0; i < variables.length; i++) {\n        const variable = variables[i];\n        if (variable.initialValueTexture)\n          variable.initialValueTexture.dispose();\n        const renderTargets = variable.renderTargets;\n        for (let j = 0; j < renderTargets.length; j++) {\n          const renderTarget = renderTargets[j];\n          renderTarget.dispose();\n        }\n      }\n    };\n    function addResolutionDefine(materialShader) {\n      materialShader.defines.resolution = \"vec2( \" + sizeX.toFixed(1) + \", \" + sizeY.toFixed(1) + \" )\";\n    }\n    this.addResolutionDefine = addResolutionDefine;\n    function createShaderMaterial(computeFragmentShader, uniforms) {\n      uniforms = uniforms || {};\n      const material = new ShaderMaterial({\n        uniforms,\n        vertexShader: getPassThroughVertexShader(),\n        fragmentShader: computeFragmentShader\n      });\n      addResolutionDefine(material);\n      return material;\n    }\n    this.createShaderMaterial = createShaderMaterial;\n    this.createRenderTarget = function(sizeXTexture, sizeYTexture, wrapS, wrapT, minFilter, magFilter) {\n      sizeXTexture = sizeXTexture || sizeX;\n      sizeYTexture = sizeYTexture || sizeY;\n      wrapS = wrapS || ClampToEdgeWrapping;\n      wrapT = wrapT || ClampToEdgeWrapping;\n      minFilter = minFilter || NearestFilter;\n      magFilter = magFilter || NearestFilter;\n      const renderTarget = new WebGLRenderTarget(sizeXTexture, sizeYTexture, {\n        wrapS,\n        wrapT,\n        minFilter,\n        magFilter,\n        format: RGBAFormat,\n        type: dataType,\n        depthBuffer: false\n      });\n      return renderTarget;\n    };\n    this.createTexture = function() {\n      const data = new Float32Array(sizeX * sizeY * 4);\n      const texture = new DataTexture(data, sizeX, sizeY, RGBAFormat, FloatType);\n      texture.needsUpdate = true;\n      return texture;\n    };\n    this.renderTexture = function(input, output) {\n      passThruUniforms.passThruTexture.value = input;\n      this.doRenderTarget(passThruShader, output);\n      passThruUniforms.passThruTexture.value = null;\n    };\n    this.doRenderTarget = function(material, output) {\n      const currentRenderTarget = renderer.getRenderTarget();\n      const currentXrEnabled = renderer.xr.enabled;\n      const currentShadowAutoUpdate = renderer.shadowMap.autoUpdate;\n      const currentOutputColorSpace = renderer.outputColorSpace;\n      const currentToneMapping = renderer.toneMapping;\n      renderer.xr.enabled = false;\n      renderer.shadowMap.autoUpdate = false;\n      if (\"outputColorSpace\" in renderer)\n        renderer.outputColorSpace = \"srgb-linear\";\n      else\n        renderer.encoding = 3e3;\n      renderer.toneMapping = NoToneMapping;\n      mesh.material = material;\n      renderer.setRenderTarget(output);\n      renderer.render(scene, camera);\n      mesh.material = passThruShader;\n      renderer.xr.enabled = currentXrEnabled;\n      renderer.shadowMap.autoUpdate = currentShadowAutoUpdate;\n      renderer.outputColorSpace = currentOutputColorSpace;\n      renderer.toneMapping = currentToneMapping;\n      renderer.setRenderTarget(currentRenderTarget);\n    };\n    function getPassThroughVertexShader() {\n      return \"void main()\t{\\n\\n\tgl_Position = vec4( position, 1.0 );\\n\\n}\\n\";\n    }\n    function getPassThroughFragmentShader() {\n      return \"uniform sampler2D passThruTexture;\\n\\nvoid main() {\\n\\n\tvec2 uv = gl_FragCoord.xy / resolution.xy;\\n\\n\tgl_FragColor = texture2D( passThruTexture, uv );\\n\\n}\\n\";\n    }\n  }\n}\nexport {\n  GPUComputationRenderer\n};\n//# sourceMappingURL=GPUComputationRenderer.js.map\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 993, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 999, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/misc/Gyroscope.js"],"sourcesContent":["import { Object3D, Vector3, Quaternion } from \"three\";\nconst _translationObject = /* @__PURE__ */ new Vector3();\nconst _quaternionObject = /* @__PURE__ */ new Quaternion();\nconst _scaleObject = /* @__PURE__ */ new Vector3();\nconst _translationWorld = /* @__PURE__ */ new Vector3();\nconst _quaternionWorld = /* @__PURE__ */ new Quaternion();\nconst _scaleWorld = /* @__PURE__ */ new Vector3();\nclass Gyroscope extends Object3D {\n  constructor() {\n    super();\n  }\n  updateMatrixWorld(force) {\n    this.matrixAutoUpdate && this.updateMatrix();\n    if (this.matrixWorldNeedsUpdate || force) {\n      if (this.parent !== null) {\n        this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix);\n        this.matrixWorld.decompose(_translationWorld, _quaternionWorld, _scaleWorld);\n        this.matrix.decompose(_translationObject, _quaternionObject, _scaleObject);\n        this.matrixWorld.compose(_translationWorld, _quaternionObject, _scaleWorld);\n      } else {\n        this.matrixWorld.copy(this.matrix);\n      }\n      this.matrixWorldNeedsUpdate = false;\n      force = true;\n    }\n    for (let i = 0, l = this.children.length; i < l; i++) {\n      this.children[i].updateMatrixWorld(force);\n    }\n  }\n}\nexport {\n  Gyroscope\n};\n//# sourceMappingURL=Gyroscope.js.map\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,qBAAqB,aAAa,GAAG,IAAI,kJAAA,CAAA,UAAO;AACtD,MAAM,oBAAoB,aAAa,GAAG,IAAI,kJAAA,CAAA,aAAU;AACxD,MAAM,eAAe,aAAa,GAAG,IAAI,kJAAA,CAAA,UAAO;AAChD,MAAM,oBAAoB,aAAa,GAAG,IAAI,kJAAA,CAAA,UAAO;AACrD,MAAM,mBAAmB,aAAa,GAAG,IAAI,kJAAA,CAAA,aAAU;AACvD,MAAM,cAAc,aAAa,GAAG,IAAI,kJAAA,CAAA,UAAO;AAC/C,MAAM,kBAAkB,kJAAA,CAAA,WAAQ;IAC9B,aAAc;QACZ,KAAK;IACP;IACA,kBAAkB,KAAK,EAAE;QACvB,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,YAAY;QAC1C,IAAI,IAAI,CAAC,sBAAsB,IAAI,OAAO;YACxC,IAAI,IAAI,CAAC,MAAM,KAAK,MAAM;gBACxB,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC,MAAM;gBACtE,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,mBAAmB,kBAAkB;gBAChE,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,oBAAoB,mBAAmB;gBAC7D,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,mBAAmB,mBAAmB;YACjE,OAAO;gBACL,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM;YACnC;YACA,IAAI,CAAC,sBAAsB,GAAG;YAC9B,QAAQ;QACV;QACA,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI,GAAG,IAAK;YACpD,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,iBAAiB,CAAC;QACrC;IACF;AACF;;CAIA,qCAAqC","ignoreList":[0]}},
    {"offset": {"line": 1035, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1041, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/misc/MorphAnimMesh.js"],"sourcesContent":["import { Mesh, AnimationMixer, AnimationClip } from \"three\";\nclass MorphAnimMesh extends Mesh {\n  constructor(geometry, material) {\n    super(geometry, material);\n    this.type = \"MorphAnimMesh\";\n    this.mixer = new AnimationMixer(this);\n    this.activeAction = null;\n  }\n  setDirectionForward() {\n    this.mixer.timeScale = 1;\n  }\n  setDirectionBackward() {\n    this.mixer.timeScale = -1;\n  }\n  playAnimation(label, fps) {\n    if (this.activeAction) {\n      this.activeAction.stop();\n      this.activeAction = null;\n    }\n    const clip = AnimationClip.findByName(this, label);\n    if (clip) {\n      const action = this.mixer.clipAction(clip);\n      action.timeScale = clip.tracks.length * fps / clip.duration;\n      this.activeAction = action.play();\n    } else {\n      throw new Error(\"THREE.MorphAnimMesh: animations[\" + label + \"] undefined in .playAnimation()\");\n    }\n  }\n  updateAnimation(delta) {\n    this.mixer.update(delta);\n  }\n  copy(source, recursive) {\n    super.copy(source, recursive);\n    this.mixer = new AnimationMixer(this);\n    return this;\n  }\n}\nexport {\n  MorphAnimMesh\n};\n//# sourceMappingURL=MorphAnimMesh.js.map\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,sBAAsB,kJAAA,CAAA,OAAI;IAC9B,YAAY,QAAQ,EAAE,QAAQ,CAAE;QAC9B,KAAK,CAAC,UAAU;QAChB,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,KAAK,GAAG,IAAI,kJAAA,CAAA,iBAAc,CAAC,IAAI;QACpC,IAAI,CAAC,YAAY,GAAG;IACtB;IACA,sBAAsB;QACpB,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG;IACzB;IACA,uBAAuB;QACrB,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,CAAC;IAC1B;IACA,cAAc,KAAK,EAAE,GAAG,EAAE;QACxB,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,IAAI,CAAC,YAAY,CAAC,IAAI;YACtB,IAAI,CAAC,YAAY,GAAG;QACtB;QACA,MAAM,OAAO,kJAAA,CAAA,gBAAa,CAAC,UAAU,CAAC,IAAI,EAAE;QAC5C,IAAI,MAAM;YACR,MAAM,SAAS,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC;YACrC,OAAO,SAAS,GAAG,KAAK,MAAM,CAAC,MAAM,GAAG,MAAM,KAAK,QAAQ;YAC3D,IAAI,CAAC,YAAY,GAAG,OAAO,IAAI;QACjC,OAAO;YACL,MAAM,IAAI,MAAM,qCAAqC,QAAQ;QAC/D;IACF;IACA,gBAAgB,KAAK,EAAE;QACrB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;IACpB;IACA,KAAK,MAAM,EAAE,SAAS,EAAE;QACtB,KAAK,CAAC,KAAK,QAAQ;QACnB,IAAI,CAAC,KAAK,GAAG,IAAI,kJAAA,CAAA,iBAAc,CAAC,IAAI;QACpC,OAAO,IAAI;IACb;AACF;;CAIA,yCAAyC","ignoreList":[0]}},
    {"offset": {"line": 1084, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1090, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/misc/RollerCoaster.js"],"sourcesContent":["import { BufferGeometry, Vector3, Quaternion, BufferAttribute, Raycaster, Color } from \"three\";\nclass RollerCoasterGeometry extends BufferGeometry {\n  constructor(curve, divisions) {\n    super();\n    const vertices = [];\n    const normals = [];\n    const colors = [];\n    const color1 = [1, 1, 1];\n    const color2 = [1, 1, 0];\n    const up = new Vector3(0, 1, 0);\n    const forward = new Vector3();\n    const right = new Vector3();\n    const quaternion = new Quaternion();\n    const prevQuaternion = new Quaternion();\n    prevQuaternion.setFromAxisAngle(up, Math.PI / 2);\n    const point = new Vector3();\n    const prevPoint = new Vector3();\n    prevPoint.copy(curve.getPointAt(0));\n    const step = [\n      new Vector3(-0.225, 0, 0),\n      new Vector3(0, -0.05, 0),\n      new Vector3(0, -0.175, 0),\n      new Vector3(0, -0.05, 0),\n      new Vector3(0.225, 0, 0),\n      new Vector3(0, -0.175, 0)\n    ];\n    const PI2 = Math.PI * 2;\n    let sides = 5;\n    const tube1 = [];\n    for (let i = 0; i < sides; i++) {\n      const angle = i / sides * PI2;\n      tube1.push(new Vector3(Math.sin(angle) * 0.06, Math.cos(angle) * 0.06, 0));\n    }\n    sides = 6;\n    const tube2 = [];\n    for (let i = 0; i < sides; i++) {\n      const angle = i / sides * PI2;\n      tube2.push(new Vector3(Math.sin(angle) * 0.025, Math.cos(angle) * 0.025, 0));\n    }\n    const vector = new Vector3();\n    const normal = new Vector3();\n    function drawShape(shape, color) {\n      normal.set(0, 0, -1).applyQuaternion(quaternion);\n      for (let j = 0; j < shape.length; j++) {\n        vector.copy(shape[j]);\n        vector.applyQuaternion(quaternion);\n        vector.add(point);\n        vertices.push(vector.x, vector.y, vector.z);\n        normals.push(normal.x, normal.y, normal.z);\n        colors.push(color[0], color[1], color[2]);\n      }\n      normal.set(0, 0, 1).applyQuaternion(quaternion);\n      for (let j = shape.length - 1; j >= 0; j--) {\n        vector.copy(shape[j]);\n        vector.applyQuaternion(quaternion);\n        vector.add(point);\n        vertices.push(vector.x, vector.y, vector.z);\n        normals.push(normal.x, normal.y, normal.z);\n        colors.push(color[0], color[1], color[2]);\n      }\n    }\n    const vector1 = new Vector3();\n    const vector2 = new Vector3();\n    const vector3 = new Vector3();\n    const vector4 = new Vector3();\n    const normal1 = new Vector3();\n    const normal2 = new Vector3();\n    const normal3 = new Vector3();\n    const normal4 = new Vector3();\n    function extrudeShape(shape, offset2, color) {\n      for (let j = 0, jl = shape.length; j < jl; j++) {\n        const point1 = shape[j];\n        const point2 = shape[(j + 1) % jl];\n        vector1.copy(point1).add(offset2);\n        vector1.applyQuaternion(quaternion);\n        vector1.add(point);\n        vector2.copy(point2).add(offset2);\n        vector2.applyQuaternion(quaternion);\n        vector2.add(point);\n        vector3.copy(point2).add(offset2);\n        vector3.applyQuaternion(prevQuaternion);\n        vector3.add(prevPoint);\n        vector4.copy(point1).add(offset2);\n        vector4.applyQuaternion(prevQuaternion);\n        vector4.add(prevPoint);\n        vertices.push(vector1.x, vector1.y, vector1.z);\n        vertices.push(vector2.x, vector2.y, vector2.z);\n        vertices.push(vector4.x, vector4.y, vector4.z);\n        vertices.push(vector2.x, vector2.y, vector2.z);\n        vertices.push(vector3.x, vector3.y, vector3.z);\n        vertices.push(vector4.x, vector4.y, vector4.z);\n        normal1.copy(point1);\n        normal1.applyQuaternion(quaternion);\n        normal1.normalize();\n        normal2.copy(point2);\n        normal2.applyQuaternion(quaternion);\n        normal2.normalize();\n        normal3.copy(point2);\n        normal3.applyQuaternion(prevQuaternion);\n        normal3.normalize();\n        normal4.copy(point1);\n        normal4.applyQuaternion(prevQuaternion);\n        normal4.normalize();\n        normals.push(normal1.x, normal1.y, normal1.z);\n        normals.push(normal2.x, normal2.y, normal2.z);\n        normals.push(normal4.x, normal4.y, normal4.z);\n        normals.push(normal2.x, normal2.y, normal2.z);\n        normals.push(normal3.x, normal3.y, normal3.z);\n        normals.push(normal4.x, normal4.y, normal4.z);\n        colors.push(color[0], color[1], color[2]);\n        colors.push(color[0], color[1], color[2]);\n        colors.push(color[0], color[1], color[2]);\n        colors.push(color[0], color[1], color[2]);\n        colors.push(color[0], color[1], color[2]);\n        colors.push(color[0], color[1], color[2]);\n      }\n    }\n    const offset = new Vector3();\n    for (let i = 1; i <= divisions; i++) {\n      point.copy(curve.getPointAt(i / divisions));\n      up.set(0, 1, 0);\n      forward.subVectors(point, prevPoint).normalize();\n      right.crossVectors(up, forward).normalize();\n      up.crossVectors(forward, right);\n      const angle = Math.atan2(forward.x, forward.z);\n      quaternion.setFromAxisAngle(up, angle);\n      if (i % 2 === 0) {\n        drawShape(step, color2);\n      }\n      extrudeShape(tube1, offset.set(0, -0.125, 0), color2);\n      extrudeShape(tube2, offset.set(0.2, 0, 0), color1);\n      extrudeShape(tube2, offset.set(-0.2, 0, 0), color1);\n      prevPoint.copy(point);\n      prevQuaternion.copy(quaternion);\n    }\n    this.setAttribute(\"position\", new BufferAttribute(new Float32Array(vertices), 3));\n    this.setAttribute(\"normal\", new BufferAttribute(new Float32Array(normals), 3));\n    this.setAttribute(\"color\", new BufferAttribute(new Float32Array(colors), 3));\n  }\n}\nclass RollerCoasterLiftersGeometry extends BufferGeometry {\n  constructor(curve, divisions) {\n    super();\n    const vertices = [];\n    const normals = [];\n    const quaternion = new Quaternion();\n    const up = new Vector3(0, 1, 0);\n    const point = new Vector3();\n    const tangent = new Vector3();\n    const tube1 = [new Vector3(0, 0.05, -0.05), new Vector3(0, 0.05, 0.05), new Vector3(0, -0.05, 0)];\n    const tube2 = [new Vector3(-0.05, 0, 0.05), new Vector3(-0.05, 0, -0.05), new Vector3(0.05, 0, 0)];\n    const tube3 = [new Vector3(0.05, 0, -0.05), new Vector3(0.05, 0, 0.05), new Vector3(-0.05, 0, 0)];\n    const vector1 = new Vector3();\n    const vector2 = new Vector3();\n    const vector3 = new Vector3();\n    const vector4 = new Vector3();\n    const normal1 = new Vector3();\n    const normal2 = new Vector3();\n    const normal3 = new Vector3();\n    const normal4 = new Vector3();\n    function extrudeShape(shape, fromPoint2, toPoint2) {\n      for (let j = 0, jl = shape.length; j < jl; j++) {\n        const point1 = shape[j];\n        const point2 = shape[(j + 1) % jl];\n        vector1.copy(point1);\n        vector1.applyQuaternion(quaternion);\n        vector1.add(fromPoint2);\n        vector2.copy(point2);\n        vector2.applyQuaternion(quaternion);\n        vector2.add(fromPoint2);\n        vector3.copy(point2);\n        vector3.applyQuaternion(quaternion);\n        vector3.add(toPoint2);\n        vector4.copy(point1);\n        vector4.applyQuaternion(quaternion);\n        vector4.add(toPoint2);\n        vertices.push(vector1.x, vector1.y, vector1.z);\n        vertices.push(vector2.x, vector2.y, vector2.z);\n        vertices.push(vector4.x, vector4.y, vector4.z);\n        vertices.push(vector2.x, vector2.y, vector2.z);\n        vertices.push(vector3.x, vector3.y, vector3.z);\n        vertices.push(vector4.x, vector4.y, vector4.z);\n        normal1.copy(point1);\n        normal1.applyQuaternion(quaternion);\n        normal1.normalize();\n        normal2.copy(point2);\n        normal2.applyQuaternion(quaternion);\n        normal2.normalize();\n        normal3.copy(point2);\n        normal3.applyQuaternion(quaternion);\n        normal3.normalize();\n        normal4.copy(point1);\n        normal4.applyQuaternion(quaternion);\n        normal4.normalize();\n        normals.push(normal1.x, normal1.y, normal1.z);\n        normals.push(normal2.x, normal2.y, normal2.z);\n        normals.push(normal4.x, normal4.y, normal4.z);\n        normals.push(normal2.x, normal2.y, normal2.z);\n        normals.push(normal3.x, normal3.y, normal3.z);\n        normals.push(normal4.x, normal4.y, normal4.z);\n      }\n    }\n    const fromPoint = new Vector3();\n    const toPoint = new Vector3();\n    for (let i = 1; i <= divisions; i++) {\n      point.copy(curve.getPointAt(i / divisions));\n      tangent.copy(curve.getTangentAt(i / divisions));\n      const angle = Math.atan2(tangent.x, tangent.z);\n      quaternion.setFromAxisAngle(up, angle);\n      if (point.y > 10) {\n        fromPoint.set(-0.75, -0.35, 0);\n        fromPoint.applyQuaternion(quaternion);\n        fromPoint.add(point);\n        toPoint.set(0.75, -0.35, 0);\n        toPoint.applyQuaternion(quaternion);\n        toPoint.add(point);\n        extrudeShape(tube1, fromPoint, toPoint);\n        fromPoint.set(-0.7, -0.3, 0);\n        fromPoint.applyQuaternion(quaternion);\n        fromPoint.add(point);\n        toPoint.set(-0.7, -point.y, 0);\n        toPoint.applyQuaternion(quaternion);\n        toPoint.add(point);\n        extrudeShape(tube2, fromPoint, toPoint);\n        fromPoint.set(0.7, -0.3, 0);\n        fromPoint.applyQuaternion(quaternion);\n        fromPoint.add(point);\n        toPoint.set(0.7, -point.y, 0);\n        toPoint.applyQuaternion(quaternion);\n        toPoint.add(point);\n        extrudeShape(tube3, fromPoint, toPoint);\n      } else {\n        fromPoint.set(0, -0.2, 0);\n        fromPoint.applyQuaternion(quaternion);\n        fromPoint.add(point);\n        toPoint.set(0, -point.y, 0);\n        toPoint.applyQuaternion(quaternion);\n        toPoint.add(point);\n        extrudeShape(tube3, fromPoint, toPoint);\n      }\n    }\n    this.setAttribute(\"position\", new BufferAttribute(new Float32Array(vertices), 3));\n    this.setAttribute(\"normal\", new BufferAttribute(new Float32Array(normals), 3));\n  }\n}\nclass RollerCoasterShadowGeometry extends BufferGeometry {\n  constructor(curve, divisions) {\n    super();\n    const vertices = [];\n    const up = new Vector3(0, 1, 0);\n    const forward = new Vector3();\n    const quaternion = new Quaternion();\n    const prevQuaternion = new Quaternion();\n    prevQuaternion.setFromAxisAngle(up, Math.PI / 2);\n    const point = new Vector3();\n    const prevPoint = new Vector3();\n    prevPoint.copy(curve.getPointAt(0));\n    prevPoint.y = 0;\n    const vector1 = new Vector3();\n    const vector2 = new Vector3();\n    const vector3 = new Vector3();\n    const vector4 = new Vector3();\n    for (let i = 1; i <= divisions; i++) {\n      point.copy(curve.getPointAt(i / divisions));\n      point.y = 0;\n      forward.subVectors(point, prevPoint);\n      const angle = Math.atan2(forward.x, forward.z);\n      quaternion.setFromAxisAngle(up, angle);\n      vector1.set(-0.3, 0, 0);\n      vector1.applyQuaternion(quaternion);\n      vector1.add(point);\n      vector2.set(0.3, 0, 0);\n      vector2.applyQuaternion(quaternion);\n      vector2.add(point);\n      vector3.set(0.3, 0, 0);\n      vector3.applyQuaternion(prevQuaternion);\n      vector3.add(prevPoint);\n      vector4.set(-0.3, 0, 0);\n      vector4.applyQuaternion(prevQuaternion);\n      vector4.add(prevPoint);\n      vertices.push(vector1.x, vector1.y, vector1.z);\n      vertices.push(vector2.x, vector2.y, vector2.z);\n      vertices.push(vector4.x, vector4.y, vector4.z);\n      vertices.push(vector2.x, vector2.y, vector2.z);\n      vertices.push(vector3.x, vector3.y, vector3.z);\n      vertices.push(vector4.x, vector4.y, vector4.z);\n      prevPoint.copy(point);\n      prevQuaternion.copy(quaternion);\n    }\n    this.setAttribute(\"position\", new BufferAttribute(new Float32Array(vertices), 3));\n  }\n}\nclass SkyGeometry extends BufferGeometry {\n  constructor() {\n    super();\n    const vertices = [];\n    for (let i = 0; i < 100; i++) {\n      const x = Math.random() * 800 - 400;\n      const y = Math.random() * 50 + 50;\n      const z = Math.random() * 800 - 400;\n      const size = Math.random() * 40 + 20;\n      vertices.push(x - size, y, z - size);\n      vertices.push(x + size, y, z - size);\n      vertices.push(x - size, y, z + size);\n      vertices.push(x + size, y, z - size);\n      vertices.push(x + size, y, z + size);\n      vertices.push(x - size, y, z + size);\n    }\n    this.setAttribute(\"position\", new BufferAttribute(new Float32Array(vertices), 3));\n  }\n}\nclass TreesGeometry extends BufferGeometry {\n  constructor(landscape) {\n    super();\n    const vertices = [];\n    const colors = [];\n    const raycaster = new Raycaster();\n    raycaster.ray.direction.set(0, -1, 0);\n    const _color = new Color();\n    for (let i = 0; i < 2e3; i++) {\n      const x = Math.random() * 500 - 250;\n      const z = Math.random() * 500 - 250;\n      raycaster.ray.origin.set(x, 50, z);\n      const intersections = raycaster.intersectObject(landscape);\n      if (intersections.length === 0)\n        continue;\n      const y = intersections[0].point.y;\n      const height = Math.random() * 5 + 0.5;\n      let angle = Math.random() * Math.PI * 2;\n      vertices.push(x + Math.sin(angle), y, z + Math.cos(angle));\n      vertices.push(x, y + height, z);\n      vertices.push(x + Math.sin(angle + Math.PI), y, z + Math.cos(angle + Math.PI));\n      angle += Math.PI / 2;\n      vertices.push(x + Math.sin(angle), y, z + Math.cos(angle));\n      vertices.push(x, y + height, z);\n      vertices.push(x + Math.sin(angle + Math.PI), y, z + Math.cos(angle + Math.PI));\n      const random = Math.random() * 0.1;\n      for (let j = 0; j < 6; j++) {\n        _color.setRGB(0.2 + random, 0.4 + random, 0, \"srgb\");\n        colors.push(_color.r, _color.g, _color.b);\n      }\n    }\n    this.setAttribute(\"position\", new BufferAttribute(new Float32Array(vertices), 3));\n    this.setAttribute(\"color\", new BufferAttribute(new Float32Array(colors), 3));\n  }\n}\nexport {\n  RollerCoasterGeometry,\n  RollerCoasterLiftersGeometry,\n  RollerCoasterShadowGeometry,\n  SkyGeometry,\n  TreesGeometry\n};\n//# sourceMappingURL=RollerCoaster.js.map\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1465, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1471, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/misc/MD2Character.js"],"sourcesContent":["import { Object3D, Box3, AnimationMixer, MeshLambertMaterial, Mesh, TextureLoader, UVMapping } from \"three\";\nimport { MD2Loader } from \"../loaders/MD2Loader.js\";\nclass MD2Character {\n  constructor() {\n    this.scale = 1;\n    this.animationFPS = 6;\n    this.root = new Object3D();\n    this.meshBody = null;\n    this.meshWeapon = null;\n    this.skinsBody = [];\n    this.skinsWeapon = [];\n    this.weapons = [];\n    this.activeAnimation = null;\n    this.mixer = null;\n    this.onLoadComplete = function() {\n    };\n    this.loadCounter = 0;\n  }\n  loadParts(config) {\n    const scope = this;\n    function createPart(geometry, skinMap) {\n      const materialWireframe = new MeshLambertMaterial({\n        color: 16755200,\n        wireframe: true,\n        morphTargets: true,\n        morphNormals: true\n      });\n      const materialTexture = new MeshLambertMaterial({\n        color: 16777215,\n        wireframe: false,\n        map: skinMap,\n        morphTargets: true,\n        morphNormals: true\n      });\n      const mesh = new Mesh(geometry, materialTexture);\n      mesh.rotation.y = -Math.PI / 2;\n      mesh.castShadow = true;\n      mesh.receiveShadow = true;\n      mesh.materialTexture = materialTexture;\n      mesh.materialWireframe = materialWireframe;\n      return mesh;\n    }\n    function loadTextures(baseUrl, textureUrls) {\n      const textureLoader = new TextureLoader();\n      const textures = [];\n      for (let i = 0; i < textureUrls.length; i++) {\n        textures[i] = textureLoader.load(baseUrl + textureUrls[i], checkLoadingComplete);\n        textures[i].mapping = UVMapping;\n        textures[i].name = textureUrls[i];\n        if (\"colorSpace\" in textures[i])\n          textures[i].colorSpace = \"srgb\";\n        else\n          textures[i].encoding = 3001;\n      }\n      return textures;\n    }\n    function checkLoadingComplete() {\n      scope.loadCounter -= 1;\n      if (scope.loadCounter === 0)\n        scope.onLoadComplete();\n    }\n    this.loadCounter = config.weapons.length * 2 + config.skins.length + 1;\n    const weaponsTextures = [];\n    for (let i = 0; i < config.weapons.length; i++)\n      weaponsTextures[i] = config.weapons[i][1];\n    this.skinsBody = loadTextures(config.baseUrl + \"skins/\", config.skins);\n    this.skinsWeapon = loadTextures(config.baseUrl + \"skins/\", weaponsTextures);\n    const loader = new MD2Loader();\n    loader.load(config.baseUrl + config.body, function(geo) {\n      const boundingBox = new Box3();\n      boundingBox.setFromBufferAttribute(geo.attributes.position);\n      scope.root.position.y = -scope.scale * boundingBox.min.y;\n      const mesh = createPart(geo, scope.skinsBody[0]);\n      mesh.scale.set(scope.scale, scope.scale, scope.scale);\n      scope.root.add(mesh);\n      scope.meshBody = mesh;\n      scope.meshBody.clipOffset = 0;\n      scope.activeAnimationClipName = mesh.geometry.animations[0].name;\n      scope.mixer = new AnimationMixer(mesh);\n      checkLoadingComplete();\n    });\n    const generateCallback = function(index, name) {\n      return function(geo) {\n        const mesh = createPart(geo, scope.skinsWeapon[index]);\n        mesh.scale.set(scope.scale, scope.scale, scope.scale);\n        mesh.visible = false;\n        mesh.name = name;\n        scope.root.add(mesh);\n        scope.weapons[index] = mesh;\n        scope.meshWeapon = mesh;\n        checkLoadingComplete();\n      };\n    };\n    for (let i = 0; i < config.weapons.length; i++) {\n      loader.load(config.baseUrl + config.weapons[i][0], generateCallback(i, config.weapons[i][0]));\n    }\n  }\n  setPlaybackRate(rate) {\n    if (rate !== 0) {\n      this.mixer.timeScale = 1 / rate;\n    } else {\n      this.mixer.timeScale = 0;\n    }\n  }\n  setWireframe(wireframeEnabled) {\n    if (wireframeEnabled) {\n      if (this.meshBody)\n        this.meshBody.material = this.meshBody.materialWireframe;\n      if (this.meshWeapon)\n        this.meshWeapon.material = this.meshWeapon.materialWireframe;\n    } else {\n      if (this.meshBody)\n        this.meshBody.material = this.meshBody.materialTexture;\n      if (this.meshWeapon)\n        this.meshWeapon.material = this.meshWeapon.materialTexture;\n    }\n  }\n  setSkin(index) {\n    if (this.meshBody && this.meshBody.material.wireframe === false) {\n      this.meshBody.material.map = this.skinsBody[index];\n    }\n  }\n  setWeapon(index) {\n    for (let i = 0; i < this.weapons.length; i++)\n      this.weapons[i].visible = false;\n    const activeWeapon = this.weapons[index];\n    if (activeWeapon) {\n      activeWeapon.visible = true;\n      this.meshWeapon = activeWeapon;\n      this.syncWeaponAnimation();\n    }\n  }\n  setAnimation(clipName) {\n    if (this.meshBody) {\n      if (this.meshBody.activeAction) {\n        this.meshBody.activeAction.stop();\n        this.meshBody.activeAction = null;\n      }\n      const action = this.mixer.clipAction(clipName, this.meshBody);\n      if (action) {\n        this.meshBody.activeAction = action.play();\n      }\n    }\n    this.activeClipName = clipName;\n    this.syncWeaponAnimation();\n  }\n  syncWeaponAnimation() {\n    const clipName = this.activeClipName;\n    if (this.meshWeapon) {\n      if (this.meshWeapon.activeAction) {\n        this.meshWeapon.activeAction.stop();\n        this.meshWeapon.activeAction = null;\n      }\n      const action = this.mixer.clipAction(clipName, this.meshWeapon);\n      if (action) {\n        this.meshWeapon.activeAction = action.syncWith(this.meshBody.activeAction).play();\n      }\n    }\n  }\n  update(delta) {\n    if (this.mixer)\n      this.mixer.update(delta);\n  }\n}\nexport {\n  MD2Character\n};\n//# sourceMappingURL=MD2Character.js.map\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1631, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1637, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/misc/ProgressiveLightmap.js"],"sourcesContent":["import { Scene, WebGLRenderTarget, FloatType, MeshPhongMaterial, MeshBasicMaterial, DoubleSide, PlaneGeometry, Mesh } from \"three\";\nimport potpack from \"potpack\";\nimport { UV1 } from \"../_polyfill/uv1.js\";\nclass ProgressiveLightMap {\n  constructor(renderer, res = 1024) {\n    this.renderer = renderer;\n    this.res = res;\n    this.lightMapContainers = [];\n    this.compiled = false;\n    this.scene = new Scene();\n    this.scene.background = null;\n    this.tinyTarget = new WebGLRenderTarget(1, 1);\n    this.buffer1Active = false;\n    this.firstUpdate = true;\n    this.warned = false;\n    const format = /(Android|iPad|iPhone|iPod)/g.test(navigator.userAgent) ? alfFloatType : FloatType;\n    this.progressiveLightMap1 = new WebGLRenderTarget(this.res, this.res, { type: format });\n    this.progressiveLightMap2 = new WebGLRenderTarget(this.res, this.res, { type: format });\n    this.uvMat = new MeshPhongMaterial();\n    this.uvMat.uniforms = {};\n    this.uvMat.onBeforeCompile = (shader) => {\n      shader.vertexShader = \"#define USE_LIGHTMAP\\n\" + shader.vertexShader.slice(0, -1) + `\tgl_Position = vec4((${UV1} - 0.5) * 2.0, 1.0, 1.0); }`;\n      const bodyStart = shader.fragmentShader.indexOf(\"void main() {\");\n      shader.fragmentShader = `varying vec2 v${UV1 === \"uv1\" ? UV1 : \"Uv2\"};\n` + shader.fragmentShader.slice(0, bodyStart) + \"\tuniform sampler2D previousShadowMap;\\n\tuniform float averagingWindow;\\n\" + shader.fragmentShader.slice(bodyStart - 1, -1) + `\nvec3 texelOld = texture2D(previousShadowMap, v${UV1 === \"uv1\" ? UV1 : \"Uv2\"}).rgb;\n\t\t\t\tgl_FragColor.rgb = mix(texelOld, gl_FragColor.rgb, 1.0/averagingWindow);\n\t\t\t}`;\n      shader.uniforms.previousShadowMap = { value: this.progressiveLightMap1.texture };\n      shader.uniforms.averagingWindow = { value: 100 };\n      this.uvMat.uniforms = shader.uniforms;\n      this.uvMat.userData.shader = shader;\n      this.compiled = true;\n    };\n  }\n  /**\n   * Sets these objects' materials' lightmaps and modifies their uv1's.\n   * @param {Object3D} objects An array of objects and lights to set up your lightmap.\n   */\n  addObjectsToLightMap(objects) {\n    this.uv_boxes = [];\n    const padding = 3 / this.res;\n    for (let ob = 0; ob < objects.length; ob++) {\n      const object = objects[ob];\n      if (object.isLight) {\n        this.scene.attach(object);\n        continue;\n      }\n      if (!object.geometry.hasAttribute(\"uv\")) {\n        console.warn(\"All lightmap objects need UVs!\");\n        continue;\n      }\n      if (this.blurringPlane == null) {\n        this._initializeBlurPlane(this.res, this.progressiveLightMap1);\n      }\n      object.material.lightMap = this.progressiveLightMap2.texture;\n      object.material.dithering = true;\n      object.castShadow = true;\n      object.receiveShadow = true;\n      object.renderOrder = 1e3 + ob;\n      this.uv_boxes.push({ w: 1 + padding * 2, h: 1 + padding * 2, index: ob });\n      this.lightMapContainers.push({ basicMat: object.material, object });\n      this.compiled = false;\n    }\n    const dimensions = potpack(this.uv_boxes);\n    this.uv_boxes.forEach((box) => {\n      const uv1 = objects[box.index].geometry.getAttribute(\"uv\").clone();\n      for (let i = 0; i < uv1.array.length; i += uv1.itemSize) {\n        uv1.array[i] = (uv1.array[i] + box.x + padding) / dimensions.w;\n        uv1.array[i + 1] = (uv1.array[i + 1] + box.y + padding) / dimensions.h;\n      }\n      objects[box.index].geometry.setAttribute(UV1, uv1);\n      objects[box.index].geometry.getAttribute(UV1).needsUpdate = true;\n    });\n  }\n  /**\n   * This function renders each mesh one at a time into their respective surface maps\n   * @param {Camera} camera Standard Rendering Camera\n   * @param {number} blendWindow When >1, samples will accumulate over time.\n   * @param {boolean} blurEdges  Whether to fix UV Edges via blurring\n   */\n  update(camera, blendWindow = 100, blurEdges = true) {\n    if (this.blurringPlane == null) {\n      return;\n    }\n    const oldTarget = this.renderer.getRenderTarget();\n    this.blurringPlane.visible = blurEdges;\n    for (let l = 0; l < this.lightMapContainers.length; l++) {\n      this.lightMapContainers[l].object.oldScene = this.lightMapContainers[l].object.parent;\n      this.scene.attach(this.lightMapContainers[l].object);\n    }\n    if (this.firstUpdate) {\n      this.renderer.setRenderTarget(this.tinyTarget);\n      this.renderer.render(this.scene, camera);\n      this.firstUpdate = false;\n    }\n    for (let l = 0; l < this.lightMapContainers.length; l++) {\n      this.uvMat.uniforms.averagingWindow = { value: blendWindow };\n      this.lightMapContainers[l].object.material = this.uvMat;\n      this.lightMapContainers[l].object.oldFrustumCulled = this.lightMapContainers[l].object.frustumCulled;\n      this.lightMapContainers[l].object.frustumCulled = false;\n    }\n    const activeMap = this.buffer1Active ? this.progressiveLightMap1 : this.progressiveLightMap2;\n    const inactiveMap = this.buffer1Active ? this.progressiveLightMap2 : this.progressiveLightMap1;\n    this.renderer.setRenderTarget(activeMap);\n    this.uvMat.uniforms.previousShadowMap = { value: inactiveMap.texture };\n    this.blurringPlane.material.uniforms.previousShadowMap = { value: inactiveMap.texture };\n    this.buffer1Active = !this.buffer1Active;\n    this.renderer.render(this.scene, camera);\n    for (let l = 0; l < this.lightMapContainers.length; l++) {\n      this.lightMapContainers[l].object.frustumCulled = this.lightMapContainers[l].object.oldFrustumCulled;\n      this.lightMapContainers[l].object.material = this.lightMapContainers[l].basicMat;\n      this.lightMapContainers[l].object.oldScene.attach(this.lightMapContainers[l].object);\n    }\n    this.renderer.setRenderTarget(oldTarget);\n  }\n  /** DEBUG\n   * Draw the lightmap in the main scene.  Call this after adding the objects to it.\n   * @param {boolean} visible Whether the debug plane should be visible\n   * @param {Vector3} position Where the debug plane should be drawn\n   */\n  showDebugLightmap(visible, position = void 0) {\n    if (this.lightMapContainers.length == 0) {\n      if (!this.warned) {\n        console.warn(\"Call this after adding the objects!\");\n        this.warned = true;\n      }\n      return;\n    }\n    if (this.labelMesh == null) {\n      this.labelMaterial = new MeshBasicMaterial({\n        map: this.progressiveLightMap1.texture,\n        side: DoubleSide\n      });\n      this.labelPlane = new PlaneGeometry(100, 100);\n      this.labelMesh = new Mesh(this.labelPlane, this.labelMaterial);\n      this.labelMesh.position.y = 250;\n      this.lightMapContainers[0].object.parent.add(this.labelMesh);\n    }\n    if (position != void 0) {\n      this.labelMesh.position.copy(position);\n    }\n    this.labelMesh.visible = visible;\n  }\n  /**\n   * INTERNAL Creates the Blurring Plane\n   * @param {number} res The square resolution of this object's lightMap.\n   * @param {WebGLRenderTexture} lightMap The lightmap to initialize the plane with.\n   */\n  _initializeBlurPlane(res, lightMap = null) {\n    const blurMaterial = new MeshBasicMaterial();\n    blurMaterial.uniforms = {\n      previousShadowMap: { value: null },\n      pixelOffset: { value: 1 / res },\n      polygonOffset: true,\n      polygonOffsetFactor: -1,\n      polygonOffsetUnits: 3\n    };\n    blurMaterial.onBeforeCompile = (shader) => {\n      shader.vertexShader = \"#define USE_UV\\n\" + shader.vertexShader.slice(0, -1) + \"\tgl_Position = vec4((uv - 0.5) * 2.0, 1.0, 1.0); }\";\n      const bodyStart = shader.fragmentShader.indexOf(\"void main() {\");\n      shader.fragmentShader = \"#define USE_UV\\n\" + shader.fragmentShader.slice(0, bodyStart) + \"\tuniform sampler2D previousShadowMap;\\n\tuniform float pixelOffset;\\n\" + shader.fragmentShader.slice(bodyStart - 1, -1) + `\tgl_FragColor.rgb = (\n\t\t\t  texture2D(previousShadowMap, vUv + vec2( pixelOffset,  0.0        )).rgb +\n\t\t\t  texture2D(previousShadowMap, vUv + vec2( 0.0        ,  pixelOffset)).rgb +\n\t\t\t  texture2D(previousShadowMap, vUv + vec2( 0.0        , -pixelOffset)).rgb +\n\t\t\t  texture2D(previousShadowMap, vUv + vec2(-pixelOffset,  0.0        )).rgb +\n\t\t\t  texture2D(previousShadowMap, vUv + vec2( pixelOffset,  pixelOffset)).rgb +\n\t\t\t  texture2D(previousShadowMap, vUv + vec2(-pixelOffset,  pixelOffset)).rgb +\n\t\t\t  texture2D(previousShadowMap, vUv + vec2( pixelOffset, -pixelOffset)).rgb +\n\t\t\t  texture2D(previousShadowMap, vUv + vec2(-pixelOffset, -pixelOffset)).rgb)/8.0;\n\t\t}`;\n      shader.uniforms.previousShadowMap = { value: lightMap.texture };\n      shader.uniforms.pixelOffset = { value: 0.5 / res };\n      blurMaterial.uniforms = shader.uniforms;\n      blurMaterial.userData.shader = shader;\n      this.compiled = true;\n    };\n    this.blurringPlane = new Mesh(new PlaneGeometry(1, 1), blurMaterial);\n    this.blurringPlane.name = \"Blurring Plane\";\n    this.blurringPlane.frustumCulled = false;\n    this.blurringPlane.renderOrder = 0;\n    this.blurringPlane.material.depthWrite = false;\n    this.scene.add(this.blurringPlane);\n  }\n}\nexport {\n  ProgressiveLightMap\n};\n//# sourceMappingURL=ProgressiveLightmap.js.map\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1859, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1865, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/math/ConvexHull.js"],"sourcesContent":["import { Vector3, Line3, Plane, Triangle } from \"three\";\nconst Visible = 0;\nconst Deleted = 1;\nconst _v1 = /* @__PURE__ */ new Vector3();\nconst _line3 = /* @__PURE__ */ new Line3();\nconst _plane = /* @__PURE__ */ new Plane();\nconst _closestPoint = /* @__PURE__ */ new Vector3();\nconst _triangle = /* @__PURE__ */ new Triangle();\nclass ConvexHull {\n  constructor() {\n    this.tolerance = -1;\n    this.faces = [];\n    this.newFaces = [];\n    this.assigned = new VertexList();\n    this.unassigned = new VertexList();\n    this.vertices = [];\n  }\n  setFromPoints(points) {\n    if (points.length >= 4) {\n      this.makeEmpty();\n      for (let i = 0, l = points.length; i < l; i++) {\n        this.vertices.push(new VertexNode(points[i]));\n      }\n      this.compute();\n    }\n    return this;\n  }\n  setFromObject(object) {\n    const points = [];\n    object.updateMatrixWorld(true);\n    object.traverse(function(node) {\n      const geometry = node.geometry;\n      if (geometry !== void 0) {\n        const attribute = geometry.attributes.position;\n        if (attribute !== void 0) {\n          for (let i = 0, l = attribute.count; i < l; i++) {\n            const point = new Vector3();\n            point.fromBufferAttribute(attribute, i).applyMatrix4(node.matrixWorld);\n            points.push(point);\n          }\n        }\n      }\n    });\n    return this.setFromPoints(points);\n  }\n  containsPoint(point) {\n    const faces = this.faces;\n    for (let i = 0, l = faces.length; i < l; i++) {\n      const face = faces[i];\n      if (face.distanceToPoint(point) > this.tolerance)\n        return false;\n    }\n    return true;\n  }\n  intersectRay(ray, target) {\n    const faces = this.faces;\n    let tNear = -Infinity;\n    let tFar = Infinity;\n    for (let i = 0, l = faces.length; i < l; i++) {\n      const face = faces[i];\n      const vN = face.distanceToPoint(ray.origin);\n      const vD = face.normal.dot(ray.direction);\n      if (vN > 0 && vD >= 0)\n        return null;\n      const t = vD !== 0 ? -vN / vD : 0;\n      if (t <= 0)\n        continue;\n      if (vD > 0) {\n        tFar = Math.min(t, tFar);\n      } else {\n        tNear = Math.max(t, tNear);\n      }\n      if (tNear > tFar) {\n        return null;\n      }\n    }\n    if (tNear !== -Infinity) {\n      ray.at(tNear, target);\n    } else {\n      ray.at(tFar, target);\n    }\n    return target;\n  }\n  intersectsRay(ray) {\n    return this.intersectRay(ray, _v1) !== null;\n  }\n  makeEmpty() {\n    this.faces = [];\n    this.vertices = [];\n    return this;\n  }\n  // Adds a vertex to the 'assigned' list of vertices and assigns it to the given face\n  addVertexToFace(vertex, face) {\n    vertex.face = face;\n    if (face.outside === null) {\n      this.assigned.append(vertex);\n    } else {\n      this.assigned.insertBefore(face.outside, vertex);\n    }\n    face.outside = vertex;\n    return this;\n  }\n  // Removes a vertex from the 'assigned' list of vertices and from the given face\n  removeVertexFromFace(vertex, face) {\n    if (vertex === face.outside) {\n      if (vertex.next !== null && vertex.next.face === face) {\n        face.outside = vertex.next;\n      } else {\n        face.outside = null;\n      }\n    }\n    this.assigned.remove(vertex);\n    return this;\n  }\n  // Removes all the visible vertices that a given face is able to see which are stored in the 'assigned' vertex list\n  removeAllVerticesFromFace(face) {\n    if (face.outside !== null) {\n      const start = face.outside;\n      let end = face.outside;\n      while (end.next !== null && end.next.face === face) {\n        end = end.next;\n      }\n      this.assigned.removeSubList(start, end);\n      start.prev = end.next = null;\n      face.outside = null;\n      return start;\n    }\n  }\n  // Removes all the visible vertices that 'face' is able to see\n  deleteFaceVertices(face, absorbingFace) {\n    const faceVertices = this.removeAllVerticesFromFace(face);\n    if (faceVertices !== void 0) {\n      if (absorbingFace === void 0) {\n        this.unassigned.appendChain(faceVertices);\n      } else {\n        let vertex = faceVertices;\n        do {\n          const nextVertex = vertex.next;\n          const distance = absorbingFace.distanceToPoint(vertex.point);\n          if (distance > this.tolerance) {\n            this.addVertexToFace(vertex, absorbingFace);\n          } else {\n            this.unassigned.append(vertex);\n          }\n          vertex = nextVertex;\n        } while (vertex !== null);\n      }\n    }\n    return this;\n  }\n  // Reassigns as many vertices as possible from the unassigned list to the new faces\n  resolveUnassignedPoints(newFaces) {\n    if (this.unassigned.isEmpty() === false) {\n      let vertex = this.unassigned.first();\n      do {\n        const nextVertex = vertex.next;\n        let maxDistance = this.tolerance;\n        let maxFace = null;\n        for (let i = 0; i < newFaces.length; i++) {\n          const face = newFaces[i];\n          if (face.mark === Visible) {\n            const distance = face.distanceToPoint(vertex.point);\n            if (distance > maxDistance) {\n              maxDistance = distance;\n              maxFace = face;\n            }\n            if (maxDistance > 1e3 * this.tolerance)\n              break;\n          }\n        }\n        if (maxFace !== null) {\n          this.addVertexToFace(vertex, maxFace);\n        }\n        vertex = nextVertex;\n      } while (vertex !== null);\n    }\n    return this;\n  }\n  // Computes the extremes of a simplex which will be the initial hull\n  computeExtremes() {\n    const min = new Vector3();\n    const max = new Vector3();\n    const minVertices = [];\n    const maxVertices = [];\n    for (let i = 0; i < 3; i++) {\n      minVertices[i] = maxVertices[i] = this.vertices[0];\n    }\n    min.copy(this.vertices[0].point);\n    max.copy(this.vertices[0].point);\n    for (let i = 0, l = this.vertices.length; i < l; i++) {\n      const vertex = this.vertices[i];\n      const point = vertex.point;\n      for (let j = 0; j < 3; j++) {\n        if (point.getComponent(j) < min.getComponent(j)) {\n          min.setComponent(j, point.getComponent(j));\n          minVertices[j] = vertex;\n        }\n      }\n      for (let j = 0; j < 3; j++) {\n        if (point.getComponent(j) > max.getComponent(j)) {\n          max.setComponent(j, point.getComponent(j));\n          maxVertices[j] = vertex;\n        }\n      }\n    }\n    this.tolerance = 3 * Number.EPSILON * (Math.max(Math.abs(min.x), Math.abs(max.x)) + Math.max(Math.abs(min.y), Math.abs(max.y)) + Math.max(Math.abs(min.z), Math.abs(max.z)));\n    return { min: minVertices, max: maxVertices };\n  }\n  // Computes the initial simplex assigning to its faces all the points\n  // that are candidates to form part of the hull\n  computeInitialHull() {\n    const vertices = this.vertices;\n    const extremes = this.computeExtremes();\n    const min = extremes.min;\n    const max = extremes.max;\n    let maxDistance = 0;\n    let index = 0;\n    for (let i = 0; i < 3; i++) {\n      const distance = max[i].point.getComponent(i) - min[i].point.getComponent(i);\n      if (distance > maxDistance) {\n        maxDistance = distance;\n        index = i;\n      }\n    }\n    const v0 = min[index];\n    const v1 = max[index];\n    let v2;\n    let v3;\n    maxDistance = 0;\n    _line3.set(v0.point, v1.point);\n    for (let i = 0, l = this.vertices.length; i < l; i++) {\n      const vertex = vertices[i];\n      if (vertex !== v0 && vertex !== v1) {\n        _line3.closestPointToPoint(vertex.point, true, _closestPoint);\n        const distance = _closestPoint.distanceToSquared(vertex.point);\n        if (distance > maxDistance) {\n          maxDistance = distance;\n          v2 = vertex;\n        }\n      }\n    }\n    maxDistance = -1;\n    _plane.setFromCoplanarPoints(v0.point, v1.point, v2.point);\n    for (let i = 0, l = this.vertices.length; i < l; i++) {\n      const vertex = vertices[i];\n      if (vertex !== v0 && vertex !== v1 && vertex !== v2) {\n        const distance = Math.abs(_plane.distanceToPoint(vertex.point));\n        if (distance > maxDistance) {\n          maxDistance = distance;\n          v3 = vertex;\n        }\n      }\n    }\n    const faces = [];\n    if (_plane.distanceToPoint(v3.point) < 0) {\n      faces.push(Face.create(v0, v1, v2), Face.create(v3, v1, v0), Face.create(v3, v2, v1), Face.create(v3, v0, v2));\n      for (let i = 0; i < 3; i++) {\n        const j = (i + 1) % 3;\n        faces[i + 1].getEdge(2).setTwin(faces[0].getEdge(j));\n        faces[i + 1].getEdge(1).setTwin(faces[j + 1].getEdge(0));\n      }\n    } else {\n      faces.push(Face.create(v0, v2, v1), Face.create(v3, v0, v1), Face.create(v3, v1, v2), Face.create(v3, v2, v0));\n      for (let i = 0; i < 3; i++) {\n        const j = (i + 1) % 3;\n        faces[i + 1].getEdge(2).setTwin(faces[0].getEdge((3 - i) % 3));\n        faces[i + 1].getEdge(0).setTwin(faces[j + 1].getEdge(1));\n      }\n    }\n    for (let i = 0; i < 4; i++) {\n      this.faces.push(faces[i]);\n    }\n    for (let i = 0, l = vertices.length; i < l; i++) {\n      const vertex = vertices[i];\n      if (vertex !== v0 && vertex !== v1 && vertex !== v2 && vertex !== v3) {\n        maxDistance = this.tolerance;\n        let maxFace = null;\n        for (let j = 0; j < 4; j++) {\n          const distance = this.faces[j].distanceToPoint(vertex.point);\n          if (distance > maxDistance) {\n            maxDistance = distance;\n            maxFace = this.faces[j];\n          }\n        }\n        if (maxFace !== null) {\n          this.addVertexToFace(vertex, maxFace);\n        }\n      }\n    }\n    return this;\n  }\n  // Removes inactive faces\n  reindexFaces() {\n    const activeFaces = [];\n    for (let i = 0; i < this.faces.length; i++) {\n      const face = this.faces[i];\n      if (face.mark === Visible) {\n        activeFaces.push(face);\n      }\n    }\n    this.faces = activeFaces;\n    return this;\n  }\n  // Finds the next vertex to create faces with the current hull\n  nextVertexToAdd() {\n    if (this.assigned.isEmpty() === false) {\n      let eyeVertex, maxDistance = 0;\n      const eyeFace = this.assigned.first().face;\n      let vertex = eyeFace.outside;\n      do {\n        const distance = eyeFace.distanceToPoint(vertex.point);\n        if (distance > maxDistance) {\n          maxDistance = distance;\n          eyeVertex = vertex;\n        }\n        vertex = vertex.next;\n      } while (vertex !== null && vertex.face === eyeFace);\n      return eyeVertex;\n    }\n  }\n  // Computes a chain of half edges in CCW order called the 'horizon'.\n  // For an edge to be part of the horizon it must join a face that can see\n  // 'eyePoint' and a face that cannot see 'eyePoint'.\n  computeHorizon(eyePoint, crossEdge, face, horizon) {\n    this.deleteFaceVertices(face);\n    face.mark = Deleted;\n    let edge;\n    if (crossEdge === null) {\n      edge = crossEdge = face.getEdge(0);\n    } else {\n      edge = crossEdge.next;\n    }\n    do {\n      const twinEdge = edge.twin;\n      const oppositeFace = twinEdge.face;\n      if (oppositeFace.mark === Visible) {\n        if (oppositeFace.distanceToPoint(eyePoint) > this.tolerance) {\n          this.computeHorizon(eyePoint, twinEdge, oppositeFace, horizon);\n        } else {\n          horizon.push(edge);\n        }\n      }\n      edge = edge.next;\n    } while (edge !== crossEdge);\n    return this;\n  }\n  // Creates a face with the vertices 'eyeVertex.point', 'horizonEdge.tail' and 'horizonEdge.head' in CCW order\n  addAdjoiningFace(eyeVertex, horizonEdge) {\n    const face = Face.create(eyeVertex, horizonEdge.tail(), horizonEdge.head());\n    this.faces.push(face);\n    face.getEdge(-1).setTwin(horizonEdge.twin);\n    return face.getEdge(0);\n  }\n  //  Adds 'horizon.length' faces to the hull, each face will be linked with the\n  //  horizon opposite face and the face on the left/right\n  addNewFaces(eyeVertex, horizon) {\n    this.newFaces = [];\n    let firstSideEdge = null;\n    let previousSideEdge = null;\n    for (let i = 0; i < horizon.length; i++) {\n      const horizonEdge = horizon[i];\n      const sideEdge = this.addAdjoiningFace(eyeVertex, horizonEdge);\n      if (firstSideEdge === null) {\n        firstSideEdge = sideEdge;\n      } else {\n        sideEdge.next.setTwin(previousSideEdge);\n      }\n      this.newFaces.push(sideEdge.face);\n      previousSideEdge = sideEdge;\n    }\n    firstSideEdge.next.setTwin(previousSideEdge);\n    return this;\n  }\n  // Adds a vertex to the hull\n  addVertexToHull(eyeVertex) {\n    const horizon = [];\n    this.unassigned.clear();\n    this.removeVertexFromFace(eyeVertex, eyeVertex.face);\n    this.computeHorizon(eyeVertex.point, null, eyeVertex.face, horizon);\n    this.addNewFaces(eyeVertex, horizon);\n    this.resolveUnassignedPoints(this.newFaces);\n    return this;\n  }\n  cleanup() {\n    this.assigned.clear();\n    this.unassigned.clear();\n    this.newFaces = [];\n    return this;\n  }\n  compute() {\n    let vertex;\n    this.computeInitialHull();\n    while ((vertex = this.nextVertexToAdd()) !== void 0) {\n      this.addVertexToHull(vertex);\n    }\n    this.reindexFaces();\n    this.cleanup();\n    return this;\n  }\n}\nconst Face = /* @__PURE__ */ (() => {\n  class Face2 {\n    constructor() {\n      this.normal = new Vector3();\n      this.midpoint = new Vector3();\n      this.area = 0;\n      this.constant = 0;\n      this.outside = null;\n      this.mark = Visible;\n      this.edge = null;\n    }\n    static create(a, b, c) {\n      const face = new Face2();\n      const e0 = new HalfEdge(a, face);\n      const e1 = new HalfEdge(b, face);\n      const e2 = new HalfEdge(c, face);\n      e0.next = e2.prev = e1;\n      e1.next = e0.prev = e2;\n      e2.next = e1.prev = e0;\n      face.edge = e0;\n      return face.compute();\n    }\n    getEdge(i) {\n      let edge = this.edge;\n      while (i > 0) {\n        edge = edge.next;\n        i--;\n      }\n      while (i < 0) {\n        edge = edge.prev;\n        i++;\n      }\n      return edge;\n    }\n    compute() {\n      const a = this.edge.tail();\n      const b = this.edge.head();\n      const c = this.edge.next.head();\n      _triangle.set(a.point, b.point, c.point);\n      _triangle.getNormal(this.normal);\n      _triangle.getMidpoint(this.midpoint);\n      this.area = _triangle.getArea();\n      this.constant = this.normal.dot(this.midpoint);\n      return this;\n    }\n    distanceToPoint(point) {\n      return this.normal.dot(point) - this.constant;\n    }\n  }\n  return Face2;\n})();\nclass HalfEdge {\n  constructor(vertex, face) {\n    this.vertex = vertex;\n    this.prev = null;\n    this.next = null;\n    this.twin = null;\n    this.face = face;\n  }\n  head() {\n    return this.vertex;\n  }\n  tail() {\n    return this.prev ? this.prev.vertex : null;\n  }\n  length() {\n    const head = this.head();\n    const tail = this.tail();\n    if (tail !== null) {\n      return tail.point.distanceTo(head.point);\n    }\n    return -1;\n  }\n  lengthSquared() {\n    const head = this.head();\n    const tail = this.tail();\n    if (tail !== null) {\n      return tail.point.distanceToSquared(head.point);\n    }\n    return -1;\n  }\n  setTwin(edge) {\n    this.twin = edge;\n    edge.twin = this;\n    return this;\n  }\n}\nclass VertexNode {\n  constructor(point) {\n    this.point = point;\n    this.prev = null;\n    this.next = null;\n    this.face = null;\n  }\n}\nclass VertexList {\n  constructor() {\n    this.head = null;\n    this.tail = null;\n  }\n  first() {\n    return this.head;\n  }\n  last() {\n    return this.tail;\n  }\n  clear() {\n    this.head = this.tail = null;\n    return this;\n  }\n  // Inserts a vertex before the target vertex\n  insertBefore(target, vertex) {\n    vertex.prev = target.prev;\n    vertex.next = target;\n    if (vertex.prev === null) {\n      this.head = vertex;\n    } else {\n      vertex.prev.next = vertex;\n    }\n    target.prev = vertex;\n    return this;\n  }\n  // Inserts a vertex after the target vertex\n  insertAfter(target, vertex) {\n    vertex.prev = target;\n    vertex.next = target.next;\n    if (vertex.next === null) {\n      this.tail = vertex;\n    } else {\n      vertex.next.prev = vertex;\n    }\n    target.next = vertex;\n    return this;\n  }\n  // Appends a vertex to the end of the linked list\n  append(vertex) {\n    if (this.head === null) {\n      this.head = vertex;\n    } else {\n      this.tail.next = vertex;\n    }\n    vertex.prev = this.tail;\n    vertex.next = null;\n    this.tail = vertex;\n    return this;\n  }\n  // Appends a chain of vertices where 'vertex' is the head.\n  appendChain(vertex) {\n    if (this.head === null) {\n      this.head = vertex;\n    } else {\n      this.tail.next = vertex;\n    }\n    vertex.prev = this.tail;\n    while (vertex.next !== null) {\n      vertex = vertex.next;\n    }\n    this.tail = vertex;\n    return this;\n  }\n  // Removes a vertex from the linked list\n  remove(vertex) {\n    if (vertex.prev === null) {\n      this.head = vertex.next;\n    } else {\n      vertex.prev.next = vertex.next;\n    }\n    if (vertex.next === null) {\n      this.tail = vertex.prev;\n    } else {\n      vertex.next.prev = vertex.prev;\n    }\n    return this;\n  }\n  // Removes a list of vertices whose 'head' is 'a' and whose 'tail' is b\n  removeSubList(a, b) {\n    if (a.prev === null) {\n      this.head = b.next;\n    } else {\n      a.prev.next = b.next;\n    }\n    if (b.next === null) {\n      this.tail = a.prev;\n    } else {\n      b.next.prev = a.prev;\n    }\n    return this;\n  }\n  isEmpty() {\n    return this.head === null;\n  }\n}\nexport {\n  ConvexHull,\n  Face,\n  HalfEdge,\n  VertexList,\n  VertexNode\n};\n//# sourceMappingURL=ConvexHull.js.map\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2466, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2472, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/math/SimplexNoise.js"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nclass SimplexNoise {\n  /**\n   * You can pass in a random number generator object if you like.\n   * It is assumed to have a random() method.\n   */\n  constructor(r = Math) {\n    __publicField(this, \"grad3\", [\n      [1, 1, 0],\n      [-1, 1, 0],\n      [1, -1, 0],\n      [-1, -1, 0],\n      [1, 0, 1],\n      [-1, 0, 1],\n      [1, 0, -1],\n      [-1, 0, -1],\n      [0, 1, 1],\n      [0, -1, 1],\n      [0, 1, -1],\n      [0, -1, -1]\n    ]);\n    __publicField(this, \"grad4\", [\n      [0, 1, 1, 1],\n      [0, 1, 1, -1],\n      [0, 1, -1, 1],\n      [0, 1, -1, -1],\n      [0, -1, 1, 1],\n      [0, -1, 1, -1],\n      [0, -1, -1, 1],\n      [0, -1, -1, -1],\n      [1, 0, 1, 1],\n      [1, 0, 1, -1],\n      [1, 0, -1, 1],\n      [1, 0, -1, -1],\n      [-1, 0, 1, 1],\n      [-1, 0, 1, -1],\n      [-1, 0, -1, 1],\n      [-1, 0, -1, -1],\n      [1, 1, 0, 1],\n      [1, 1, 0, -1],\n      [1, -1, 0, 1],\n      [1, -1, 0, -1],\n      [-1, 1, 0, 1],\n      [-1, 1, 0, -1],\n      [-1, -1, 0, 1],\n      [-1, -1, 0, -1],\n      [1, 1, 1, 0],\n      [1, 1, -1, 0],\n      [1, -1, 1, 0],\n      [1, -1, -1, 0],\n      [-1, 1, 1, 0],\n      [-1, 1, -1, 0],\n      [-1, -1, 1, 0],\n      [-1, -1, -1, 0]\n    ]);\n    __publicField(this, \"p\", []);\n    // To remove the need for index wrapping, double the permutation table length\n    __publicField(this, \"perm\", []);\n    // A lookup table to traverse the simplex around a given point in 4D.\n    // Details can be found where this table is used, in the 4D noise method.\n    __publicField(this, \"simplex\", [\n      [0, 1, 2, 3],\n      [0, 1, 3, 2],\n      [0, 0, 0, 0],\n      [0, 2, 3, 1],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [1, 2, 3, 0],\n      [0, 2, 1, 3],\n      [0, 0, 0, 0],\n      [0, 3, 1, 2],\n      [0, 3, 2, 1],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [1, 3, 2, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [1, 2, 0, 3],\n      [0, 0, 0, 0],\n      [1, 3, 0, 2],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [2, 3, 0, 1],\n      [2, 3, 1, 0],\n      [1, 0, 2, 3],\n      [1, 0, 3, 2],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [2, 0, 3, 1],\n      [0, 0, 0, 0],\n      [2, 1, 3, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [2, 0, 1, 3],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [3, 0, 1, 2],\n      [3, 0, 2, 1],\n      [0, 0, 0, 0],\n      [3, 1, 2, 0],\n      [2, 1, 0, 3],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [3, 1, 0, 2],\n      [0, 0, 0, 0],\n      [3, 2, 0, 1],\n      [3, 2, 1, 0]\n    ]);\n    __publicField(this, \"dot\", (g, x, y) => {\n      return g[0] * x + g[1] * y;\n    });\n    __publicField(this, \"dot3\", (g, x, y, z) => {\n      return g[0] * x + g[1] * y + g[2] * z;\n    });\n    __publicField(this, \"dot4\", (g, x, y, z, w) => {\n      return g[0] * x + g[1] * y + g[2] * z + g[3] * w;\n    });\n    __publicField(this, \"noise\", (xin, yin) => {\n      let n0;\n      let n1;\n      let n2;\n      const F2 = 0.5 * (Math.sqrt(3) - 1);\n      const s = (xin + yin) * F2;\n      const i = Math.floor(xin + s);\n      const j = Math.floor(yin + s);\n      const G2 = (3 - Math.sqrt(3)) / 6;\n      const t = (i + j) * G2;\n      const X0 = i - t;\n      const Y0 = j - t;\n      const x0 = xin - X0;\n      const y0 = yin - Y0;\n      let i1 = 0;\n      let j1 = 1;\n      if (x0 > y0) {\n        i1 = 1;\n        j1 = 0;\n      }\n      const x1 = x0 - i1 + G2;\n      const y1 = y0 - j1 + G2;\n      const x2 = x0 - 1 + 2 * G2;\n      const y2 = y0 - 1 + 2 * G2;\n      const ii = i & 255;\n      const jj = j & 255;\n      const gi0 = this.perm[ii + this.perm[jj]] % 12;\n      const gi1 = this.perm[ii + i1 + this.perm[jj + j1]] % 12;\n      const gi2 = this.perm[ii + 1 + this.perm[jj + 1]] % 12;\n      let t0 = 0.5 - x0 * x0 - y0 * y0;\n      if (t0 < 0) {\n        n0 = 0;\n      } else {\n        t0 *= t0;\n        n0 = t0 * t0 * this.dot(this.grad3[gi0], x0, y0);\n      }\n      let t1 = 0.5 - x1 * x1 - y1 * y1;\n      if (t1 < 0) {\n        n1 = 0;\n      } else {\n        t1 *= t1;\n        n1 = t1 * t1 * this.dot(this.grad3[gi1], x1, y1);\n      }\n      let t2 = 0.5 - x2 * x2 - y2 * y2;\n      if (t2 < 0) {\n        n2 = 0;\n      } else {\n        t2 *= t2;\n        n2 = t2 * t2 * this.dot(this.grad3[gi2], x2, y2);\n      }\n      return 70 * (n0 + n1 + n2);\n    });\n    // 3D simplex noise\n    __publicField(this, \"noise3d\", (xin, yin, zin) => {\n      let n0;\n      let n1;\n      let n2;\n      let n3;\n      const F3 = 1 / 3;\n      const s = (xin + yin + zin) * F3;\n      const i = Math.floor(xin + s);\n      const j = Math.floor(yin + s);\n      const k = Math.floor(zin + s);\n      const G3 = 1 / 6;\n      const t = (i + j + k) * G3;\n      const X0 = i - t;\n      const Y0 = j - t;\n      const Z0 = k - t;\n      const x0 = xin - X0;\n      const y0 = yin - Y0;\n      const z0 = zin - Z0;\n      let i1;\n      let j1;\n      let k1;\n      let i2;\n      let j2;\n      let k2;\n      if (x0 >= y0) {\n        if (y0 >= z0) {\n          i1 = 1;\n          j1 = 0;\n          k1 = 0;\n          i2 = 1;\n          j2 = 1;\n          k2 = 0;\n        } else if (x0 >= z0) {\n          i1 = 1;\n          j1 = 0;\n          k1 = 0;\n          i2 = 1;\n          j2 = 0;\n          k2 = 1;\n        } else {\n          i1 = 0;\n          j1 = 0;\n          k1 = 1;\n          i2 = 1;\n          j2 = 0;\n          k2 = 1;\n        }\n      } else {\n        if (y0 < z0) {\n          i1 = 0;\n          j1 = 0;\n          k1 = 1;\n          i2 = 0;\n          j2 = 1;\n          k2 = 1;\n        } else if (x0 < z0) {\n          i1 = 0;\n          j1 = 1;\n          k1 = 0;\n          i2 = 0;\n          j2 = 1;\n          k2 = 1;\n        } else {\n          i1 = 0;\n          j1 = 1;\n          k1 = 0;\n          i2 = 1;\n          j2 = 1;\n          k2 = 0;\n        }\n      }\n      const x1 = x0 - i1 + G3;\n      const y1 = y0 - j1 + G3;\n      const z1 = z0 - k1 + G3;\n      const x2 = x0 - i2 + 2 * G3;\n      const y2 = y0 - j2 + 2 * G3;\n      const z2 = z0 - k2 + 2 * G3;\n      const x3 = x0 - 1 + 3 * G3;\n      const y3 = y0 - 1 + 3 * G3;\n      const z3 = z0 - 1 + 3 * G3;\n      const ii = i & 255;\n      const jj = j & 255;\n      const kk = k & 255;\n      const gi0 = this.perm[ii + this.perm[jj + this.perm[kk]]] % 12;\n      const gi1 = this.perm[ii + i1 + this.perm[jj + j1 + this.perm[kk + k1]]] % 12;\n      const gi2 = this.perm[ii + i2 + this.perm[jj + j2 + this.perm[kk + k2]]] % 12;\n      const gi3 = this.perm[ii + 1 + this.perm[jj + 1 + this.perm[kk + 1]]] % 12;\n      let t0 = 0.6 - x0 * x0 - y0 * y0 - z0 * z0;\n      if (t0 < 0) {\n        n0 = 0;\n      } else {\n        t0 *= t0;\n        n0 = t0 * t0 * this.dot3(this.grad3[gi0], x0, y0, z0);\n      }\n      let t1 = 0.6 - x1 * x1 - y1 * y1 - z1 * z1;\n      if (t1 < 0) {\n        n1 = 0;\n      } else {\n        t1 *= t1;\n        n1 = t1 * t1 * this.dot3(this.grad3[gi1], x1, y1, z1);\n      }\n      let t2 = 0.6 - x2 * x2 - y2 * y2 - z2 * z2;\n      if (t2 < 0) {\n        n2 = 0;\n      } else {\n        t2 *= t2;\n        n2 = t2 * t2 * this.dot3(this.grad3[gi2], x2, y2, z2);\n      }\n      let t3 = 0.6 - x3 * x3 - y3 * y3 - z3 * z3;\n      if (t3 < 0) {\n        n3 = 0;\n      } else {\n        t3 *= t3;\n        n3 = t3 * t3 * this.dot3(this.grad3[gi3], x3, y3, z3);\n      }\n      return 32 * (n0 + n1 + n2 + n3);\n    });\n    // 4D simplex noise\n    __publicField(this, \"noise4d\", (x, y, z, w) => {\n      const grad4 = this.grad4;\n      const simplex = this.simplex;\n      const perm = this.perm;\n      const F4 = (Math.sqrt(5) - 1) / 4;\n      const G4 = (5 - Math.sqrt(5)) / 20;\n      let n0;\n      let n1;\n      let n2;\n      let n3;\n      let n4;\n      const s = (x + y + z + w) * F4;\n      const i = Math.floor(x + s);\n      const j = Math.floor(y + s);\n      const k = Math.floor(z + s);\n      const l = Math.floor(w + s);\n      const t = (i + j + k + l) * G4;\n      const X0 = i - t;\n      const Y0 = j - t;\n      const Z0 = k - t;\n      const W0 = l - t;\n      const x0 = x - X0;\n      const y0 = y - Y0;\n      const z0 = z - Z0;\n      const w0 = w - W0;\n      const c1 = x0 > y0 ? 32 : 0;\n      const c2 = x0 > z0 ? 16 : 0;\n      const c3 = y0 > z0 ? 8 : 0;\n      const c4 = x0 > w0 ? 4 : 0;\n      const c5 = y0 > w0 ? 2 : 0;\n      const c6 = z0 > w0 ? 1 : 0;\n      const c = c1 + c2 + c3 + c4 + c5 + c6;\n      let i1;\n      let j1;\n      let k1;\n      let l1;\n      let i2;\n      let j2;\n      let k2;\n      let l2;\n      let i3;\n      let j3;\n      let k3;\n      let l3;\n      i1 = simplex[c][0] >= 3 ? 1 : 0;\n      j1 = simplex[c][1] >= 3 ? 1 : 0;\n      k1 = simplex[c][2] >= 3 ? 1 : 0;\n      l1 = simplex[c][3] >= 3 ? 1 : 0;\n      i2 = simplex[c][0] >= 2 ? 1 : 0;\n      j2 = simplex[c][1] >= 2 ? 1 : 0;\n      k2 = simplex[c][2] >= 2 ? 1 : 0;\n      l2 = simplex[c][3] >= 2 ? 1 : 0;\n      i3 = simplex[c][0] >= 1 ? 1 : 0;\n      j3 = simplex[c][1] >= 1 ? 1 : 0;\n      k3 = simplex[c][2] >= 1 ? 1 : 0;\n      l3 = simplex[c][3] >= 1 ? 1 : 0;\n      const x1 = x0 - i1 + G4;\n      const y1 = y0 - j1 + G4;\n      const z1 = z0 - k1 + G4;\n      const w1 = w0 - l1 + G4;\n      const x2 = x0 - i2 + 2 * G4;\n      const y2 = y0 - j2 + 2 * G4;\n      const z2 = z0 - k2 + 2 * G4;\n      const w2 = w0 - l2 + 2 * G4;\n      const x3 = x0 - i3 + 3 * G4;\n      const y3 = y0 - j3 + 3 * G4;\n      const z3 = z0 - k3 + 3 * G4;\n      const w3 = w0 - l3 + 3 * G4;\n      const x4 = x0 - 1 + 4 * G4;\n      const y4 = y0 - 1 + 4 * G4;\n      const z4 = z0 - 1 + 4 * G4;\n      const w4 = w0 - 1 + 4 * G4;\n      const ii = i & 255;\n      const jj = j & 255;\n      const kk = k & 255;\n      const ll = l & 255;\n      const gi0 = perm[ii + perm[jj + perm[kk + perm[ll]]]] % 32;\n      const gi1 = perm[ii + i1 + perm[jj + j1 + perm[kk + k1 + perm[ll + l1]]]] % 32;\n      const gi2 = perm[ii + i2 + perm[jj + j2 + perm[kk + k2 + perm[ll + l2]]]] % 32;\n      const gi3 = perm[ii + i3 + perm[jj + j3 + perm[kk + k3 + perm[ll + l3]]]] % 32;\n      const gi4 = perm[ii + 1 + perm[jj + 1 + perm[kk + 1 + perm[ll + 1]]]] % 32;\n      let t0 = 0.6 - x0 * x0 - y0 * y0 - z0 * z0 - w0 * w0;\n      if (t0 < 0) {\n        n0 = 0;\n      } else {\n        t0 *= t0;\n        n0 = t0 * t0 * this.dot4(grad4[gi0], x0, y0, z0, w0);\n      }\n      let t1 = 0.6 - x1 * x1 - y1 * y1 - z1 * z1 - w1 * w1;\n      if (t1 < 0) {\n        n1 = 0;\n      } else {\n        t1 *= t1;\n        n1 = t1 * t1 * this.dot4(grad4[gi1], x1, y1, z1, w1);\n      }\n      let t2 = 0.6 - x2 * x2 - y2 * y2 - z2 * z2 - w2 * w2;\n      if (t2 < 0) {\n        n2 = 0;\n      } else {\n        t2 *= t2;\n        n2 = t2 * t2 * this.dot4(grad4[gi2], x2, y2, z2, w2);\n      }\n      let t3 = 0.6 - x3 * x3 - y3 * y3 - z3 * z3 - w3 * w3;\n      if (t3 < 0) {\n        n3 = 0;\n      } else {\n        t3 *= t3;\n        n3 = t3 * t3 * this.dot4(grad4[gi3], x3, y3, z3, w3);\n      }\n      let t4 = 0.6 - x4 * x4 - y4 * y4 - z4 * z4 - w4 * w4;\n      if (t4 < 0) {\n        n4 = 0;\n      } else {\n        t4 *= t4;\n        n4 = t4 * t4 * this.dot4(grad4[gi4], x4, y4, z4, w4);\n      }\n      return 27 * (n0 + n1 + n2 + n3 + n4);\n    });\n    for (let i = 0; i < 256; i++) {\n      this.p[i] = Math.floor(r.random() * 256);\n    }\n    for (let i = 0; i < 512; i++) {\n      this.perm[i] = this.p[i & 255];\n    }\n  }\n}\nexport {\n  SimplexNoise\n};\n//# sourceMappingURL=SimplexNoise.js.map\n"],"names":[],"mappings":"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G;gBAAG;gBAAG;aAAE;YACZ;gBAAC;gBAAG;gBAAG;gBAAG;aAAE;YACZ;gBAAC;gBAAG;gBAAG;gBAAG;aAAE;YACZ;gBAAC;gBAAG;gBAAG;gBAAG;aAAE;YACZ;gBAAC;gBAAG;gBAAG;gBAAG;aAAE;YACZ;gBAAC;gBAAG;gBAAG;gBAAG;aAAE;YACZ;gBAAC;gBAAG;gBAAG;gBAAG;aAAE;YACZ;gBAAC;gBAAG;gBAAG;gBAAG;aAAE;YACZ;gBAAC;gBAAG;gBAAG;gBAAG;aAAE;YACZ;gBAAC;gBAAG;gBAAG;gBAAG;aAAE;YACZ;gBAAC;gBAAG;gBAAG;gBAAG;aAAE;YACZ;gBAAC;gBAAG;gBAAG;gBAAG;aAAE;YACZ;gBAAC;gBAAG;gBAAG;gBAAG;aAAE;YACZ;gBAAC;gBAAG;gBAAG;gBAAG;aAAE;YACZ;gBAAC;gBAAG;gBAAG;gBAAG;aAAE;YACZ;gBAAC;gBAAG;gBAAG;gBAAG;aAAE;YACZ;gBAAC;gBAAG;gBAAG;gBAAG;aAAE;YACZ;gBAAC;gBAAG;gBAAG;gBAAG;aAAE;YACZ;gBAAC;gBAAG;gBAAG;gBAAG;aAAE;YACZ;gBAAC;gBAAG;gBAAG;gBAAG;aAAE;YACZ;gBAAC;gBAAG;gBAAG;gBAAG;aAAE;YACZ;gBAAC;gBAAG;gBAAG;gBAAG;aAAE;YACZ;gBAAC;gBAAG;gBAAG;gBAAG;aAAE;YACZ;gBAAC;gBAAG;gBAAG;gBAAG;aAAE;YACZ;gBAAC;gBAAG;gBAAG;gBAAG;aAAE;YACZ;gBAAC;gBAAG;gBAAG;gBAAG;aAAE;YACZ;gBAAC;gBAAG;gBAAG;gBAAG;aAAE;YACZ;gBAAC;gBAAG;gBAAG;gBAAG;aAAE;YACZ;gBAAC;gBAAG;gBAAG;gBAAG;aAAE;YACZ;gBAAC;gBAAG;gBAAG;gBAAG;aAAE;YACZ;gBAAC;gBAAG;gBAAG;gBAAG;aAAE;YACZ;gBAAC;gBAAG;gBAAG;gBAAG;aAAE;YACZ;gBAAC;gBAAG;gBAAG;gBAAG;aAAE;YACZ;gBAAC;gBAAG;gBAAG;gBAAG;aAAE;YACZ;gBAAC;gBAAG;gBAAG;gBAAG;aAAE;YACZ;gBAAC;gBAAG;gBAAG;gB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","ignoreList":[0]}},
    {"offset": {"line": 3446, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3452, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/math/MeshSurfaceSampler.js"],"sourcesContent":["import { Triangle, Vector3 } from \"three\";\nconst _face = /* @__PURE__ */ new Triangle();\nconst _color = /* @__PURE__ */ new Vector3();\nclass MeshSurfaceSampler {\n  constructor(mesh) {\n    let geometry = mesh.geometry;\n    if (geometry.index) {\n      console.warn(\"THREE.MeshSurfaceSampler: Converting geometry to non-indexed BufferGeometry.\");\n      geometry = geometry.toNonIndexed();\n    }\n    this.geometry = geometry;\n    this.randomFunction = Math.random;\n    this.positionAttribute = this.geometry.getAttribute(\"position\");\n    this.colorAttribute = this.geometry.getAttribute(\"color\");\n    this.weightAttribute = null;\n    this.distribution = null;\n  }\n  setWeightAttribute(name) {\n    this.weightAttribute = name ? this.geometry.getAttribute(name) : null;\n    return this;\n  }\n  build() {\n    const positionAttribute = this.positionAttribute;\n    const weightAttribute = this.weightAttribute;\n    const faceWeights = new Float32Array(positionAttribute.count / 3);\n    for (let i = 0; i < positionAttribute.count; i += 3) {\n      let faceWeight = 1;\n      if (weightAttribute) {\n        faceWeight = weightAttribute.getX(i) + weightAttribute.getX(i + 1) + weightAttribute.getX(i + 2);\n      }\n      _face.a.fromBufferAttribute(positionAttribute, i);\n      _face.b.fromBufferAttribute(positionAttribute, i + 1);\n      _face.c.fromBufferAttribute(positionAttribute, i + 2);\n      faceWeight *= _face.getArea();\n      faceWeights[i / 3] = faceWeight;\n    }\n    this.distribution = new Float32Array(positionAttribute.count / 3);\n    let cumulativeTotal = 0;\n    for (let i = 0; i < faceWeights.length; i++) {\n      cumulativeTotal += faceWeights[i];\n      this.distribution[i] = cumulativeTotal;\n    }\n    return this;\n  }\n  setRandomGenerator(randomFunction) {\n    this.randomFunction = randomFunction;\n    return this;\n  }\n  sample(targetPosition, targetNormal, targetColor) {\n    const faceIndex = this.sampleFaceIndex();\n    return this.sampleFace(faceIndex, targetPosition, targetNormal, targetColor);\n  }\n  sampleFaceIndex() {\n    const cumulativeTotal = this.distribution[this.distribution.length - 1];\n    return this.binarySearch(this.randomFunction() * cumulativeTotal);\n  }\n  binarySearch(x) {\n    const dist = this.distribution;\n    let start = 0;\n    let end = dist.length - 1;\n    let index = -1;\n    while (start <= end) {\n      const mid = Math.ceil((start + end) / 2);\n      if (mid === 0 || dist[mid - 1] <= x && dist[mid] > x) {\n        index = mid;\n        break;\n      } else if (x < dist[mid]) {\n        end = mid - 1;\n      } else {\n        start = mid + 1;\n      }\n    }\n    return index;\n  }\n  sampleFace(faceIndex, targetPosition, targetNormal, targetColor) {\n    let u = this.randomFunction();\n    let v = this.randomFunction();\n    if (u + v > 1) {\n      u = 1 - u;\n      v = 1 - v;\n    }\n    _face.a.fromBufferAttribute(this.positionAttribute, faceIndex * 3);\n    _face.b.fromBufferAttribute(this.positionAttribute, faceIndex * 3 + 1);\n    _face.c.fromBufferAttribute(this.positionAttribute, faceIndex * 3 + 2);\n    targetPosition.set(0, 0, 0).addScaledVector(_face.a, u).addScaledVector(_face.b, v).addScaledVector(_face.c, 1 - (u + v));\n    if (targetNormal !== void 0) {\n      _face.getNormal(targetNormal);\n    }\n    if (targetColor !== void 0 && this.colorAttribute !== void 0) {\n      _face.a.fromBufferAttribute(this.colorAttribute, faceIndex * 3);\n      _face.b.fromBufferAttribute(this.colorAttribute, faceIndex * 3 + 1);\n      _face.c.fromBufferAttribute(this.colorAttribute, faceIndex * 3 + 2);\n      _color.set(0, 0, 0).addScaledVector(_face.a, u).addScaledVector(_face.b, v).addScaledVector(_face.c, 1 - (u + v));\n      targetColor.r = _color.x;\n      targetColor.g = _color.y;\n      targetColor.b = _color.z;\n    }\n    return this;\n  }\n}\nexport {\n  MeshSurfaceSampler\n};\n//# sourceMappingURL=MeshSurfaceSampler.js.map\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 3558, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3564, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/math/OBB.js"],"sourcesContent":["import { Vector3, Matrix3, MathUtils, Box3, Matrix4, Ray } from \"three\";\nconst a = {\n  c: null,\n  // center\n  u: [/* @__PURE__ */ new Vector3(), /* @__PURE__ */ new Vector3(), /* @__PURE__ */ new Vector3()],\n  // basis vectors\n  e: []\n  // half width\n};\nconst b = {\n  c: null,\n  // center\n  u: [/* @__PURE__ */ new Vector3(), /* @__PURE__ */ new Vector3(), /* @__PURE__ */ new Vector3()],\n  // basis vectors\n  e: []\n  // half width\n};\nconst R = [[], [], []];\nconst AbsR = [[], [], []];\nconst t = [];\nconst xAxis = /* @__PURE__ */ new Vector3();\nconst yAxis = /* @__PURE__ */ new Vector3();\nconst zAxis = /* @__PURE__ */ new Vector3();\nconst v1 = /* @__PURE__ */ new Vector3();\nconst size = /* @__PURE__ */ new Vector3();\nconst closestPoint = /* @__PURE__ */ new Vector3();\nconst rotationMatrix = /* @__PURE__ */ new Matrix3();\nconst aabb = /* @__PURE__ */ new Box3();\nconst matrix = /* @__PURE__ */ new Matrix4();\nconst inverse = /* @__PURE__ */ new Matrix4();\nconst localRay = /* @__PURE__ */ new Ray();\nclass OBB {\n  constructor(center = new Vector3(), halfSize = new Vector3(), rotation = new Matrix3()) {\n    this.center = center;\n    this.halfSize = halfSize;\n    this.rotation = rotation;\n  }\n  set(center, halfSize, rotation) {\n    this.center = center;\n    this.halfSize = halfSize;\n    this.rotation = rotation;\n    return this;\n  }\n  copy(obb2) {\n    this.center.copy(obb2.center);\n    this.halfSize.copy(obb2.halfSize);\n    this.rotation.copy(obb2.rotation);\n    return this;\n  }\n  clone() {\n    return new this.constructor().copy(this);\n  }\n  getSize(result) {\n    return result.copy(this.halfSize).multiplyScalar(2);\n  }\n  /**\n   * Reference: Closest Point on OBB to Point in Real-Time Collision Detection\n   * by Christer Ericson (chapter 5.1.4)\n   */\n  clampPoint(point, result) {\n    const halfSize = this.halfSize;\n    v1.subVectors(point, this.center);\n    this.rotation.extractBasis(xAxis, yAxis, zAxis);\n    result.copy(this.center);\n    const x = MathUtils.clamp(v1.dot(xAxis), -halfSize.x, halfSize.x);\n    result.add(xAxis.multiplyScalar(x));\n    const y = MathUtils.clamp(v1.dot(yAxis), -halfSize.y, halfSize.y);\n    result.add(yAxis.multiplyScalar(y));\n    const z = MathUtils.clamp(v1.dot(zAxis), -halfSize.z, halfSize.z);\n    result.add(zAxis.multiplyScalar(z));\n    return result;\n  }\n  containsPoint(point) {\n    v1.subVectors(point, this.center);\n    this.rotation.extractBasis(xAxis, yAxis, zAxis);\n    return Math.abs(v1.dot(xAxis)) <= this.halfSize.x && Math.abs(v1.dot(yAxis)) <= this.halfSize.y && Math.abs(v1.dot(zAxis)) <= this.halfSize.z;\n  }\n  intersectsBox3(box3) {\n    return this.intersectsOBB(obb.fromBox3(box3));\n  }\n  intersectsSphere(sphere) {\n    this.clampPoint(sphere.center, closestPoint);\n    return closestPoint.distanceToSquared(sphere.center) <= sphere.radius * sphere.radius;\n  }\n  /**\n   * Reference: OBB-OBB Intersection in Real-Time Collision Detection\n   * by Christer Ericson (chapter 4.4.1)\n   *\n   */\n  intersectsOBB(obb2, epsilon = Number.EPSILON) {\n    a.c = this.center;\n    a.e[0] = this.halfSize.x;\n    a.e[1] = this.halfSize.y;\n    a.e[2] = this.halfSize.z;\n    this.rotation.extractBasis(a.u[0], a.u[1], a.u[2]);\n    b.c = obb2.center;\n    b.e[0] = obb2.halfSize.x;\n    b.e[1] = obb2.halfSize.y;\n    b.e[2] = obb2.halfSize.z;\n    obb2.rotation.extractBasis(b.u[0], b.u[1], b.u[2]);\n    for (let i = 0; i < 3; i++) {\n      for (let j = 0; j < 3; j++) {\n        R[i][j] = a.u[i].dot(b.u[j]);\n      }\n    }\n    v1.subVectors(b.c, a.c);\n    t[0] = v1.dot(a.u[0]);\n    t[1] = v1.dot(a.u[1]);\n    t[2] = v1.dot(a.u[2]);\n    for (let i = 0; i < 3; i++) {\n      for (let j = 0; j < 3; j++) {\n        AbsR[i][j] = Math.abs(R[i][j]) + epsilon;\n      }\n    }\n    let ra, rb;\n    for (let i = 0; i < 3; i++) {\n      ra = a.e[i];\n      rb = b.e[0] * AbsR[i][0] + b.e[1] * AbsR[i][1] + b.e[2] * AbsR[i][2];\n      if (Math.abs(t[i]) > ra + rb)\n        return false;\n    }\n    for (let i = 0; i < 3; i++) {\n      ra = a.e[0] * AbsR[0][i] + a.e[1] * AbsR[1][i] + a.e[2] * AbsR[2][i];\n      rb = b.e[i];\n      if (Math.abs(t[0] * R[0][i] + t[1] * R[1][i] + t[2] * R[2][i]) > ra + rb)\n        return false;\n    }\n    ra = a.e[1] * AbsR[2][0] + a.e[2] * AbsR[1][0];\n    rb = b.e[1] * AbsR[0][2] + b.e[2] * AbsR[0][1];\n    if (Math.abs(t[2] * R[1][0] - t[1] * R[2][0]) > ra + rb)\n      return false;\n    ra = a.e[1] * AbsR[2][1] + a.e[2] * AbsR[1][1];\n    rb = b.e[0] * AbsR[0][2] + b.e[2] * AbsR[0][0];\n    if (Math.abs(t[2] * R[1][1] - t[1] * R[2][1]) > ra + rb)\n      return false;\n    ra = a.e[1] * AbsR[2][2] + a.e[2] * AbsR[1][2];\n    rb = b.e[0] * AbsR[0][1] + b.e[1] * AbsR[0][0];\n    if (Math.abs(t[2] * R[1][2] - t[1] * R[2][2]) > ra + rb)\n      return false;\n    ra = a.e[0] * AbsR[2][0] + a.e[2] * AbsR[0][0];\n    rb = b.e[1] * AbsR[1][2] + b.e[2] * AbsR[1][1];\n    if (Math.abs(t[0] * R[2][0] - t[2] * R[0][0]) > ra + rb)\n      return false;\n    ra = a.e[0] * AbsR[2][1] + a.e[2] * AbsR[0][1];\n    rb = b.e[0] * AbsR[1][2] + b.e[2] * AbsR[1][0];\n    if (Math.abs(t[0] * R[2][1] - t[2] * R[0][1]) > ra + rb)\n      return false;\n    ra = a.e[0] * AbsR[2][2] + a.e[2] * AbsR[0][2];\n    rb = b.e[0] * AbsR[1][1] + b.e[1] * AbsR[1][0];\n    if (Math.abs(t[0] * R[2][2] - t[2] * R[0][2]) > ra + rb)\n      return false;\n    ra = a.e[0] * AbsR[1][0] + a.e[1] * AbsR[0][0];\n    rb = b.e[1] * AbsR[2][2] + b.e[2] * AbsR[2][1];\n    if (Math.abs(t[1] * R[0][0] - t[0] * R[1][0]) > ra + rb)\n      return false;\n    ra = a.e[0] * AbsR[1][1] + a.e[1] * AbsR[0][1];\n    rb = b.e[0] * AbsR[2][2] + b.e[2] * AbsR[2][0];\n    if (Math.abs(t[1] * R[0][1] - t[0] * R[1][1]) > ra + rb)\n      return false;\n    ra = a.e[0] * AbsR[1][2] + a.e[1] * AbsR[0][2];\n    rb = b.e[0] * AbsR[2][1] + b.e[1] * AbsR[2][0];\n    if (Math.abs(t[1] * R[0][2] - t[0] * R[1][2]) > ra + rb)\n      return false;\n    return true;\n  }\n  /**\n   * Reference: Testing Box Against Plane in Real-Time Collision Detection\n   * by Christer Ericson (chapter 5.2.3)\n   */\n  intersectsPlane(plane) {\n    this.rotation.extractBasis(xAxis, yAxis, zAxis);\n    const r = this.halfSize.x * Math.abs(plane.normal.dot(xAxis)) + this.halfSize.y * Math.abs(plane.normal.dot(yAxis)) + this.halfSize.z * Math.abs(plane.normal.dot(zAxis));\n    const d = plane.normal.dot(this.center) - plane.constant;\n    return Math.abs(d) <= r;\n  }\n  /**\n   * Performs a ray/OBB intersection test and stores the intersection point\n   * to the given 3D vector. If no intersection is detected, *null* is returned.\n   */\n  intersectRay(ray, result) {\n    this.getSize(size);\n    aabb.setFromCenterAndSize(v1.set(0, 0, 0), size);\n    matrix.setFromMatrix3(this.rotation);\n    matrix.setPosition(this.center);\n    inverse.copy(matrix).invert();\n    localRay.copy(ray).applyMatrix4(inverse);\n    if (localRay.intersectBox(aabb, result)) {\n      return result.applyMatrix4(matrix);\n    } else {\n      return null;\n    }\n  }\n  /**\n   * Performs a ray/OBB intersection test. Returns either true or false if\n   * there is a intersection or not.\n   */\n  intersectsRay(ray) {\n    return this.intersectRay(ray, v1) !== null;\n  }\n  fromBox3(box3) {\n    box3.getCenter(this.center);\n    box3.getSize(this.halfSize).multiplyScalar(0.5);\n    this.rotation.identity();\n    return this;\n  }\n  equals(obb2) {\n    return obb2.center.equals(this.center) && obb2.halfSize.equals(this.halfSize) && obb2.rotation.equals(this.rotation);\n  }\n  applyMatrix4(matrix2) {\n    const e = matrix2.elements;\n    let sx = v1.set(e[0], e[1], e[2]).length();\n    const sy = v1.set(e[4], e[5], e[6]).length();\n    const sz = v1.set(e[8], e[9], e[10]).length();\n    const det = matrix2.determinant();\n    if (det < 0)\n      sx = -sx;\n    rotationMatrix.setFromMatrix4(matrix2);\n    const invSX = 1 / sx;\n    const invSY = 1 / sy;\n    const invSZ = 1 / sz;\n    rotationMatrix.elements[0] *= invSX;\n    rotationMatrix.elements[1] *= invSX;\n    rotationMatrix.elements[2] *= invSX;\n    rotationMatrix.elements[3] *= invSY;\n    rotationMatrix.elements[4] *= invSY;\n    rotationMatrix.elements[5] *= invSY;\n    rotationMatrix.elements[6] *= invSZ;\n    rotationMatrix.elements[7] *= invSZ;\n    rotationMatrix.elements[8] *= invSZ;\n    this.rotation.multiply(rotationMatrix);\n    this.halfSize.x *= sx;\n    this.halfSize.y *= sy;\n    this.halfSize.z *= sz;\n    v1.setFromMatrixPosition(matrix2);\n    this.center.add(v1);\n    return this;\n  }\n}\nconst obb = /* @__PURE__ */ new OBB();\nexport {\n  OBB\n};\n//# sourceMappingURL=OBB.js.map\n"],"names":[],"mappings":"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AC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,EAAE;QAC9C,KAAK,EAAE,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,EAAE;QAC9C,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,KAAK,IACnD,OAAO;QACT,KAAK,EAAE,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,EAAE;QAC9C,KAAK,EAAE,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,EAAE;QAC9C,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,KAAK,IACnD,OAAO;QACT,KAAK,EAAE,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,EAAE;QAC9C,KAAK,EAAE,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,EAAE;QAC9C,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,KAAK,IACnD,OAAO;QACT,KAAK,EAAE,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,EAAE;QAC9C,KA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","ignoreList":[0]}},
    {"offset": {"line": 3806, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3812, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/math/Capsule.js"],"sourcesContent":["import { Vector3 } from \"three\";\nconst _v1 = /* @__PURE__ */ new Vector3();\nconst _v2 = /* @__PURE__ */ new Vector3();\nconst _v3 = /* @__PURE__ */ new Vector3();\nconst EPS = 1e-10;\nclass Capsule {\n  constructor(start = new Vector3(0, 0, 0), end = new Vector3(0, 1, 0), radius = 1) {\n    this.start = start;\n    this.end = end;\n    this.radius = radius;\n  }\n  clone() {\n    return new Capsule(this.start.clone(), this.end.clone(), this.radius);\n  }\n  set(start, end, radius) {\n    this.start.copy(start);\n    this.end.copy(end);\n    this.radius = radius;\n  }\n  copy(capsule) {\n    this.start.copy(capsule.start);\n    this.end.copy(capsule.end);\n    this.radius = capsule.radius;\n  }\n  getCenter(target) {\n    return target.copy(this.end).add(this.start).multiplyScalar(0.5);\n  }\n  translate(v) {\n    this.start.add(v);\n    this.end.add(v);\n  }\n  checkAABBAxis(p1x, p1y, p2x, p2y, minx, maxx, miny, maxy, radius) {\n    return (minx - p1x < radius || minx - p2x < radius) && (p1x - maxx < radius || p2x - maxx < radius) && (miny - p1y < radius || miny - p2y < radius) && (p1y - maxy < radius || p2y - maxy < radius);\n  }\n  intersectsBox(box) {\n    return this.checkAABBAxis(\n      this.start.x,\n      this.start.y,\n      this.end.x,\n      this.end.y,\n      box.min.x,\n      box.max.x,\n      box.min.y,\n      box.max.y,\n      this.radius\n    ) && this.checkAABBAxis(\n      this.start.x,\n      this.start.z,\n      this.end.x,\n      this.end.z,\n      box.min.x,\n      box.max.x,\n      box.min.z,\n      box.max.z,\n      this.radius\n    ) && this.checkAABBAxis(\n      this.start.y,\n      this.start.z,\n      this.end.y,\n      this.end.z,\n      box.min.y,\n      box.max.y,\n      box.min.z,\n      box.max.z,\n      this.radius\n    );\n  }\n  lineLineMinimumPoints(line1, line2) {\n    const r = _v1.copy(line1.end).sub(line1.start);\n    const s = _v2.copy(line2.end).sub(line2.start);\n    const w = _v3.copy(line2.start).sub(line1.start);\n    const a = r.dot(s), b = r.dot(r), c = s.dot(s), d = s.dot(w), e = r.dot(w);\n    let t1, t2;\n    const divisor = b * c - a * a;\n    if (Math.abs(divisor) < EPS) {\n      const d1 = -d / c;\n      const d2 = (a - d) / c;\n      if (Math.abs(d1 - 0.5) < Math.abs(d2 - 0.5)) {\n        t1 = 0;\n        t2 = d1;\n      } else {\n        t1 = 1;\n        t2 = d2;\n      }\n    } else {\n      t1 = (d * a + e * c) / divisor;\n      t2 = (t1 * a - d) / c;\n    }\n    t2 = Math.max(0, Math.min(1, t2));\n    t1 = Math.max(0, Math.min(1, t1));\n    const point1 = r.multiplyScalar(t1).add(line1.start);\n    const point2 = s.multiplyScalar(t2).add(line2.start);\n    return [point1, point2];\n  }\n}\nexport {\n  Capsule\n};\n//# sourceMappingURL=Capsule.js.map\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 3886, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3892, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/math/ColorConverter.js"],"sourcesContent":["import { MathUtils } from \"three\";\nconst _hsl = {};\nconst ColorConverter = {\n  setHSV(color, h, s, v) {\n    h = MathUtils.euclideanModulo(h, 1);\n    s = MathUtils.clamp(s, 0, 1);\n    v = MathUtils.clamp(v, 0, 1);\n    return color.setHSL(h, s * v / ((h = (2 - s) * v) < 1 ? h : 2 - h), h * 0.5);\n  },\n  getHSV(color, target) {\n    color.getHSL(_hsl);\n    _hsl.s *= _hsl.l < 0.5 ? _hsl.l : 1 - _hsl.l;\n    target.h = _hsl.h;\n    target.s = 2 * _hsl.s / (_hsl.l + _hsl.s);\n    target.v = _hsl.l + _hsl.s;\n    return target;\n  },\n  // where c, m, y, k is between 0 and 1\n  setCMYK(color, c, m, y, k) {\n    const r = (1 - c) * (1 - k);\n    const g = (1 - m) * (1 - k);\n    const b = (1 - y) * (1 - k);\n    return color.setRGB(r, g, b);\n  },\n  getCMYK(color, target) {\n    const r = color.r;\n    const g = color.g;\n    const b = color.b;\n    const k = 1 - Math.max(r, g, b);\n    const c = (1 - r - k) / (1 - k);\n    const m = (1 - g - k) / (1 - k);\n    const y = (1 - b - k) / (1 - k);\n    target.c = c;\n    target.m = m;\n    target.y = y;\n    target.k = k;\n    return target;\n  }\n};\nexport {\n  ColorConverter\n};\n//# sourceMappingURL=ColorConverter.js.map\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,OAAO,CAAC;AACd,MAAM,iBAAiB;IACrB,QAAO,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;QACnB,IAAI,kJAAA,CAAA,YAAS,CAAC,eAAe,CAAC,GAAG;QACjC,IAAI,kJAAA,CAAA,YAAS,CAAC,KAAK,CAAC,GAAG,GAAG;QAC1B,IAAI,kJAAA,CAAA,YAAS,CAAC,KAAK,CAAC,GAAG,GAAG;QAC1B,OAAO,MAAM,MAAM,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,IAAI,CAAC,GAAG,IAAI;IAC1E;IACA,QAAO,KAAK,EAAE,MAAM;QAClB,MAAM,MAAM,CAAC;QACb,KAAK,CAAC,IAAI,KAAK,CAAC,GAAG,MAAM,KAAK,CAAC,GAAG,IAAI,KAAK,CAAC;QAC5C,OAAO,CAAC,GAAG,KAAK,CAAC;QACjB,OAAO,CAAC,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC;QACxC,OAAO,CAAC,GAAG,KAAK,CAAC,GAAG,KAAK,CAAC;QAC1B,OAAO;IACT;IACA,sCAAsC;IACtC,SAAQ,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;QACvB,MAAM,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;QAC1B,MAAM,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;QAC1B,MAAM,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;QAC1B,OAAO,MAAM,MAAM,CAAC,GAAG,GAAG;IAC5B;IACA,SAAQ,KAAK,EAAE,MAAM;QACnB,MAAM,IAAI,MAAM,CAAC;QACjB,MAAM,IAAI,MAAM,CAAC;QACjB,MAAM,IAAI,MAAM,CAAC;QACjB,MAAM,IAAI,IAAI,KAAK,GAAG,CAAC,GAAG,GAAG;QAC7B,MAAM,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;QAC9B,MAAM,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;QAC9B,MAAM,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;QAC9B,OAAO,CAAC,GAAG;QACX,OAAO,CAAC,GAAG;QACX,OAAO,CAAC,GAAG;QACX,OAAO,CAAC,GAAG;QACX,OAAO;IACT;AACF;;CAIA,0CAA0C","ignoreList":[0]}},
    {"offset": {"line": 3937, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3943, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/math/ImprovedNoise.js"],"sourcesContent":["function init() {\n  const _p2 = [\n    151,\n    160,\n    137,\n    91,\n    90,\n    15,\n    131,\n    13,\n    201,\n    95,\n    96,\n    53,\n    194,\n    233,\n    7,\n    225,\n    140,\n    36,\n    103,\n    30,\n    69,\n    142,\n    8,\n    99,\n    37,\n    240,\n    21,\n    10,\n    23,\n    190,\n    6,\n    148,\n    247,\n    120,\n    234,\n    75,\n    0,\n    26,\n    197,\n    62,\n    94,\n    252,\n    219,\n    203,\n    117,\n    35,\n    11,\n    32,\n    57,\n    177,\n    33,\n    88,\n    237,\n    149,\n    56,\n    87,\n    174,\n    20,\n    125,\n    136,\n    171,\n    168,\n    68,\n    175,\n    74,\n    165,\n    71,\n    134,\n    139,\n    48,\n    27,\n    166,\n    77,\n    146,\n    158,\n    231,\n    83,\n    111,\n    229,\n    122,\n    60,\n    211,\n    133,\n    230,\n    220,\n    105,\n    92,\n    41,\n    55,\n    46,\n    245,\n    40,\n    244,\n    102,\n    143,\n    54,\n    65,\n    25,\n    63,\n    161,\n    1,\n    216,\n    80,\n    73,\n    209,\n    76,\n    132,\n    187,\n    208,\n    89,\n    18,\n    169,\n    200,\n    196,\n    135,\n    130,\n    116,\n    188,\n    159,\n    86,\n    164,\n    100,\n    109,\n    198,\n    173,\n    186,\n    3,\n    64,\n    52,\n    217,\n    226,\n    250,\n    124,\n    123,\n    5,\n    202,\n    38,\n    147,\n    118,\n    126,\n    255,\n    82,\n    85,\n    212,\n    207,\n    206,\n    59,\n    227,\n    47,\n    16,\n    58,\n    17,\n    182,\n    189,\n    28,\n    42,\n    223,\n    183,\n    170,\n    213,\n    119,\n    248,\n    152,\n    2,\n    44,\n    154,\n    163,\n    70,\n    221,\n    153,\n    101,\n    155,\n    167,\n    43,\n    172,\n    9,\n    129,\n    22,\n    39,\n    253,\n    19,\n    98,\n    108,\n    110,\n    79,\n    113,\n    224,\n    232,\n    178,\n    185,\n    112,\n    104,\n    218,\n    246,\n    97,\n    228,\n    251,\n    34,\n    242,\n    193,\n    238,\n    210,\n    144,\n    12,\n    191,\n    179,\n    162,\n    241,\n    81,\n    51,\n    145,\n    235,\n    249,\n    14,\n    239,\n    107,\n    49,\n    192,\n    214,\n    31,\n    181,\n    199,\n    106,\n    157,\n    184,\n    84,\n    204,\n    176,\n    115,\n    121,\n    50,\n    45,\n    127,\n    4,\n    150,\n    254,\n    138,\n    236,\n    205,\n    93,\n    222,\n    114,\n    67,\n    29,\n    24,\n    72,\n    243,\n    141,\n    128,\n    195,\n    78,\n    66,\n    215,\n    61,\n    156,\n    180\n  ];\n  for (let i = 0; i < 256; i++) {\n    _p2[256 + i] = _p2[i];\n  }\n  return _p2;\n}\nconst _p = /* @__PURE__ */ init();\nfunction fade(t) {\n  return t * t * t * (t * (t * 6 - 15) + 10);\n}\nfunction lerp(t, a, b) {\n  return a + t * (b - a);\n}\nfunction grad(hash, x, y, z) {\n  const h = hash & 15;\n  const u = h < 8 ? x : y, v = h < 4 ? y : h == 12 || h == 14 ? x : z;\n  return ((h & 1) == 0 ? u : -u) + ((h & 2) == 0 ? v : -v);\n}\nclass ImprovedNoise {\n  noise(x, y, z) {\n    const floorX = Math.floor(x), floorY = Math.floor(y), floorZ = Math.floor(z);\n    const X = floorX & 255, Y = floorY & 255, Z = floorZ & 255;\n    x -= floorX;\n    y -= floorY;\n    z -= floorZ;\n    const xMinus1 = x - 1, yMinus1 = y - 1, zMinus1 = z - 1;\n    const u = fade(x), v = fade(y), w = fade(z);\n    const A = _p[X] + Y, AA = _p[A] + Z, AB = _p[A + 1] + Z, B = _p[X + 1] + Y, BA = _p[B] + Z, BB = _p[B + 1] + Z;\n    return lerp(\n      w,\n      lerp(\n        v,\n        lerp(u, grad(_p[AA], x, y, z), grad(_p[BA], xMinus1, y, z)),\n        lerp(u, grad(_p[AB], x, yMinus1, z), grad(_p[BB], xMinus1, yMinus1, z))\n      ),\n      lerp(\n        v,\n        lerp(u, grad(_p[AA + 1], x, y, zMinus1), grad(_p[BA + 1], xMinus1, y, zMinus1)),\n        lerp(u, grad(_p[AB + 1], x, yMinus1, zMinus1), grad(_p[BB + 1], xMinus1, yMinus1, zMinus1))\n      )\n    );\n  }\n}\nexport {\n  ImprovedNoise\n};\n//# sourceMappingURL=ImprovedNoise.js.map\n"],"names":[],"mappings":";;;AAAA,SAAS;IACP,MAAM,MAAM;QACV;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACD;IACD,IAAK,IAAI,IAAI,GAAG,IAAI,KAAK,IAAK;QAC5B,GAAG,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,EAAE;IACvB;IACA,OAAO;AACT;AACA,MAAM,KAAK,aAAa,GAAG;AAC3B,SAAS,KAAK,CAAC;IACb,OAAO,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,EAAE,IAAI,EAAE;AAC3C;AACA,SAAS,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC;IACnB,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC;AACvB;AACA,SAAS,KAAK,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;IACzB,MAAM,IAAI,OAAO;IACjB,MAAM,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,KAAK,MAAM,KAAK,KAAK,IAAI;IAClE,OAAO,CAAC,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,CAAC;AACzD;AACA,MAAM;IACJ,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;QACb,MAAM,SAAS,KAAK,KAAK,CAAC,IAAI,SAAS,KAAK,KAAK,CAAC,IAAI,SAAS,KAAK,KAAK,CAAC;QAC1E,MAAM,IAAI,SAAS,KAAK,IAAI,SAAS,KAAK,IAAI,SAAS;QACvD,KAAK;QACL,KAAK;QACL,KAAK;QACL,MAAM,UAAU,IAAI,GAAG,UAAU,IAAI,GAAG,UAAU,IAAI;QACtD,MAAM,IAAI,KAAK,IAAI,IAAI,KAAK,IAAI,IAAI,KAAK;QACzC,MAAM,IAAI,EAAE,CAAC,EAAE,GAAG,GAAG,KAAK,EAAE,CAAC,EAAE,GAAG,GAAG,KAAK,EAAE,CAAC,IAAI,EAAE,GAAG,GAAG,IAAI,EAAE,CAAC,IAAI,EAAE,GAAG,GAAG,KAAK,EAAE,CAAC,EAAE,GAAG,GAAG,KAAK,EAAE,CAAC,IAAI,EAAE,GAAG;QAC7G,OAAO,KACL,GACA,KACE,GACA,KAAK,GAAG,KAAK,EAAE,CAAC,GAAG,EAAE,GAAG,GAAG,IAAI,KAAK,EAAE,CAAC,GAAG,EAAE,SAAS,GAAG,KACxD,KAAK,GAAG,KAAK,EAAE,CAAC,GAAG,EAAE,GAAG,SAAS,IAAI,KAAK,EAAE,CAAC,GAAG,EAAE,SAAS,SAAS,MAEtE,KACE,GACA,KAAK,GAAG,KAAK,EAAE,CAAC,KAAK,EAAE,EAAE,GAAG,GAAG,UAAU,KAAK,EAAE,CAAC,KAAK,EAAE,EAAE,SAAS,GAAG,WACtE,KAAK,GAAG,KAAK,EAAE,CAAC,KAAK,EAAE,EAAE,GAAG,SAAS,UAAU,KAAK,EAAE,CAAC,KAAK,EAAE,EAAE,SAAS,SAAS;IAGxF;AACF;;CAIA,yCAAyC","ignoreList":[0]}},
    {"offset": {"line": 4237, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4243, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/math/Octree.js"],"sourcesContent":["import { Box3, Vector3, Triangle, Plane, Line3, Sphere } from \"three\";\nimport { Capsule } from \"./Capsule.js\";\nconst _v1 = /* @__PURE__ */ new Vector3();\nconst _v2 = /* @__PURE__ */ new Vector3();\nconst _plane = /* @__PURE__ */ new Plane();\nconst _line1 = /* @__PURE__ */ new Line3();\nconst _line2 = /* @__PURE__ */ new Line3();\nconst _sphere = /* @__PURE__ */ new Sphere();\nconst _capsule = /* @__PURE__ */ new Capsule();\nclass Octree {\n  constructor(box) {\n    this.triangles = [];\n    this.box = box;\n    this.subTrees = [];\n  }\n  addTriangle(triangle) {\n    if (!this.bounds)\n      this.bounds = new Box3();\n    this.bounds.min.x = Math.min(this.bounds.min.x, triangle.a.x, triangle.b.x, triangle.c.x);\n    this.bounds.min.y = Math.min(this.bounds.min.y, triangle.a.y, triangle.b.y, triangle.c.y);\n    this.bounds.min.z = Math.min(this.bounds.min.z, triangle.a.z, triangle.b.z, triangle.c.z);\n    this.bounds.max.x = Math.max(this.bounds.max.x, triangle.a.x, triangle.b.x, triangle.c.x);\n    this.bounds.max.y = Math.max(this.bounds.max.y, triangle.a.y, triangle.b.y, triangle.c.y);\n    this.bounds.max.z = Math.max(this.bounds.max.z, triangle.a.z, triangle.b.z, triangle.c.z);\n    this.triangles.push(triangle);\n    return this;\n  }\n  calcBox() {\n    this.box = this.bounds.clone();\n    this.box.min.x -= 0.01;\n    this.box.min.y -= 0.01;\n    this.box.min.z -= 0.01;\n    return this;\n  }\n  split(level) {\n    if (!this.box)\n      return;\n    const subTrees = [];\n    const halfsize = _v2.copy(this.box.max).sub(this.box.min).multiplyScalar(0.5);\n    for (let x = 0; x < 2; x++) {\n      for (let y = 0; y < 2; y++) {\n        for (let z = 0; z < 2; z++) {\n          const box = new Box3();\n          const v = _v1.set(x, y, z);\n          box.min.copy(this.box.min).add(v.multiply(halfsize));\n          box.max.copy(box.min).add(halfsize);\n          subTrees.push(new Octree(box));\n        }\n      }\n    }\n    let triangle;\n    while (triangle = this.triangles.pop()) {\n      for (let i = 0; i < subTrees.length; i++) {\n        if (subTrees[i].box.intersectsTriangle(triangle)) {\n          subTrees[i].triangles.push(triangle);\n        }\n      }\n    }\n    for (let i = 0; i < subTrees.length; i++) {\n      const len = subTrees[i].triangles.length;\n      if (len > 8 && level < 16) {\n        subTrees[i].split(level + 1);\n      }\n      if (len !== 0) {\n        this.subTrees.push(subTrees[i]);\n      }\n    }\n    return this;\n  }\n  build() {\n    this.calcBox();\n    this.split(0);\n    return this;\n  }\n  getRayTriangles(ray, triangles) {\n    for (let i = 0; i < this.subTrees.length; i++) {\n      const subTree = this.subTrees[i];\n      if (!ray.intersectsBox(subTree.box))\n        continue;\n      if (subTree.triangles.length > 0) {\n        for (let j = 0; j < subTree.triangles.length; j++) {\n          if (triangles.indexOf(subTree.triangles[j]) === -1)\n            triangles.push(subTree.triangles[j]);\n        }\n      } else {\n        subTree.getRayTriangles(ray, triangles);\n      }\n    }\n    return triangles;\n  }\n  triangleCapsuleIntersect(capsule, triangle) {\n    triangle.getPlane(_plane);\n    const d1 = _plane.distanceToPoint(capsule.start) - capsule.radius;\n    const d2 = _plane.distanceToPoint(capsule.end) - capsule.radius;\n    if (d1 > 0 && d2 > 0 || d1 < -capsule.radius && d2 < -capsule.radius) {\n      return false;\n    }\n    const delta = Math.abs(d1 / (Math.abs(d1) + Math.abs(d2)));\n    const intersectPoint = _v1.copy(capsule.start).lerp(capsule.end, delta);\n    if (triangle.containsPoint(intersectPoint)) {\n      return { normal: _plane.normal.clone(), point: intersectPoint.clone(), depth: Math.abs(Math.min(d1, d2)) };\n    }\n    const r2 = capsule.radius * capsule.radius;\n    const line1 = _line1.set(capsule.start, capsule.end);\n    const lines = [\n      [triangle.a, triangle.b],\n      [triangle.b, triangle.c],\n      [triangle.c, triangle.a]\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      const line2 = _line2.set(lines[i][0], lines[i][1]);\n      const [point1, point2] = capsule.lineLineMinimumPoints(line1, line2);\n      if (point1.distanceToSquared(point2) < r2) {\n        return {\n          normal: point1.clone().sub(point2).normalize(),\n          point: point2.clone(),\n          depth: capsule.radius - point1.distanceTo(point2)\n        };\n      }\n    }\n    return false;\n  }\n  triangleSphereIntersect(sphere, triangle) {\n    triangle.getPlane(_plane);\n    if (!sphere.intersectsPlane(_plane))\n      return false;\n    const depth = Math.abs(_plane.distanceToSphere(sphere));\n    const r2 = sphere.radius * sphere.radius - depth * depth;\n    const plainPoint = _plane.projectPoint(sphere.center, _v1);\n    if (triangle.containsPoint(sphere.center)) {\n      return {\n        normal: _plane.normal.clone(),\n        point: plainPoint.clone(),\n        depth: Math.abs(_plane.distanceToSphere(sphere))\n      };\n    }\n    const lines = [\n      [triangle.a, triangle.b],\n      [triangle.b, triangle.c],\n      [triangle.c, triangle.a]\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      _line1.set(lines[i][0], lines[i][1]);\n      _line1.closestPointToPoint(plainPoint, true, _v2);\n      const d = _v2.distanceToSquared(sphere.center);\n      if (d < r2) {\n        return {\n          normal: sphere.center.clone().sub(_v2).normalize(),\n          point: _v2.clone(),\n          depth: sphere.radius - Math.sqrt(d)\n        };\n      }\n    }\n    return false;\n  }\n  getSphereTriangles(sphere, triangles) {\n    for (let i = 0; i < this.subTrees.length; i++) {\n      const subTree = this.subTrees[i];\n      if (!sphere.intersectsBox(subTree.box))\n        continue;\n      if (subTree.triangles.length > 0) {\n        for (let j = 0; j < subTree.triangles.length; j++) {\n          if (triangles.indexOf(subTree.triangles[j]) === -1)\n            triangles.push(subTree.triangles[j]);\n        }\n      } else {\n        subTree.getSphereTriangles(sphere, triangles);\n      }\n    }\n  }\n  getCapsuleTriangles(capsule, triangles) {\n    for (let i = 0; i < this.subTrees.length; i++) {\n      const subTree = this.subTrees[i];\n      if (!capsule.intersectsBox(subTree.box))\n        continue;\n      if (subTree.triangles.length > 0) {\n        for (let j = 0; j < subTree.triangles.length; j++) {\n          if (triangles.indexOf(subTree.triangles[j]) === -1)\n            triangles.push(subTree.triangles[j]);\n        }\n      } else {\n        subTree.getCapsuleTriangles(capsule, triangles);\n      }\n    }\n  }\n  sphereIntersect(sphere) {\n    _sphere.copy(sphere);\n    const triangles = [];\n    let result, hit = false;\n    this.getSphereTriangles(sphere, triangles);\n    for (let i = 0; i < triangles.length; i++) {\n      if (result = this.triangleSphereIntersect(_sphere, triangles[i])) {\n        hit = true;\n        _sphere.center.add(result.normal.multiplyScalar(result.depth));\n      }\n    }\n    if (hit) {\n      const collisionVector = _sphere.center.clone().sub(sphere.center);\n      const depth = collisionVector.length();\n      return { normal: collisionVector.normalize(), depth };\n    }\n    return false;\n  }\n  capsuleIntersect(capsule) {\n    _capsule.copy(capsule);\n    const triangles = [];\n    let result, hit = false;\n    this.getCapsuleTriangles(_capsule, triangles);\n    for (let i = 0; i < triangles.length; i++) {\n      if (result = this.triangleCapsuleIntersect(_capsule, triangles[i])) {\n        hit = true;\n        _capsule.translate(result.normal.multiplyScalar(result.depth));\n      }\n    }\n    if (hit) {\n      const collisionVector = _capsule.getCenter(new Vector3()).sub(capsule.getCenter(_v1));\n      const depth = collisionVector.length();\n      return { normal: collisionVector.normalize(), depth };\n    }\n    return false;\n  }\n  rayIntersect(ray) {\n    if (ray.direction.length() === 0)\n      return;\n    const triangles = [];\n    let triangle, position, distance = 1e100;\n    this.getRayTriangles(ray, triangles);\n    for (let i = 0; i < triangles.length; i++) {\n      const result = ray.intersectTriangle(triangles[i].a, triangles[i].b, triangles[i].c, true, _v1);\n      if (result) {\n        const newdistance = result.sub(ray.origin).length();\n        if (distance > newdistance) {\n          position = result.clone().add(ray.origin);\n          distance = newdistance;\n          triangle = triangles[i];\n        }\n      }\n    }\n    return distance < 1e100 ? { distance, triangle, position } : false;\n  }\n  fromGraphNode(group) {\n    group.updateWorldMatrix(true, true);\n    group.traverse((obj) => {\n      if (obj.isMesh === true) {\n        let geometry, isTemp = false;\n        if (obj.geometry.index !== null) {\n          isTemp = true;\n          geometry = obj.geometry.toNonIndexed();\n        } else {\n          geometry = obj.geometry;\n        }\n        const positionAttribute = geometry.getAttribute(\"position\");\n        for (let i = 0; i < positionAttribute.count; i += 3) {\n          const v1 = new Vector3().fromBufferAttribute(positionAttribute, i);\n          const v2 = new Vector3().fromBufferAttribute(positionAttribute, i + 1);\n          const v3 = new Vector3().fromBufferAttribute(positionAttribute, i + 2);\n          v1.applyMatrix4(obj.matrixWorld);\n          v2.applyMatrix4(obj.matrixWorld);\n          v3.applyMatrix4(obj.matrixWorld);\n          this.addTriangle(new Triangle(v1, v2, v3));\n        }\n        if (isTemp) {\n          geometry.dispose();\n        }\n      }\n    });\n    this.build();\n    return this;\n  }\n}\nexport {\n  Octree\n};\n//# sourceMappingURL=Octree.js.map\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 4542, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4548, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/math/Lut.js"],"sourcesContent":["import { Color, MathUtils } from \"three\";\nclass Lut {\n  constructor(colormap, count = 32) {\n    this.isLut = true;\n    this.lut = [];\n    this.map = [];\n    this.n = 0;\n    this.minV = 0;\n    this.maxV = 1;\n    this.setColorMap(colormap, count);\n  }\n  set(value) {\n    if (value.isLut === true) {\n      this.copy(value);\n    }\n    return this;\n  }\n  setMin(min) {\n    this.minV = min;\n    return this;\n  }\n  setMax(max) {\n    this.maxV = max;\n    return this;\n  }\n  setColorMap(colormap, count = 32) {\n    this.map = ColorMapKeywords[colormap] || ColorMapKeywords.rainbow;\n    this.n = count;\n    const step = 1 / this.n;\n    const minColor = new Color();\n    const maxColor = new Color();\n    this.lut.length = 0;\n    this.lut.push(new Color(this.map[0][1]));\n    for (let i = 1; i < count; i++) {\n      const alpha = i * step;\n      for (let j = 0; j < this.map.length - 1; j++) {\n        if (alpha > this.map[j][0] && alpha <= this.map[j + 1][0]) {\n          const min = this.map[j][0];\n          const max = this.map[j + 1][0];\n          minColor.setHex(this.map[j][1], \"srgb-linear\");\n          maxColor.setHex(this.map[j + 1][1], \"srgb-linear\");\n          const color = new Color().lerpColors(minColor, maxColor, (alpha - min) / (max - min));\n          this.lut.push(color);\n        }\n      }\n    }\n    this.lut.push(new Color(this.map[this.map.length - 1][1]));\n    return this;\n  }\n  copy(lut) {\n    this.lut = lut.lut;\n    this.map = lut.map;\n    this.n = lut.n;\n    this.minV = lut.minV;\n    this.maxV = lut.maxV;\n    return this;\n  }\n  getColor(alpha) {\n    alpha = MathUtils.clamp(alpha, this.minV, this.maxV);\n    alpha = (alpha - this.minV) / (this.maxV - this.minV);\n    const colorPosition = Math.round(alpha * this.n);\n    return this.lut[colorPosition];\n  }\n  addColorMap(name, arrayOfColors) {\n    ColorMapKeywords[name] = arrayOfColors;\n    return this;\n  }\n  createCanvas() {\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = 1;\n    canvas.height = this.n;\n    this.updateCanvas(canvas);\n    return canvas;\n  }\n  updateCanvas(canvas) {\n    const ctx = canvas.getContext(\"2d\", { alpha: false });\n    const imageData = ctx.getImageData(0, 0, 1, this.n);\n    const data = imageData.data;\n    let k = 0;\n    const step = 1 / this.n;\n    const minColor = new Color();\n    const maxColor = new Color();\n    const finalColor = new Color();\n    for (let i = 1; i >= 0; i -= step) {\n      for (let j = this.map.length - 1; j >= 0; j--) {\n        if (i < this.map[j][0] && i >= this.map[j - 1][0]) {\n          const min = this.map[j - 1][0];\n          const max = this.map[j][0];\n          minColor.setHex(this.map[j - 1][1], \"srgb-linear\");\n          maxColor.setHex(this.map[j][1], \"srgb-linear\");\n          finalColor.lerpColors(minColor, maxColor, (i - min) / (max - min));\n          data[k * 4] = Math.round(finalColor.r * 255);\n          data[k * 4 + 1] = Math.round(finalColor.g * 255);\n          data[k * 4 + 2] = Math.round(finalColor.b * 255);\n          data[k * 4 + 3] = 255;\n          k += 1;\n        }\n      }\n    }\n    ctx.putImageData(imageData, 0, 0);\n    return canvas;\n  }\n}\nconst ColorMapKeywords = {\n  rainbow: [\n    [0, 255],\n    [0.2, 65535],\n    [0.5, 65280],\n    [0.8, 16776960],\n    [1, 16711680]\n  ],\n  cooltowarm: [\n    [0, 3952322],\n    [0.2, 10206463],\n    [0.5, 14474460],\n    [0.8, 16163717],\n    [1, 11797542]\n  ],\n  blackbody: [\n    [0, 0],\n    [0.2, 7864320],\n    [0.5, 15086080],\n    [0.8, 16776960],\n    [1, 16777215]\n  ],\n  grayscale: [\n    [0, 0],\n    [0.2, 4210752],\n    [0.5, 8355712],\n    [0.8, 12566463],\n    [1, 16777215]\n  ]\n};\nexport {\n  ColorMapKeywords,\n  Lut\n};\n//# sourceMappingURL=Lut.js.map\n"],"names":[],"mappings":";;;;AAAA;;AACA,MAAM;IACJ,YAAY,QAAQ,EAAE,QAAQ,EAAE,CAAE;QAChC,IAAI,CAAC,KAAK,GAAG;QACb,IAAI,CAAC,GAAG,GAAG,EAAE;QACb,IAAI,CAAC,GAAG,GAAG,EAAE;QACb,IAAI,CAAC,CAAC,GAAG;QACT,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,WAAW,CAAC,UAAU;IAC7B;IACA,IAAI,KAAK,EAAE;QACT,IAAI,MAAM,KAAK,KAAK,MAAM;YACxB,IAAI,CAAC,IAAI,CAAC;QACZ;QACA,OAAO,IAAI;IACb;IACA,OAAO,GAAG,EAAE;QACV,IAAI,CAAC,IAAI,GAAG;QACZ,OAAO,IAAI;IACb;IACA,OAAO,GAAG,EAAE;QACV,IAAI,CAAC,IAAI,GAAG;QACZ,OAAO,IAAI;IACb;IACA,YAAY,QAAQ,EAAE,QAAQ,EAAE,EAAE;QAChC,IAAI,CAAC,GAAG,GAAG,gBAAgB,CAAC,SAAS,IAAI,iBAAiB,OAAO;QACjE,IAAI,CAAC,CAAC,GAAG;QACT,MAAM,OAAO,IAAI,IAAI,CAAC,CAAC;QACvB,MAAM,WAAW,IAAI,kJAAA,CAAA,QAAK;QAC1B,MAAM,WAAW,IAAI,kJAAA,CAAA,QAAK;QAC1B,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG;QAClB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,kJAAA,CAAA,QAAK,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;QACtC,IAAK,IAAI,IAAI,GAAG,IAAI,OAAO,IAAK;YAC9B,MAAM,QAAQ,IAAI;YAClB,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,GAAG,IAAK;gBAC5C,IAAI,QAAQ,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,SAAS,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE;oBACzD,MAAM,MAAM,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;oBAC1B,MAAM,MAAM,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,EAAE;oBAC9B,SAAS,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;oBAChC,SAAS,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE;oBACpC,MAAM,QAAQ,IAAI,kJAAA,CAAA,QAAK,GAAG,UAAU,CAAC,UAAU,UAAU,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,GAAG;oBACnF,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC;gBAChB;YACF;QACF;QACA,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,kJAAA,CAAA,QAAK,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,EAAE,CAAC,EAAE;QACxD,OAAO,IAAI;IACb;IACA,KAAK,GAAG,EAAE;QACR,IAAI,CAAC,GAAG,GAAG,IAAI,GAAG;QAClB,IAAI,CAAC,GAAG,GAAG,IAAI,GAAG;QAClB,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC;QACd,IAAI,CAAC,IAAI,GAAG,IAAI,IAAI;QACpB,IAAI,CAAC,IAAI,GAAG,IAAI,IAAI;QACpB,OAAO,IAAI;IACb;IACA,SAAS,KAAK,EAAE;QACd,QAAQ,kJAAA,CAAA,YAAS,CAAC,KAAK,CAAC,OAAO,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI;QACnD,QAAQ,CAAC,QAAQ,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI;QACpD,MAAM,gBAAgB,KAAK,KAAK,CAAC,QAAQ,IAAI,CAAC,CAAC;QAC/C,OAAO,IAAI,CAAC,GAAG,CAAC,cAAc;IAChC;IACA,YAAY,IAAI,EAAE,aAAa,EAAE;QAC/B,gBAAgB,CAAC,KAAK,GAAG;QACzB,OAAO,IAAI;IACb;IACA,eAAe;QACb,MAAM,SAAS,SAAS,aAAa,CAAC;QACtC,OAAO,KAAK,GAAG;QACf,OAAO,MAAM,GAAG,IAAI,CAAC,CAAC;QACtB,IAAI,CAAC,YAAY,CAAC;QAClB,OAAO;IACT;IACA,aAAa,MAAM,EAAE;QACnB,MAAM,MAAM,OAAO,UAAU,CAAC,MAAM;YAAE,OAAO;QAAM;QACnD,MAAM,YAAY,IAAI,YAAY,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC;QAClD,MAAM,OAAO,UAAU,IAAI;QAC3B,IAAI,IAAI;QACR,MAAM,OAAO,IAAI,IAAI,CAAC,CAAC;QACvB,MAAM,WAAW,IAAI,kJAAA,CAAA,QAAK;QAC1B,MAAM,WAAW,IAAI,kJAAA,CAAA,QAAK;QAC1B,MAAM,aAAa,IAAI,kJAAA,CAAA,QAAK;QAC5B,IAAK,IAAI,IAAI,GAAG,KAAK,GAAG,KAAK,KAAM;YACjC,IAAK,IAAI,IAAI,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,GAAG,KAAK,GAAG,IAAK;gBAC7C,IAAI,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE;oBACjD,MAAM,MAAM,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,EAAE;oBAC9B,MAAM,MAAM,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;oBAC1B,SAAS,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE;oBACpC,SAAS,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;oBAChC,WAAW,UAAU,CAAC,UAAU,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,GAAG;oBAChE,IAAI,CAAC,IAAI,EAAE,GAAG,KAAK,KAAK,CAAC,WAAW,CAAC,GAAG;oBACxC,IAAI,CAAC,IAAI,IAAI,EAAE,GAAG,KAAK,KAAK,CAAC,WAAW,CAAC,GAAG;oBAC5C,IAAI,CAAC,IAAI,IAAI,EAAE,GAAG,KAAK,KAAK,CAAC,WAAW,CAAC,GAAG;oBAC5C,IAAI,CAAC,IAAI,IAAI,EAAE,GAAG;oBAClB,KAAK;gBACP;YACF;QACF;QACA,IAAI,YAAY,CAAC,WAAW,GAAG;QAC/B,OAAO;IACT;AACF;AACA,MAAM,mBAAmB;IACvB,SAAS;QACP;YAAC;YAAG;SAAI;QACR;YAAC;YAAK;SAAM;QACZ;YAAC;YAAK;SAAM;QACZ;YAAC;YAAK;SAAS;QACf;YAAC;YAAG;SAAS;KACd;IACD,YAAY;QACV;YAAC;YAAG;SAAQ;QACZ;YAAC;YAAK;SAAS;QACf;YAAC;YAAK;SAAS;QACf;YAAC;YAAK;SAAS;QACf;YAAC;YAAG;SAAS;KACd;IACD,WAAW;QACT;YAAC;YAAG;SAAE;QACN;YAAC;YAAK;SAAQ;QACd;YAAC;YAAK;SAAS;QACf;YAAC;YAAK;SAAS;QACf;YAAC;YAAG;SAAS;KACd;IACD,WAAW;QACT;YAAC;YAAG;SAAE;QACN;YAAC;YAAK;SAAQ;QACd;YAAC;YAAK;SAAQ;QACd;YAAC;YAAK;SAAS;QACf;YAAC;YAAG;SAAS;KACd;AACH;;CAKA,+BAA+B","ignoreList":[0]}},
    {"offset": {"line": 4750, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4756, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/geometries/ConvexGeometry.js"],"sourcesContent":["import { BufferGeometry, Float32BufferAttribute } from \"three\";\nimport { ConvexHull } from \"../math/ConvexHull.js\";\nclass ConvexGeometry extends BufferGeometry {\n  constructor(points = []) {\n    super();\n    const vertices = [];\n    const normals = [];\n    const convexHull = new ConvexHull().setFromPoints(points);\n    const faces = convexHull.faces;\n    for (let i = 0; i < faces.length; i++) {\n      const face = faces[i];\n      let edge = face.edge;\n      do {\n        const point = edge.head().point;\n        vertices.push(point.x, point.y, point.z);\n        normals.push(face.normal.x, face.normal.y, face.normal.z);\n        edge = edge.next;\n      } while (edge !== face.edge);\n    }\n    this.setAttribute(\"position\", new Float32BufferAttribute(vertices, 3));\n    this.setAttribute(\"normal\", new Float32BufferAttribute(normals, 3));\n  }\n}\nexport {\n  ConvexGeometry\n};\n//# sourceMappingURL=ConvexGeometry.js.map\n"],"names":[],"mappings":";;;AACA;AADA;;;AAEA,MAAM,uBAAuB,kJAAA,CAAA,iBAAc;IACzC,YAAY,SAAS,EAAE,CAAE;QACvB,KAAK;QACL,MAAM,WAAW,EAAE;QACnB,MAAM,UAAU,EAAE;QAClB,MAAM,aAAa,IAAI,wJAAA,CAAA,aAAU,GAAG,aAAa,CAAC;QAClD,MAAM,QAAQ,WAAW,KAAK;QAC9B,IAAK,IAAI,IAAI,GAAG,IAAI,MAAM,MAAM,EAAE,IAAK;YACrC,MAAM,OAAO,KAAK,CAAC,EAAE;YACrB,IAAI,OAAO,KAAK,IAAI;YACpB,GAAG;gBACD,MAAM,QAAQ,KAAK,IAAI,GAAG,KAAK;gBAC/B,SAAS,IAAI,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC,EAAE,MAAM,CAAC;gBACvC,QAAQ,IAAI,CAAC,KAAK,MAAM,CAAC,CAAC,EAAE,KAAK,MAAM,CAAC,CAAC,EAAE,KAAK,MAAM,CAAC,CAAC;gBACxD,OAAO,KAAK,IAAI;YAClB,QAAS,SAAS,KAAK,IAAI,CAAE;QAC/B;QACA,IAAI,CAAC,YAAY,CAAC,YAAY,IAAI,kJAAA,CAAA,yBAAsB,CAAC,UAAU;QACnE,IAAI,CAAC,YAAY,CAAC,UAAU,IAAI,kJAAA,CAAA,yBAAsB,CAAC,SAAS;IAClE;AACF;;CAIA,0CAA0C","ignoreList":[0]}},
    {"offset": {"line": 4786, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4792, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/geometries/LightningStrike.js"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nimport { BufferGeometry, Vector3, Uint32BufferAttribute, Float32BufferAttribute, DynamicDrawUsage, MathUtils } from \"three\";\nimport { SimplexNoise } from \"../math/SimplexNoise.js\";\nconst LightningStrike = /* @__PURE__ */ (() => {\n  const _LightningStrike = class extends BufferGeometry {\n    constructor(rayParameters = {}) {\n      super();\n      this.isLightningStrike = true;\n      this.type = \"LightningStrike\";\n      this.init(_LightningStrike.copyParameters(rayParameters, rayParameters));\n      this.createMesh();\n    }\n    static createRandomGenerator() {\n      const numSeeds = 2053;\n      const seeds = [];\n      for (let i = 0; i < numSeeds; i++) {\n        seeds.push(Math.random());\n      }\n      const generator = {\n        currentSeed: 0,\n        random: function() {\n          const value = seeds[generator.currentSeed];\n          generator.currentSeed = (generator.currentSeed + 1) % numSeeds;\n          return value;\n        },\n        getSeed: function() {\n          return generator.currentSeed / numSeeds;\n        },\n        setSeed: function(seed) {\n          generator.currentSeed = Math.floor(seed * numSeeds) % numSeeds;\n        }\n      };\n      return generator;\n    }\n    static copyParameters(dest = {}, source = {}) {\n      const vecCopy = function(v) {\n        if (source === dest) {\n          return v;\n        } else {\n          return v.clone();\n        }\n      };\n      dest.sourceOffset = source.sourceOffset !== void 0 ? vecCopy(source.sourceOffset) : new Vector3(0, 100, 0), dest.destOffset = source.destOffset !== void 0 ? vecCopy(source.destOffset) : new Vector3(0, 0, 0), dest.timeScale = source.timeScale !== void 0 ? source.timeScale : 1, dest.roughness = source.roughness !== void 0 ? source.roughness : 0.9, dest.straightness = source.straightness !== void 0 ? source.straightness : 0.7, dest.up0 = source.up0 !== void 0 ? vecCopy(source.up0) : new Vector3(0, 0, 1);\n      dest.up1 = source.up1 !== void 0 ? vecCopy(source.up1) : new Vector3(0, 0, 1), dest.radius0 = source.radius0 !== void 0 ? source.radius0 : 1, dest.radius1 = source.radius1 !== void 0 ? source.radius1 : 1, dest.radius0Factor = source.radius0Factor !== void 0 ? source.radius0Factor : 0.5, dest.radius1Factor = source.radius1Factor !== void 0 ? source.radius1Factor : 0.2, dest.minRadius = source.minRadius !== void 0 ? source.minRadius : 0.2, // These parameters should not be changed after lightning creation. They can be changed but the ray will change its form abruptly:\n      dest.isEternal = source.isEternal !== void 0 ? source.isEternal : source.birthTime === void 0 || source.deathTime === void 0, dest.birthTime = source.birthTime, dest.deathTime = source.deathTime, dest.propagationTimeFactor = source.propagationTimeFactor !== void 0 ? source.propagationTimeFactor : 0.1, dest.vanishingTimeFactor = source.vanishingTimeFactor !== void 0 ? source.vanishingTimeFactor : 0.9, dest.subrayPeriod = source.subrayPeriod !== void 0 ? source.subrayPeriod : 4, dest.subrayDutyCycle = source.subrayDutyCycle !== void 0 ? source.subrayDutyCycle : 0.6;\n      dest.maxIterations = source.maxIterations !== void 0 ? source.maxIterations : 9;\n      dest.isStatic = source.isStatic !== void 0 ? source.isStatic : false;\n      dest.ramification = source.ramification !== void 0 ? source.ramification : 5;\n      dest.maxSubrayRecursion = source.maxSubrayRecursion !== void 0 ? source.maxSubrayRecursion : 3;\n      dest.recursionProbability = source.recursionProbability !== void 0 ? source.recursionProbability : 0.6;\n      dest.generateUVs = source.generateUVs !== void 0 ? source.generateUVs : false;\n      dest.randomGenerator = source.randomGenerator, dest.noiseSeed = source.noiseSeed, dest.onDecideSubrayCreation = source.onDecideSubrayCreation, dest.onSubrayCreation = source.onSubrayCreation;\n      return dest;\n    }\n    update(time) {\n      if (this.isStatic)\n        return;\n      if (this.rayParameters.isEternal || this.rayParameters.birthTime <= time && time <= this.rayParameters.deathTime) {\n        this.updateMesh(time);\n        if (time < this.subrays[0].endPropagationTime) {\n          this.state = _LightningStrike.RAY_PROPAGATING;\n        } else if (time > this.subrays[0].beginVanishingTime) {\n          this.state = _LightningStrike.RAY_VANISHING;\n        } else {\n          this.state = _LightningStrike.RAY_STEADY;\n        }\n        this.visible = true;\n      } else {\n        this.visible = false;\n        if (time < this.rayParameters.birthTime) {\n          this.state = _LightningStrike.RAY_UNBORN;\n        } else {\n          this.state = _LightningStrike.RAY_EXTINGUISHED;\n        }\n      }\n    }\n    init(rayParameters) {\n      this.rayParameters = rayParameters;\n      this.maxIterations = rayParameters.maxIterations !== void 0 ? Math.floor(rayParameters.maxIterations) : 9;\n      rayParameters.maxIterations = this.maxIterations;\n      this.isStatic = rayParameters.isStatic !== void 0 ? rayParameters.isStatic : false;\n      rayParameters.isStatic = this.isStatic;\n      this.ramification = rayParameters.ramification !== void 0 ? Math.floor(rayParameters.ramification) : 5;\n      rayParameters.ramification = this.ramification;\n      this.maxSubrayRecursion = rayParameters.maxSubrayRecursion !== void 0 ? Math.floor(rayParameters.maxSubrayRecursion) : 3;\n      rayParameters.maxSubrayRecursion = this.maxSubrayRecursion;\n      this.recursionProbability = rayParameters.recursionProbability !== void 0 ? rayParameters.recursionProbability : 0.6;\n      rayParameters.recursionProbability = this.recursionProbability;\n      this.generateUVs = rayParameters.generateUVs !== void 0 ? rayParameters.generateUVs : false;\n      rayParameters.generateUVs = this.generateUVs;\n      if (rayParameters.randomGenerator !== void 0) {\n        this.randomGenerator = rayParameters.randomGenerator;\n        this.seedGenerator = rayParameters.randomGenerator;\n        if (rayParameters.noiseSeed !== void 0) {\n          this.seedGenerator.setSeed(rayParameters.noiseSeed);\n        }\n      } else {\n        this.randomGenerator = _LightningStrike.createRandomGenerator();\n        this.seedGenerator = Math;\n      }\n      if (rayParameters.onDecideSubrayCreation !== void 0) {\n        this.onDecideSubrayCreation = rayParameters.onDecideSubrayCreation;\n      } else {\n        this.createDefaultSubrayCreationCallbacks();\n        if (rayParameters.onSubrayCreation !== void 0) {\n          this.onSubrayCreation = rayParameters.onSubrayCreation;\n        }\n      }\n      this.state = _LightningStrike.RAY_INITIALIZED;\n      this.maxSubrays = Math.ceil(1 + Math.pow(this.ramification, Math.max(0, this.maxSubrayRecursion - 1)));\n      rayParameters.maxSubrays = this.maxSubrays;\n      this.maxRaySegments = 2 * (1 << this.maxIterations);\n      this.subrays = [];\n      for (let i = 0; i < this.maxSubrays; i++) {\n        this.subrays.push(this.createSubray());\n      }\n      this.raySegments = [];\n      for (let i = 0; i < this.maxRaySegments; i++) {\n        this.raySegments.push(this.createSegment());\n      }\n      this.time = 0;\n      this.timeFraction = 0;\n      this.currentSegmentCallback = null;\n      this.currentCreateTriangleVertices = this.generateUVs ? this.createTriangleVerticesWithUVs : this.createTriangleVerticesWithoutUVs;\n      this.numSubrays = 0;\n      this.currentSubray = null;\n      this.currentSegmentIndex = 0;\n      this.isInitialSegment = false;\n      this.subrayProbability = 0;\n      this.currentVertex = 0;\n      this.currentIndex = 0;\n      this.currentCoordinate = 0;\n      this.currentUVCoordinate = 0;\n      this.vertices = null;\n      this.uvs = null;\n      this.indices = null;\n      this.positionAttribute = null;\n      this.uvsAttribute = null;\n      this.simplexX = new SimplexNoise(this.seedGenerator);\n      this.simplexY = new SimplexNoise(this.seedGenerator);\n      this.simplexZ = new SimplexNoise(this.seedGenerator);\n      this.forwards = new Vector3();\n      this.forwardsFill = new Vector3();\n      this.side = new Vector3();\n      this.down = new Vector3();\n      this.middlePos = new Vector3();\n      this.middleLinPos = new Vector3();\n      this.newPos = new Vector3();\n      this.vPos = new Vector3();\n      this.cross1 = new Vector3();\n    }\n    createMesh() {\n      const maxDrawableSegmentsPerSubRay = 1 << this.maxIterations;\n      const maxVerts = 3 * (maxDrawableSegmentsPerSubRay + 1) * this.maxSubrays;\n      const maxIndices = 18 * maxDrawableSegmentsPerSubRay * this.maxSubrays;\n      this.vertices = new Float32Array(maxVerts * 3);\n      this.indices = new Uint32Array(maxIndices);\n      if (this.generateUVs) {\n        this.uvs = new Float32Array(maxVerts * 2);\n      }\n      this.fillMesh(0);\n      this.setIndex(new Uint32BufferAttribute(this.indices, 1));\n      this.positionAttribute = new Float32BufferAttribute(this.vertices, 3);\n      this.setAttribute(\"position\", this.positionAttribute);\n      if (this.generateUVs) {\n        this.uvsAttribute = new Float32BufferAttribute(new Float32Array(this.uvs), 2);\n        this.setAttribute(\"uv\", this.uvsAttribute);\n      }\n      if (!this.isStatic) {\n        this.index.usage = DynamicDrawUsage;\n        this.positionAttribute.usage = DynamicDrawUsage;\n        if (this.generateUVs) {\n          this.uvsAttribute.usage = DynamicDrawUsage;\n        }\n      }\n      this.vertices = this.positionAttribute.array;\n      this.indices = this.index.array;\n      if (this.generateUVs) {\n        this.uvs = this.uvsAttribute.array;\n      }\n    }\n    updateMesh(time) {\n      this.fillMesh(time);\n      this.drawRange.count = this.currentIndex;\n      this.index.needsUpdate = true;\n      this.positionAttribute.needsUpdate = true;\n      if (this.generateUVs) {\n        this.uvsAttribute.needsUpdate = true;\n      }\n    }\n    fillMesh(time) {\n      const scope = this;\n      this.currentVertex = 0;\n      this.currentIndex = 0;\n      this.currentCoordinate = 0;\n      this.currentUVCoordinate = 0;\n      this.fractalRay(time, function fillVertices(segment) {\n        const subray = scope.currentSubray;\n        if (time < subray.birthTime) {\n          return;\n        } else if (this.rayParameters.isEternal && scope.currentSubray.recursion == 0) {\n          scope.createPrism(segment);\n          scope.onDecideSubrayCreation(segment, scope);\n        } else if (time < subray.endPropagationTime) {\n          if (scope.timeFraction >= segment.fraction0 * subray.propagationTimeFactor) {\n            scope.createPrism(segment);\n            scope.onDecideSubrayCreation(segment, scope);\n          }\n        } else if (time < subray.beginVanishingTime) {\n          scope.createPrism(segment);\n          scope.onDecideSubrayCreation(segment, scope);\n        } else {\n          if (scope.timeFraction <= subray.vanishingTimeFactor + segment.fraction1 * (1 - subray.vanishingTimeFactor)) {\n            scope.createPrism(segment);\n          }\n          scope.onDecideSubrayCreation(segment, scope);\n        }\n      });\n    }\n    addNewSubray() {\n      return this.subrays[this.numSubrays++];\n    }\n    initSubray(subray, rayParameters) {\n      subray.pos0.copy(rayParameters.sourceOffset);\n      subray.pos1.copy(rayParameters.destOffset);\n      subray.up0.copy(rayParameters.up0);\n      subray.up1.copy(rayParameters.up1);\n      subray.radius0 = rayParameters.radius0;\n      subray.radius1 = rayParameters.radius1;\n      subray.birthTime = rayParameters.birthTime;\n      subray.deathTime = rayParameters.deathTime;\n      subray.timeScale = rayParameters.timeScale;\n      subray.roughness = rayParameters.roughness;\n      subray.straightness = rayParameters.straightness;\n      subray.propagationTimeFactor = rayParameters.propagationTimeFactor;\n      subray.vanishingTimeFactor = rayParameters.vanishingTimeFactor;\n      subray.maxIterations = this.maxIterations;\n      subray.seed = rayParameters.noiseSeed !== void 0 ? rayParameters.noiseSeed : 0;\n      subray.recursion = 0;\n    }\n    fractalRay(time, segmentCallback) {\n      this.time = time;\n      this.currentSegmentCallback = segmentCallback;\n      this.numSubrays = 0;\n      this.initSubray(this.addNewSubray(), this.rayParameters);\n      for (let subrayIndex = 0; subrayIndex < this.numSubrays; subrayIndex++) {\n        const subray = this.subrays[subrayIndex];\n        this.currentSubray = subray;\n        this.randomGenerator.setSeed(subray.seed);\n        subray.endPropagationTime = MathUtils.lerp(subray.birthTime, subray.deathTime, subray.propagationTimeFactor);\n        subray.beginVanishingTime = MathUtils.lerp(subray.deathTime, subray.birthTime, 1 - subray.vanishingTimeFactor);\n        const random1 = this.randomGenerator.random;\n        subray.linPos0.set(random1(), random1(), random1()).multiplyScalar(1e3);\n        subray.linPos1.set(random1(), random1(), random1()).multiplyScalar(1e3);\n        this.timeFraction = (time - subray.birthTime) / (subray.deathTime - subray.birthTime);\n        this.currentSegmentIndex = 0;\n        this.isInitialSegment = true;\n        const segment = this.getNewSegment();\n        segment.iteration = 0;\n        segment.pos0.copy(subray.pos0);\n        segment.pos1.copy(subray.pos1);\n        segment.linPos0.copy(subray.linPos0);\n        segment.linPos1.copy(subray.linPos1);\n        segment.up0.copy(subray.up0);\n        segment.up1.copy(subray.up1);\n        segment.radius0 = subray.radius0;\n        segment.radius1 = subray.radius1;\n        segment.fraction0 = 0;\n        segment.fraction1 = 1;\n        segment.positionVariationFactor = 1 - subray.straightness;\n        this.subrayProbability = this.ramification * Math.pow(this.recursionProbability, subray.recursion) / (1 << subray.maxIterations);\n        this.fractalRayRecursive(segment);\n      }\n      this.currentSegmentCallback = null;\n      this.currentSubray = null;\n    }\n    fractalRayRecursive(segment) {\n      if (segment.iteration >= this.currentSubray.maxIterations) {\n        this.currentSegmentCallback(segment);\n        return;\n      }\n      this.forwards.subVectors(segment.pos1, segment.pos0);\n      let lForwards = this.forwards.length();\n      if (lForwards < 1e-6) {\n        this.forwards.set(0, 0, 0.01);\n        lForwards = this.forwards.length();\n      }\n      const middleRadius = (segment.radius0 + segment.radius1) * 0.5;\n      const middleFraction = (segment.fraction0 + segment.fraction1) * 0.5;\n      const timeDimension = this.time * this.currentSubray.timeScale * Math.pow(2, segment.iteration);\n      this.middlePos.lerpVectors(segment.pos0, segment.pos1, 0.5);\n      this.middleLinPos.lerpVectors(segment.linPos0, segment.linPos1, 0.5);\n      const p = this.middleLinPos;\n      this.newPos.set(\n        this.simplexX.noise4d(p.x, p.y, p.z, timeDimension),\n        this.simplexY.noise4d(p.x, p.y, p.z, timeDimension),\n        this.simplexZ.noise4d(p.x, p.y, p.z, timeDimension)\n      );\n      this.newPos.multiplyScalar(segment.positionVariationFactor * lForwards);\n      this.newPos.add(this.middlePos);\n      const newSegment1 = this.getNewSegment();\n      newSegment1.pos0.copy(segment.pos0);\n      newSegment1.pos1.copy(this.newPos);\n      newSegment1.linPos0.copy(segment.linPos0);\n      newSegment1.linPos1.copy(this.middleLinPos);\n      newSegment1.up0.copy(segment.up0);\n      newSegment1.up1.copy(segment.up1);\n      newSegment1.radius0 = segment.radius0;\n      newSegment1.radius1 = middleRadius;\n      newSegment1.fraction0 = segment.fraction0;\n      newSegment1.fraction1 = middleFraction;\n      newSegment1.positionVariationFactor = segment.positionVariationFactor * this.currentSubray.roughness;\n      newSegment1.iteration = segment.iteration + 1;\n      const newSegment2 = this.getNewSegment();\n      newSegment2.pos0.copy(this.newPos);\n      newSegment2.pos1.copy(segment.pos1);\n      newSegment2.linPos0.copy(this.middleLinPos);\n      newSegment2.linPos1.copy(segment.linPos1);\n      this.cross1.crossVectors(segment.up0, this.forwards.normalize());\n      newSegment2.up0.crossVectors(this.forwards, this.cross1).normalize();\n      newSegment2.up1.copy(segment.up1);\n      newSegment2.radius0 = middleRadius;\n      newSegment2.radius1 = segment.radius1;\n      newSegment2.fraction0 = middleFraction;\n      newSegment2.fraction1 = segment.fraction1;\n      newSegment2.positionVariationFactor = segment.positionVariationFactor * this.currentSubray.roughness;\n      newSegment2.iteration = segment.iteration + 1;\n      this.fractalRayRecursive(newSegment1);\n      this.fractalRayRecursive(newSegment2);\n    }\n    createPrism(segment) {\n      this.forwardsFill.subVectors(segment.pos1, segment.pos0).normalize();\n      if (this.isInitialSegment) {\n        this.currentCreateTriangleVertices(segment.pos0, segment.up0, this.forwardsFill, segment.radius0, 0);\n        this.isInitialSegment = false;\n      }\n      this.currentCreateTriangleVertices(\n        segment.pos1,\n        segment.up0,\n        this.forwardsFill,\n        segment.radius1,\n        segment.fraction1\n      );\n      this.createPrismFaces();\n    }\n    createTriangleVerticesWithoutUVs(pos, up, forwards, radius) {\n      this.side.crossVectors(up, forwards).multiplyScalar(radius * _LightningStrike.COS30DEG);\n      this.down.copy(up).multiplyScalar(-radius * _LightningStrike.SIN30DEG);\n      const p = this.vPos;\n      const v = this.vertices;\n      p.copy(pos).sub(this.side).add(this.down);\n      v[this.currentCoordinate++] = p.x;\n      v[this.currentCoordinate++] = p.y;\n      v[this.currentCoordinate++] = p.z;\n      p.copy(pos).add(this.side).add(this.down);\n      v[this.currentCoordinate++] = p.x;\n      v[this.currentCoordinate++] = p.y;\n      v[this.currentCoordinate++] = p.z;\n      p.copy(up).multiplyScalar(radius).add(pos);\n      v[this.currentCoordinate++] = p.x;\n      v[this.currentCoordinate++] = p.y;\n      v[this.currentCoordinate++] = p.z;\n      this.currentVertex += 3;\n    }\n    createTriangleVerticesWithUVs(pos, up, forwards, radius, u) {\n      this.side.crossVectors(up, forwards).multiplyScalar(radius * _LightningStrike.COS30DEG);\n      this.down.copy(up).multiplyScalar(-radius * _LightningStrike.SIN30DEG);\n      const p = this.vPos;\n      const v = this.vertices;\n      const uv = this.uvs;\n      p.copy(pos).sub(this.side).add(this.down);\n      v[this.currentCoordinate++] = p.x;\n      v[this.currentCoordinate++] = p.y;\n      v[this.currentCoordinate++] = p.z;\n      uv[this.currentUVCoordinate++] = u;\n      uv[this.currentUVCoordinate++] = 0;\n      p.copy(pos).add(this.side).add(this.down);\n      v[this.currentCoordinate++] = p.x;\n      v[this.currentCoordinate++] = p.y;\n      v[this.currentCoordinate++] = p.z;\n      uv[this.currentUVCoordinate++] = u;\n      uv[this.currentUVCoordinate++] = 0.5;\n      p.copy(up).multiplyScalar(radius).add(pos);\n      v[this.currentCoordinate++] = p.x;\n      v[this.currentCoordinate++] = p.y;\n      v[this.currentCoordinate++] = p.z;\n      uv[this.currentUVCoordinate++] = u;\n      uv[this.currentUVCoordinate++] = 1;\n      this.currentVertex += 3;\n    }\n    createPrismFaces(vertex) {\n      const indices = this.indices;\n      vertex = this.currentVertex - 6;\n      indices[this.currentIndex++] = vertex + 1;\n      indices[this.currentIndex++] = vertex + 2;\n      indices[this.currentIndex++] = vertex + 5;\n      indices[this.currentIndex++] = vertex + 1;\n      indices[this.currentIndex++] = vertex + 5;\n      indices[this.currentIndex++] = vertex + 4;\n      indices[this.currentIndex++] = vertex + 0;\n      indices[this.currentIndex++] = vertex + 1;\n      indices[this.currentIndex++] = vertex + 4;\n      indices[this.currentIndex++] = vertex + 0;\n      indices[this.currentIndex++] = vertex + 4;\n      indices[this.currentIndex++] = vertex + 3;\n      indices[this.currentIndex++] = vertex + 2;\n      indices[this.currentIndex++] = vertex + 0;\n      indices[this.currentIndex++] = vertex + 3;\n      indices[this.currentIndex++] = vertex + 2;\n      indices[this.currentIndex++] = vertex + 3;\n      indices[this.currentIndex++] = vertex + 5;\n    }\n    createDefaultSubrayCreationCallbacks() {\n      const random1 = this.randomGenerator.random;\n      this.onDecideSubrayCreation = function(segment, lightningStrike) {\n        const subray = lightningStrike.currentSubray;\n        const period = lightningStrike.rayParameters.subrayPeriod;\n        const dutyCycle = lightningStrike.rayParameters.subrayDutyCycle;\n        const phase0 = lightningStrike.rayParameters.isEternal && subray.recursion == 0 ? -random1() * period : MathUtils.lerp(subray.birthTime, subray.endPropagationTime, segment.fraction0) - random1() * period;\n        const phase = lightningStrike.time - phase0;\n        const currentCycle = Math.floor(phase / period);\n        const childSubraySeed = random1() * (currentCycle + 1);\n        const isActive = phase % period <= dutyCycle * period;\n        let probability = 0;\n        if (isActive) {\n          probability = lightningStrike.subrayProbability;\n        }\n        if (subray.recursion < lightningStrike.maxSubrayRecursion && lightningStrike.numSubrays < lightningStrike.maxSubrays && random1() < probability) {\n          const childSubray = lightningStrike.addNewSubray();\n          const parentSeed = lightningStrike.randomGenerator.getSeed();\n          childSubray.seed = childSubraySeed;\n          lightningStrike.randomGenerator.setSeed(childSubraySeed);\n          childSubray.recursion = subray.recursion + 1;\n          childSubray.maxIterations = Math.max(1, subray.maxIterations - 1);\n          childSubray.linPos0.set(random1(), random1(), random1()).multiplyScalar(1e3);\n          childSubray.linPos1.set(random1(), random1(), random1()).multiplyScalar(1e3);\n          childSubray.up0.copy(subray.up0);\n          childSubray.up1.copy(subray.up1);\n          childSubray.radius0 = segment.radius0 * lightningStrike.rayParameters.radius0Factor;\n          childSubray.radius1 = Math.min(\n            lightningStrike.rayParameters.minRadius,\n            segment.radius1 * lightningStrike.rayParameters.radius1Factor\n          );\n          childSubray.birthTime = phase0 + currentCycle * period;\n          childSubray.deathTime = childSubray.birthTime + period * dutyCycle;\n          if (!lightningStrike.rayParameters.isEternal && subray.recursion == 0) {\n            childSubray.birthTime = Math.max(childSubray.birthTime, subray.birthTime);\n            childSubray.deathTime = Math.min(childSubray.deathTime, subray.deathTime);\n          }\n          childSubray.timeScale = subray.timeScale * 2;\n          childSubray.roughness = subray.roughness;\n          childSubray.straightness = subray.straightness;\n          childSubray.propagationTimeFactor = subray.propagationTimeFactor;\n          childSubray.vanishingTimeFactor = subray.vanishingTimeFactor;\n          lightningStrike.onSubrayCreation(segment, subray, childSubray, lightningStrike);\n          lightningStrike.randomGenerator.setSeed(parentSeed);\n        }\n      };\n      const vec1Pos = new Vector3();\n      const vec2Forward = new Vector3();\n      const vec3Side = new Vector3();\n      const vec4Up = new Vector3();\n      this.onSubrayCreation = function(segment, parentSubray, childSubray, lightningStrike) {\n        lightningStrike.subrayCylinderPosition(segment, parentSubray, childSubray, 0.5, 0.6, 0.2);\n      };\n      this.subrayConePosition = function(segment, parentSubray, childSubray, heightFactor, sideWidthFactor, minSideWidthFactor) {\n        childSubray.pos0.copy(segment.pos0);\n        vec1Pos.subVectors(parentSubray.pos1, parentSubray.pos0);\n        vec2Forward.copy(vec1Pos).normalize();\n        vec1Pos.multiplyScalar(segment.fraction0 + (1 - segment.fraction0) * (random1() * heightFactor));\n        const length = vec1Pos.length();\n        vec3Side.crossVectors(parentSubray.up0, vec2Forward);\n        const angle = 2 * Math.PI * random1();\n        vec3Side.multiplyScalar(Math.cos(angle));\n        vec4Up.copy(parentSubray.up0).multiplyScalar(Math.sin(angle));\n        childSubray.pos1.copy(vec3Side).add(vec4Up).multiplyScalar(length * sideWidthFactor * (minSideWidthFactor + random1() * (1 - minSideWidthFactor))).add(vec1Pos).add(parentSubray.pos0);\n      };\n      this.subrayCylinderPosition = function(segment, parentSubray, childSubray, heightFactor, sideWidthFactor, minSideWidthFactor) {\n        childSubray.pos0.copy(segment.pos0);\n        vec1Pos.subVectors(parentSubray.pos1, parentSubray.pos0);\n        vec2Forward.copy(vec1Pos).normalize();\n        vec1Pos.multiplyScalar(segment.fraction0 + (1 - segment.fraction0) * ((2 * random1() - 1) * heightFactor));\n        const length = vec1Pos.length();\n        vec3Side.crossVectors(parentSubray.up0, vec2Forward);\n        const angle = 2 * Math.PI * random1();\n        vec3Side.multiplyScalar(Math.cos(angle));\n        vec4Up.copy(parentSubray.up0).multiplyScalar(Math.sin(angle));\n        childSubray.pos1.copy(vec3Side).add(vec4Up).multiplyScalar(length * sideWidthFactor * (minSideWidthFactor + random1() * (1 - minSideWidthFactor))).add(vec1Pos).add(parentSubray.pos0);\n      };\n    }\n    createSubray() {\n      return {\n        seed: 0,\n        maxIterations: 0,\n        recursion: 0,\n        pos0: new Vector3(),\n        pos1: new Vector3(),\n        linPos0: new Vector3(),\n        linPos1: new Vector3(),\n        up0: new Vector3(),\n        up1: new Vector3(),\n        radius0: 0,\n        radius1: 0,\n        birthTime: 0,\n        deathTime: 0,\n        timeScale: 0,\n        roughness: 0,\n        straightness: 0,\n        propagationTimeFactor: 0,\n        vanishingTimeFactor: 0,\n        endPropagationTime: 0,\n        beginVanishingTime: 0\n      };\n    }\n    createSegment() {\n      return {\n        iteration: 0,\n        pos0: new Vector3(),\n        pos1: new Vector3(),\n        linPos0: new Vector3(),\n        linPos1: new Vector3(),\n        up0: new Vector3(),\n        up1: new Vector3(),\n        radius0: 0,\n        radius1: 0,\n        fraction0: 0,\n        fraction1: 0,\n        positionVariationFactor: 0\n      };\n    }\n    getNewSegment() {\n      return this.raySegments[this.currentSegmentIndex++];\n    }\n    copy(source) {\n      super.copy(source);\n      this.init(_LightningStrike.copyParameters({}, source.rayParameters));\n      return this;\n    }\n    clone() {\n      return new this.constructor(_LightningStrike.copyParameters({}, this.rayParameters));\n    }\n  };\n  let LightningStrike2 = _LightningStrike;\n  // Ray states\n  __publicField(LightningStrike2, \"RAY_INITIALIZED\", 0);\n  __publicField(LightningStrike2, \"RAY_UNBORN\", 1);\n  __publicField(LightningStrike2, \"RAY_PROPAGATING\", 2);\n  __publicField(LightningStrike2, \"RAY_STEADY\", 3);\n  __publicField(LightningStrike2, \"RAY_VANISHING\", 4);\n  __publicField(LightningStrike2, \"RAY_EXTINGUISHED\", 5);\n  __publicField(LightningStrike2, \"COS30DEG\", Math.cos(30 * Math.PI / 180));\n  __publicField(LightningStrike2, \"SIN30DEG\", Math.sin(30 * Math.PI / 180));\n  return LightningStrike2;\n})();\nexport {\n  LightningStrike\n};\n//# sourceMappingURL=LightningStrike.js.map\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 5348, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5354, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/geometries/ParametricGeometry.js"],"sourcesContent":["import { BufferGeometry, Vector3, Float32BufferAttribute } from \"three\";\nclass ParametricGeometry extends BufferGeometry {\n  constructor(func = (u, v, target) => target.set(u, v, Math.cos(u) * Math.sin(v)), slices = 8, stacks = 8) {\n    super();\n    this.type = \"ParametricGeometry\";\n    this.parameters = {\n      func,\n      slices,\n      stacks\n    };\n    const indices = [];\n    const vertices = [];\n    const normals = [];\n    const uvs = [];\n    const EPS = 1e-5;\n    const normal = new Vector3();\n    const p0 = new Vector3(), p1 = new Vector3();\n    const pu = new Vector3(), pv = new Vector3();\n    const sliceCount = slices + 1;\n    for (let i = 0; i <= stacks; i++) {\n      const v = i / stacks;\n      for (let j = 0; j <= slices; j++) {\n        const u = j / slices;\n        func(u, v, p0);\n        vertices.push(p0.x, p0.y, p0.z);\n        if (u - EPS >= 0) {\n          func(u - EPS, v, p1);\n          pu.subVectors(p0, p1);\n        } else {\n          func(u + EPS, v, p1);\n          pu.subVectors(p1, p0);\n        }\n        if (v - EPS >= 0) {\n          func(u, v - EPS, p1);\n          pv.subVectors(p0, p1);\n        } else {\n          func(u, v + EPS, p1);\n          pv.subVectors(p1, p0);\n        }\n        normal.crossVectors(pu, pv).normalize();\n        normals.push(normal.x, normal.y, normal.z);\n        uvs.push(u, v);\n      }\n    }\n    for (let i = 0; i < stacks; i++) {\n      for (let j = 0; j < slices; j++) {\n        const a = i * sliceCount + j;\n        const b = i * sliceCount + j + 1;\n        const c = (i + 1) * sliceCount + j + 1;\n        const d = (i + 1) * sliceCount + j;\n        indices.push(a, b, d);\n        indices.push(b, c, d);\n      }\n    }\n    this.setIndex(indices);\n    this.setAttribute(\"position\", new Float32BufferAttribute(vertices, 3));\n    this.setAttribute(\"normal\", new Float32BufferAttribute(normals, 3));\n    this.setAttribute(\"uv\", new Float32BufferAttribute(uvs, 2));\n  }\n}\nexport {\n  ParametricGeometry\n};\n//# sourceMappingURL=ParametricGeometry.js.map\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,2BAA2B,kJAAA,CAAA,iBAAc;IAC7C,YAAY,OAAO,CAAC,GAAG,GAAG,SAAW,OAAO,GAAG,CAAC,GAAG,GAAG,KAAK,GAAG,CAAC,KAAK,KAAK,GAAG,CAAC,GAAG,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,CAAE;QACxG,KAAK;QACL,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,UAAU,GAAG;YAChB;YACA;YACA;QACF;QACA,MAAM,UAAU,EAAE;QAClB,MAAM,WAAW,EAAE;QACnB,MAAM,UAAU,EAAE;QAClB,MAAM,MAAM,EAAE;QACd,MAAM,MAAM;QACZ,MAAM,SAAS,IAAI,kJAAA,CAAA,UAAO;QAC1B,MAAM,KAAK,IAAI,kJAAA,CAAA,UAAO,IAAI,KAAK,IAAI,kJAAA,CAAA,UAAO;QAC1C,MAAM,KAAK,IAAI,kJAAA,CAAA,UAAO,IAAI,KAAK,IAAI,kJAAA,CAAA,UAAO;QAC1C,MAAM,aAAa,SAAS;QAC5B,IAAK,IAAI,IAAI,GAAG,KAAK,QAAQ,IAAK;YAChC,MAAM,IAAI,IAAI;YACd,IAAK,IAAI,IAAI,GAAG,KAAK,QAAQ,IAAK;gBAChC,MAAM,IAAI,IAAI;gBACd,KAAK,GAAG,GAAG;gBACX,SAAS,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC;gBAC9B,IAAI,IAAI,OAAO,GAAG;oBAChB,KAAK,IAAI,KAAK,GAAG;oBACjB,GAAG,UAAU,CAAC,IAAI;gBACpB,OAAO;oBACL,KAAK,IAAI,KAAK,GAAG;oBACjB,GAAG,UAAU,CAAC,IAAI;gBACpB;gBACA,IAAI,IAAI,OAAO,GAAG;oBAChB,KAAK,GAAG,IAAI,KAAK;oBACjB,GAAG,UAAU,CAAC,IAAI;gBACpB,OAAO;oBACL,KAAK,GAAG,IAAI,KAAK;oBACjB,GAAG,UAAU,CAAC,IAAI;gBACpB;gBACA,OAAO,YAAY,CAAC,IAAI,IAAI,SAAS;gBACrC,QAAQ,IAAI,CAAC,OAAO,CAAC,EAAE,OAAO,CAAC,EAAE,OAAO,CAAC;gBACzC,IAAI,IAAI,CAAC,GAAG;YACd;QACF;QACA,IAAK,IAAI,IAAI,GAAG,IAAI,QAAQ,IAAK;YAC/B,IAAK,IAAI,IAAI,GAAG,IAAI,QAAQ,IAAK;gBAC/B,MAAM,IAAI,IAAI,aAAa;gBAC3B,MAAM,IAAI,IAAI,aAAa,IAAI;gBAC/B,MAAM,IAAI,CAAC,IAAI,CAAC,IAAI,aAAa,IAAI;gBACrC,MAAM,IAAI,CAAC,IAAI,CAAC,IAAI,aAAa;gBACjC,QAAQ,IAAI,CAAC,GAAG,GAAG;gBACnB,QAAQ,IAAI,CAAC,GAAG,GAAG;YACrB;QACF;QACA,IAAI,CAAC,QAAQ,CAAC;QACd,IAAI,CAAC,YAAY,CAAC,YAAY,IAAI,kJAAA,CAAA,yBAAsB,CAAC,UAAU;QACnE,IAAI,CAAC,YAAY,CAAC,UAAU,IAAI,kJAAA,CAAA,yBAAsB,CAAC,SAAS;QAChE,IAAI,CAAC,YAAY,CAAC,MAAM,IAAI,kJAAA,CAAA,yBAAsB,CAAC,KAAK;IAC1D;AACF;;CAIA,8CAA8C","ignoreList":[0]}},
    {"offset": {"line": 5420, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5426, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/geometries/ParametricGeometries.js"],"sourcesContent":["import { Vector3, Curve } from \"three\";\nimport { ParametricGeometry } from \"./ParametricGeometry.js\";\nclass TubeGeometry extends ParametricGeometry {\n  constructor(path, segments = 64, radius = 1, segmentsRadius = 8, closed = false) {\n    const numpoints = segments + 1;\n    const frames = path.computeFrenetFrames(segments, closed), tangents = frames.tangents, normals = frames.normals, binormals = frames.binormals;\n    const position = new Vector3();\n    function ParametricTube(u, v, target) {\n      v *= 2 * Math.PI;\n      const i = Math.floor(u * (numpoints - 1));\n      path.getPointAt(u, position);\n      const normal = normals[i];\n      const binormal = binormals[i];\n      const cx = -radius * Math.cos(v);\n      const cy = radius * Math.sin(v);\n      position.x += cx * normal.x + cy * binormal.x;\n      position.y += cx * normal.y + cy * binormal.y;\n      position.z += cx * normal.z + cy * binormal.z;\n      target.copy(position);\n    }\n    super(ParametricTube, segments, segmentsRadius);\n    this.tangents = tangents;\n    this.normals = normals;\n    this.binormals = binormals;\n    this.path = path;\n    this.segments = segments;\n    this.radius = radius;\n    this.segmentsRadius = segmentsRadius;\n    this.closed = closed;\n  }\n}\nconst ParametricGeometries = {\n  klein: function(v, u, target) {\n    u *= Math.PI;\n    v *= 2 * Math.PI;\n    u = u * 2;\n    let x, z;\n    if (u < Math.PI) {\n      x = 3 * Math.cos(u) * (1 + Math.sin(u)) + 2 * (1 - Math.cos(u) / 2) * Math.cos(u) * Math.cos(v);\n      z = -8 * Math.sin(u) - 2 * (1 - Math.cos(u) / 2) * Math.sin(u) * Math.cos(v);\n    } else {\n      x = 3 * Math.cos(u) * (1 + Math.sin(u)) + 2 * (1 - Math.cos(u) / 2) * Math.cos(v + Math.PI);\n      z = -8 * Math.sin(u);\n    }\n    const y = -2 * (1 - Math.cos(u) / 2) * Math.sin(v);\n    target.set(x, y, z);\n  },\n  plane: function(width, height) {\n    return function(u, v, target) {\n      const x = u * width;\n      const y = 0;\n      const z = v * height;\n      target.set(x, y, z);\n    };\n  },\n  mobius: function(u, t, target) {\n    u = u - 0.5;\n    const v = 2 * Math.PI * t;\n    const a = 2;\n    const x = Math.cos(v) * (a + u * Math.cos(v / 2));\n    const y = Math.sin(v) * (a + u * Math.cos(v / 2));\n    const z = u * Math.sin(v / 2);\n    target.set(x, y, z);\n  },\n  mobius3d: function(u, t, target) {\n    u *= Math.PI;\n    t *= 2 * Math.PI;\n    u = u * 2;\n    const phi = u / 2;\n    const major = 2.25, a = 0.125, b = 0.65;\n    let x = a * Math.cos(t) * Math.cos(phi) - b * Math.sin(t) * Math.sin(phi);\n    const z = a * Math.cos(t) * Math.sin(phi) + b * Math.sin(t) * Math.cos(phi);\n    const y = (major + x) * Math.sin(u);\n    x = (major + x) * Math.cos(u);\n    target.set(x, y, z);\n  },\n  TubeGeometry,\n  TorusKnotGeometry: class TorusKnotGeometry extends TubeGeometry {\n    constructor(radius = 200, tube = 40, segmentsT = 64, segmentsR = 8, p = 2, q = 3) {\n      class TorusKnotCurve extends Curve {\n        getPoint(t, optionalTarget = new Vector3()) {\n          const point = optionalTarget;\n          t *= Math.PI * 2;\n          const r = 0.5;\n          const x = (1 + r * Math.cos(q * t)) * Math.cos(p * t);\n          const y = (1 + r * Math.cos(q * t)) * Math.sin(p * t);\n          const z = r * Math.sin(q * t);\n          return point.set(x, y, z).multiplyScalar(radius);\n        }\n      }\n      const segments = segmentsT;\n      const radiusSegments = segmentsR;\n      const extrudePath = new TorusKnotCurve();\n      super(extrudePath, segments, tube, radiusSegments, true, false);\n      this.radius = radius;\n      this.tube = tube;\n      this.segmentsT = segmentsT;\n      this.segmentsR = segmentsR;\n      this.p = p;\n      this.q = q;\n    }\n  },\n  SphereGeometry: class SphereGeometry extends ParametricGeometry {\n    constructor(size, u, v) {\n      function sphere(u2, v2, target) {\n        u2 *= Math.PI;\n        v2 *= 2 * Math.PI;\n        const x = size * Math.sin(u2) * Math.cos(v2);\n        const y = size * Math.sin(u2) * Math.sin(v2);\n        const z = size * Math.cos(u2);\n        target.set(x, y, z);\n      }\n      super(sphere, u, v);\n    }\n  },\n  PlaneGeometry: class PlaneGeometry extends ParametricGeometry {\n    constructor(width, depth, segmentsWidth, segmentsDepth) {\n      function plane(u, v, target) {\n        const x = u * width;\n        const y = 0;\n        const z = v * depth;\n        target.set(x, y, z);\n      }\n      super(plane, segmentsWidth, segmentsDepth);\n    }\n  }\n};\nexport {\n  ParametricGeometries\n};\n//# sourceMappingURL=ParametricGeometries.js.map\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 5560, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5566, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/geometries/RoundedBoxGeometry.js"],"sourcesContent":["import { BoxGeometry, Vector3 } from \"three\";\nconst tempNormal = /* @__PURE__ */ new Vector3();\nfunction getUv(faceDirVector, normal, uvAxis, projectionAxis, radius, sideLength) {\n  const totArcLength = 2 * Math.PI * radius / 4;\n  const centerLength = Math.max(sideLength - 2 * radius, 0);\n  const halfArc = Math.PI / 4;\n  tempNormal.copy(normal);\n  tempNormal[projectionAxis] = 0;\n  tempNormal.normalize();\n  const arcUvRatio = 0.5 * totArcLength / (totArcLength + centerLength);\n  const arcAngleRatio = 1 - tempNormal.angleTo(faceDirVector) / halfArc;\n  if (Math.sign(tempNormal[uvAxis]) === 1) {\n    return arcAngleRatio * arcUvRatio;\n  } else {\n    const lenUv = centerLength / (totArcLength + centerLength);\n    return lenUv + arcUvRatio + arcUvRatio * (1 - arcAngleRatio);\n  }\n}\nclass RoundedBoxGeometry extends BoxGeometry {\n  constructor(width = 1, height = 1, depth = 1, segments = 2, radius = 0.1) {\n    segments = segments * 2 + 1;\n    radius = Math.min(width / 2, height / 2, depth / 2, radius);\n    super(1, 1, 1, segments, segments, segments);\n    if (segments === 1)\n      return;\n    const geometry2 = this.toNonIndexed();\n    this.index = null;\n    this.attributes.position = geometry2.attributes.position;\n    this.attributes.normal = geometry2.attributes.normal;\n    this.attributes.uv = geometry2.attributes.uv;\n    const position = new Vector3();\n    const normal = new Vector3();\n    const box = new Vector3(width, height, depth).divideScalar(2).subScalar(radius);\n    const positions = this.attributes.position.array;\n    const normals = this.attributes.normal.array;\n    const uvs = this.attributes.uv.array;\n    const faceTris = positions.length / 6;\n    const faceDirVector = new Vector3();\n    const halfSegmentSize = 0.5 / segments;\n    for (let i = 0, j = 0; i < positions.length; i += 3, j += 2) {\n      position.fromArray(positions, i);\n      normal.copy(position);\n      normal.x -= Math.sign(normal.x) * halfSegmentSize;\n      normal.y -= Math.sign(normal.y) * halfSegmentSize;\n      normal.z -= Math.sign(normal.z) * halfSegmentSize;\n      normal.normalize();\n      positions[i + 0] = box.x * Math.sign(position.x) + normal.x * radius;\n      positions[i + 1] = box.y * Math.sign(position.y) + normal.y * radius;\n      positions[i + 2] = box.z * Math.sign(position.z) + normal.z * radius;\n      normals[i + 0] = normal.x;\n      normals[i + 1] = normal.y;\n      normals[i + 2] = normal.z;\n      const side = Math.floor(i / faceTris);\n      switch (side) {\n        case 0:\n          faceDirVector.set(1, 0, 0);\n          uvs[j + 0] = getUv(faceDirVector, normal, \"z\", \"y\", radius, depth);\n          uvs[j + 1] = 1 - getUv(faceDirVector, normal, \"y\", \"z\", radius, height);\n          break;\n        case 1:\n          faceDirVector.set(-1, 0, 0);\n          uvs[j + 0] = 1 - getUv(faceDirVector, normal, \"z\", \"y\", radius, depth);\n          uvs[j + 1] = 1 - getUv(faceDirVector, normal, \"y\", \"z\", radius, height);\n          break;\n        case 2:\n          faceDirVector.set(0, 1, 0);\n          uvs[j + 0] = 1 - getUv(faceDirVector, normal, \"x\", \"z\", radius, width);\n          uvs[j + 1] = getUv(faceDirVector, normal, \"z\", \"x\", radius, depth);\n          break;\n        case 3:\n          faceDirVector.set(0, -1, 0);\n          uvs[j + 0] = 1 - getUv(faceDirVector, normal, \"x\", \"z\", radius, width);\n          uvs[j + 1] = 1 - getUv(faceDirVector, normal, \"z\", \"x\", radius, depth);\n          break;\n        case 4:\n          faceDirVector.set(0, 0, 1);\n          uvs[j + 0] = 1 - getUv(faceDirVector, normal, \"x\", \"y\", radius, width);\n          uvs[j + 1] = 1 - getUv(faceDirVector, normal, \"y\", \"x\", radius, height);\n          break;\n        case 5:\n          faceDirVector.set(0, 0, -1);\n          uvs[j + 0] = getUv(faceDirVector, normal, \"x\", \"y\", radius, width);\n          uvs[j + 1] = 1 - getUv(faceDirVector, normal, \"y\", \"x\", radius, height);\n          break;\n      }\n    }\n  }\n}\nexport {\n  RoundedBoxGeometry\n};\n//# sourceMappingURL=RoundedBoxGeometry.js.map\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 5659, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5665, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/geometries/BoxLineGeometry.js"],"sourcesContent":["import { BufferGeometry, Float32BufferAttribute } from \"three\";\nclass BoxLineGeometry extends BufferGeometry {\n  constructor(width, height, depth, widthSegments, heightSegments, depthSegments) {\n    super();\n    width = width || 1;\n    height = height || 1;\n    depth = depth || 1;\n    widthSegments = Math.floor(widthSegments) || 1;\n    heightSegments = Math.floor(heightSegments) || 1;\n    depthSegments = Math.floor(depthSegments) || 1;\n    const widthHalf = width / 2;\n    const heightHalf = height / 2;\n    const depthHalf = depth / 2;\n    const segmentWidth = width / widthSegments;\n    const segmentHeight = height / heightSegments;\n    const segmentDepth = depth / depthSegments;\n    const vertices = [];\n    let x = -widthHalf, y = -heightHalf, z = -depthHalf;\n    for (let i = 0; i <= widthSegments; i++) {\n      vertices.push(x, -heightHalf, -depthHalf, x, heightHalf, -depthHalf);\n      vertices.push(x, heightHalf, -depthHalf, x, heightHalf, depthHalf);\n      vertices.push(x, heightHalf, depthHalf, x, -heightHalf, depthHalf);\n      vertices.push(x, -heightHalf, depthHalf, x, -heightHalf, -depthHalf);\n      x += segmentWidth;\n    }\n    for (let i = 0; i <= heightSegments; i++) {\n      vertices.push(-widthHalf, y, -depthHalf, widthHalf, y, -depthHalf);\n      vertices.push(widthHalf, y, -depthHalf, widthHalf, y, depthHalf);\n      vertices.push(widthHalf, y, depthHalf, -widthHalf, y, depthHalf);\n      vertices.push(-widthHalf, y, depthHalf, -widthHalf, y, -depthHalf);\n      y += segmentHeight;\n    }\n    for (let i = 0; i <= depthSegments; i++) {\n      vertices.push(-widthHalf, -heightHalf, z, -widthHalf, heightHalf, z);\n      vertices.push(-widthHalf, heightHalf, z, widthHalf, heightHalf, z);\n      vertices.push(widthHalf, heightHalf, z, widthHalf, -heightHalf, z);\n      vertices.push(widthHalf, -heightHalf, z, -widthHalf, -heightHalf, z);\n      z += segmentDepth;\n    }\n    this.setAttribute(\"position\", new Float32BufferAttribute(vertices, 3));\n  }\n}\nexport {\n  BoxLineGeometry\n};\n//# sourceMappingURL=BoxLineGeometry.js.map\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,wBAAwB,kJAAA,CAAA,iBAAc;IAC1C,YAAY,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,aAAa,EAAE,cAAc,EAAE,aAAa,CAAE;QAC9E,KAAK;QACL,QAAQ,SAAS;QACjB,SAAS,UAAU;QACnB,QAAQ,SAAS;QACjB,gBAAgB,KAAK,KAAK,CAAC,kBAAkB;QAC7C,iBAAiB,KAAK,KAAK,CAAC,mBAAmB;QAC/C,gBAAgB,KAAK,KAAK,CAAC,kBAAkB;QAC7C,MAAM,YAAY,QAAQ;QAC1B,MAAM,aAAa,SAAS;QAC5B,MAAM,YAAY,QAAQ;QAC1B,MAAM,eAAe,QAAQ;QAC7B,MAAM,gBAAgB,SAAS;QAC/B,MAAM,eAAe,QAAQ;QAC7B,MAAM,WAAW,EAAE;QACnB,IAAI,IAAI,CAAC,WAAW,IAAI,CAAC,YAAY,IAAI,CAAC;QAC1C,IAAK,IAAI,IAAI,GAAG,KAAK,eAAe,IAAK;YACvC,SAAS,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,WAAW,GAAG,YAAY,CAAC;YAC1D,SAAS,IAAI,CAAC,GAAG,YAAY,CAAC,WAAW,GAAG,YAAY;YACxD,SAAS,IAAI,CAAC,GAAG,YAAY,WAAW,GAAG,CAAC,YAAY;YACxD,SAAS,IAAI,CAAC,GAAG,CAAC,YAAY,WAAW,GAAG,CAAC,YAAY,CAAC;YAC1D,KAAK;QACP;QACA,IAAK,IAAI,IAAI,GAAG,KAAK,gBAAgB,IAAK;YACxC,SAAS,IAAI,CAAC,CAAC,WAAW,GAAG,CAAC,WAAW,WAAW,GAAG,CAAC;YACxD,SAAS,IAAI,CAAC,WAAW,GAAG,CAAC,WAAW,WAAW,GAAG;YACtD,SAAS,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC,WAAW,GAAG;YACtD,SAAS,IAAI,CAAC,CAAC,WAAW,GAAG,WAAW,CAAC,WAAW,GAAG,CAAC;YACxD,KAAK;QACP;QACA,IAAK,IAAI,IAAI,GAAG,KAAK,eAAe,IAAK;YACvC,SAAS,IAAI,CAAC,CAAC,WAAW,CAAC,YAAY,GAAG,CAAC,WAAW,YAAY;YAClE,SAAS,IAAI,CAAC,CAAC,WAAW,YAAY,GAAG,WAAW,YAAY;YAChE,SAAS,IAAI,CAAC,WAAW,YAAY,GAAG,WAAW,CAAC,YAAY;YAChE,SAAS,IAAI,CAAC,WAAW,CAAC,YAAY,GAAG,CAAC,WAAW,CAAC,YAAY;YAClE,KAAK;QACP;QACA,IAAI,CAAC,YAAY,CAAC,YAAY,IAAI,kJAAA,CAAA,yBAAsB,CAAC,UAAU;IACrE;AACF;;CAIA,2CAA2C","ignoreList":[0]}},
    {"offset": {"line": 5713, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5719, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/geometries/DecalGeometry.js"],"sourcesContent":["import { BufferGeometry, Vector3, Matrix4, Float32BufferAttribute } from \"three\";\nclass DecalGeometry extends BufferGeometry {\n  constructor(mesh, position, orientation, size) {\n    super();\n    const vertices = [];\n    const normals = [];\n    const uvs = [];\n    const plane = new Vector3();\n    const projectorMatrix = new Matrix4();\n    projectorMatrix.makeRotationFromEuler(orientation);\n    projectorMatrix.setPosition(position);\n    const projectorMatrixInverse = new Matrix4();\n    projectorMatrixInverse.copy(projectorMatrix).invert();\n    generate();\n    this.setAttribute(\"position\", new Float32BufferAttribute(vertices, 3));\n    this.setAttribute(\"normal\", new Float32BufferAttribute(normals, 3));\n    this.setAttribute(\"uv\", new Float32BufferAttribute(uvs, 2));\n    function generate() {\n      let i;\n      let decalVertices = [];\n      const vertex = new Vector3();\n      const normal = new Vector3();\n      if (mesh.geometry.isGeometry === true) {\n        console.error(\"THREE.DecalGeometry no longer supports THREE.Geometry. Use BufferGeometry instead.\");\n        return;\n      }\n      const geometry = mesh.geometry;\n      const positionAttribute = geometry.attributes.position;\n      const normalAttribute = geometry.attributes.normal;\n      if (geometry.index !== null) {\n        const index = geometry.index;\n        for (i = 0; i < index.count; i++) {\n          vertex.fromBufferAttribute(positionAttribute, index.getX(i));\n          normal.fromBufferAttribute(normalAttribute, index.getX(i));\n          pushDecalVertex(decalVertices, vertex, normal);\n        }\n      } else {\n        for (i = 0; i < positionAttribute.count; i++) {\n          vertex.fromBufferAttribute(positionAttribute, i);\n          normal.fromBufferAttribute(normalAttribute, i);\n          pushDecalVertex(decalVertices, vertex, normal);\n        }\n      }\n      decalVertices = clipGeometry(decalVertices, plane.set(1, 0, 0));\n      decalVertices = clipGeometry(decalVertices, plane.set(-1, 0, 0));\n      decalVertices = clipGeometry(decalVertices, plane.set(0, 1, 0));\n      decalVertices = clipGeometry(decalVertices, plane.set(0, -1, 0));\n      decalVertices = clipGeometry(decalVertices, plane.set(0, 0, 1));\n      decalVertices = clipGeometry(decalVertices, plane.set(0, 0, -1));\n      for (i = 0; i < decalVertices.length; i++) {\n        const decalVertex = decalVertices[i];\n        uvs.push(0.5 + decalVertex.position.x / size.x, 0.5 + decalVertex.position.y / size.y);\n        decalVertex.position.applyMatrix4(projectorMatrix);\n        vertices.push(decalVertex.position.x, decalVertex.position.y, decalVertex.position.z);\n        normals.push(decalVertex.normal.x, decalVertex.normal.y, decalVertex.normal.z);\n      }\n    }\n    function pushDecalVertex(decalVertices, vertex, normal) {\n      vertex.applyMatrix4(mesh.matrixWorld);\n      vertex.applyMatrix4(projectorMatrixInverse);\n      normal.transformDirection(mesh.matrixWorld);\n      decalVertices.push(new DecalVertex(vertex.clone(), normal.clone()));\n    }\n    function clipGeometry(inVertices, plane2) {\n      const outVertices = [];\n      const s = 0.5 * Math.abs(size.dot(plane2));\n      for (let i = 0; i < inVertices.length; i += 3) {\n        let v1Out, v2Out, v3Out, total = 0;\n        let nV1, nV2, nV3, nV4;\n        const d1 = inVertices[i + 0].position.dot(plane2) - s;\n        const d2 = inVertices[i + 1].position.dot(plane2) - s;\n        const d3 = inVertices[i + 2].position.dot(plane2) - s;\n        v1Out = d1 > 0;\n        v2Out = d2 > 0;\n        v3Out = d3 > 0;\n        total = (v1Out ? 1 : 0) + (v2Out ? 1 : 0) + (v3Out ? 1 : 0);\n        switch (total) {\n          case 0: {\n            outVertices.push(inVertices[i]);\n            outVertices.push(inVertices[i + 1]);\n            outVertices.push(inVertices[i + 2]);\n            break;\n          }\n          case 1: {\n            if (v1Out) {\n              nV1 = inVertices[i + 1];\n              nV2 = inVertices[i + 2];\n              nV3 = clip(inVertices[i], nV1, plane2, s);\n              nV4 = clip(inVertices[i], nV2, plane2, s);\n            }\n            if (v2Out) {\n              nV1 = inVertices[i];\n              nV2 = inVertices[i + 2];\n              nV3 = clip(inVertices[i + 1], nV1, plane2, s);\n              nV4 = clip(inVertices[i + 1], nV2, plane2, s);\n              outVertices.push(nV3);\n              outVertices.push(nV2.clone());\n              outVertices.push(nV1.clone());\n              outVertices.push(nV2.clone());\n              outVertices.push(nV3.clone());\n              outVertices.push(nV4);\n              break;\n            }\n            if (v3Out) {\n              nV1 = inVertices[i];\n              nV2 = inVertices[i + 1];\n              nV3 = clip(inVertices[i + 2], nV1, plane2, s);\n              nV4 = clip(inVertices[i + 2], nV2, plane2, s);\n            }\n            outVertices.push(nV1.clone());\n            outVertices.push(nV2.clone());\n            outVertices.push(nV3);\n            outVertices.push(nV4);\n            outVertices.push(nV3.clone());\n            outVertices.push(nV2.clone());\n            break;\n          }\n          case 2: {\n            if (!v1Out) {\n              nV1 = inVertices[i].clone();\n              nV2 = clip(nV1, inVertices[i + 1], plane2, s);\n              nV3 = clip(nV1, inVertices[i + 2], plane2, s);\n              outVertices.push(nV1);\n              outVertices.push(nV2);\n              outVertices.push(nV3);\n            }\n            if (!v2Out) {\n              nV1 = inVertices[i + 1].clone();\n              nV2 = clip(nV1, inVertices[i + 2], plane2, s);\n              nV3 = clip(nV1, inVertices[i], plane2, s);\n              outVertices.push(nV1);\n              outVertices.push(nV2);\n              outVertices.push(nV3);\n            }\n            if (!v3Out) {\n              nV1 = inVertices[i + 2].clone();\n              nV2 = clip(nV1, inVertices[i], plane2, s);\n              nV3 = clip(nV1, inVertices[i + 1], plane2, s);\n              outVertices.push(nV1);\n              outVertices.push(nV2);\n              outVertices.push(nV3);\n            }\n            break;\n          }\n        }\n      }\n      return outVertices;\n    }\n    function clip(v0, v1, p, s) {\n      const d0 = v0.position.dot(p) - s;\n      const d1 = v1.position.dot(p) - s;\n      const s0 = d0 / (d0 - d1);\n      const v = new DecalVertex(\n        new Vector3(\n          v0.position.x + s0 * (v1.position.x - v0.position.x),\n          v0.position.y + s0 * (v1.position.y - v0.position.y),\n          v0.position.z + s0 * (v1.position.z - v0.position.z)\n        ),\n        new Vector3(\n          v0.normal.x + s0 * (v1.normal.x - v0.normal.x),\n          v0.normal.y + s0 * (v1.normal.y - v0.normal.y),\n          v0.normal.z + s0 * (v1.normal.z - v0.normal.z)\n        )\n      );\n      return v;\n    }\n  }\n}\nclass DecalVertex {\n  constructor(position, normal) {\n    this.position = position;\n    this.normal = normal;\n  }\n  clone() {\n    return new this.constructor(this.position.clone(), this.normal.clone());\n  }\n}\nexport {\n  DecalGeometry,\n  DecalVertex\n};\n//# sourceMappingURL=DecalGeometry.js.map\n"],"names":[],"mappings":";;;;AAAA;;AACA,MAAM,sBAAsB,kJAAA,CAAA,iBAAc;IACxC,YAAY,IAAI,EAAE,QAAQ,EAAE,WAAW,EAAE,IAAI,CAAE;QAC7C,KAAK;QACL,MAAM,WAAW,EAAE;QACnB,MAAM,UAAU,EAAE;QAClB,MAAM,MAAM,EAAE;QACd,MAAM,QAAQ,IAAI,kJAAA,CAAA,UAAO;QACzB,MAAM,kBAAkB,IAAI,kJAAA,CAAA,UAAO;QACnC,gBAAgB,qBAAqB,CAAC;QACtC,gBAAgB,WAAW,CAAC;QAC5B,MAAM,yBAAyB,IAAI,kJAAA,CAAA,UAAO;QAC1C,uBAAuB,IAAI,CAAC,iBAAiB,MAAM;QACnD;QACA,IAAI,CAAC,YAAY,CAAC,YAAY,IAAI,kJAAA,CAAA,yBAAsB,CAAC,UAAU;QACnE,IAAI,CAAC,YAAY,CAAC,UAAU,IAAI,kJAAA,CAAA,yBAAsB,CAAC,SAAS;QAChE,IAAI,CAAC,YAAY,CAAC,MAAM,IAAI,kJAAA,CAAA,yBAAsB,CAAC,KAAK;QACxD,SAAS;YACP,IAAI;YACJ,IAAI,gBAAgB,EAAE;YACtB,MAAM,SAAS,IAAI,kJAAA,CAAA,UAAO;YAC1B,MAAM,SAAS,IAAI,kJAAA,CAAA,UAAO;YAC1B,IAAI,KAAK,QAAQ,CAAC,UAAU,KAAK,MAAM;gBACrC,QAAQ,KAAK,CAAC;gBACd;YACF;YACA,MAAM,WAAW,KAAK,QAAQ;YAC9B,MAAM,oBAAoB,SAAS,UAAU,CAAC,QAAQ;YACtD,MAAM,kBAAkB,SAAS,UAAU,CAAC,MAAM;YAClD,IAAI,SAAS,KAAK,KAAK,MAAM;gBAC3B,MAAM,QAAQ,SAAS,KAAK;gBAC5B,IAAK,IAAI,GAAG,IAAI,MAAM,KAAK,EAAE,IAAK;oBAChC,OAAO,mBAAmB,CAAC,mBAAmB,MAAM,IAAI,CAAC;oBACzD,OAAO,mBAAmB,CAAC,iBAAiB,MAAM,IAAI,CAAC;oBACvD,gBAAgB,eAAe,QAAQ;gBACzC;YACF,OAAO;gBACL,IAAK,IAAI,GAAG,IAAI,kBAAkB,KAAK,EAAE,IAAK;oBAC5C,OAAO,mBAAmB,CAAC,mBAAmB;oBAC9C,OAAO,mBAAmB,CAAC,iBAAiB;oBAC5C,gBAAgB,eAAe,QAAQ;gBACzC;YACF;YACA,gBAAgB,aAAa,eAAe,MAAM,GAAG,CAAC,GAAG,GAAG;YAC5D,gBAAgB,aAAa,eAAe,MAAM,GAAG,CAAC,CAAC,GAAG,GAAG;YAC7D,gBAAgB,aAAa,eAAe,MAAM,GAAG,CAAC,GAAG,GAAG;YAC5D,gBAAgB,aAAa,eAAe,MAAM,GAAG,CAAC,GAAG,CAAC,GAAG;YAC7D,gBAAgB,aAAa,eAAe,MAAM,GAAG,CAAC,GAAG,GAAG;YAC5D,gBAAgB,aAAa,eAAe,MAAM,GAAG,CAAC,GAAG,GAAG,CAAC;YAC7D,IAAK,IAAI,GAAG,IAAI,cAAc,MAAM,EAAE,IAAK;gBACzC,MAAM,cAAc,aAAa,CAAC,EAAE;gBACpC,IAAI,IAAI,CAAC,MAAM,YAAY,QAAQ,CAAC,CAAC,GAAG,KAAK,CAAC,EAAE,MAAM,YAAY,QAAQ,CAAC,CAAC,GAAG,KAAK,CAAC;gBACrF,YAAY,QAAQ,CAAC,YAAY,CAAC;gBAClC,SAAS,IAAI,CAAC,YAAY,QAAQ,CAAC,CAAC,EAAE,YAAY,QAAQ,CAAC,CAAC,EAAE,YAAY,QAAQ,CAAC,CAAC;gBACpF,QAAQ,IAAI,CAAC,YAAY,MAAM,CAAC,CAAC,EAAE,YAAY,MAAM,CAAC,CAAC,EAAE,YAAY,MAAM,CAAC,CAAC;YAC/E;QACF;QACA,SAAS,gBAAgB,aAAa,EAAE,MAAM,EAAE,MAAM;YACpD,OAAO,YAAY,CAAC,KAAK,WAAW;YACpC,OAAO,YAAY,CAAC;YACpB,OAAO,kBAAkB,CAAC,KAAK,WAAW;YAC1C,cAAc,IAAI,CAAC,IAAI,YAAY,OAAO,KAAK,IAAI,OAAO,KAAK;QACjE;QACA,SAAS,aAAa,UAAU,EAAE,MAAM;YACtC,MAAM,cAAc,EAAE;YACtB,MAAM,IAAI,MAAM,KAAK,GAAG,CAAC,KAAK,GAAG,CAAC;YAClC,IAAK,IAAI,IAAI,GAAG,IAAI,WAAW,MAAM,EAAE,KAAK,EAAG;gBAC7C,IAAI,OAAO,OAAO,OAAO,QAAQ;gBACjC,IAAI,KAAK,KAAK,KAAK;gBACnB,MAAM,KAAK,UAAU,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU;gBACpD,MAAM,KAAK,UAAU,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU;gBACpD,MAAM,KAAK,UAAU,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU;gBACpD,QAAQ,KAAK;gBACb,QAAQ,KAAK;gBACb,QAAQ,KAAK;gBACb,QAAQ,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC;gBAC1D,OAAQ;oBACN,KAAK;wBAAG;4BACN,YAAY,IAAI,CAAC,UAAU,CAAC,EAAE;4BAC9B,YAAY,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE;4BAClC,YAAY,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE;4BAClC;wBACF;oBACA,KAAK;wBAAG;4BACN,IAAI,OAAO;gCACT,MAAM,UAAU,CAAC,IAAI,EAAE;gCACvB,MAAM,UAAU,CAAC,IAAI,EAAE;gCACvB,MAAM,KAAK,UAAU,CAAC,EAAE,EAAE,KAAK,QAAQ;gCACvC,MAAM,KAAK,UAAU,CAAC,EAAE,EAAE,KAAK,QAAQ;4BACzC;4BACA,IAAI,OAAO;gCACT,MAAM,UAAU,CAAC,EAAE;gCACnB,MAAM,UAAU,CAAC,IAAI,EAAE;gCACvB,MAAM,KAAK,UAAU,CAAC,IAAI,EAAE,EAAE,KAAK,QAAQ;gCAC3C,MAAM,KAAK,UAAU,CAAC,IAAI,EAAE,EAAE,KAAK,QAAQ;gCAC3C,YAAY,IAAI,CAAC;gCACjB,YAAY,IAAI,CAAC,IAAI,KAAK;gCAC1B,YAAY,IAAI,CAAC,IAAI,KAAK;gCAC1B,YAAY,IAAI,CAAC,IAAI,KAAK;gCAC1B,YAAY,IAAI,CAAC,IAAI,KAAK;gCAC1B,YAAY,IAAI,CAAC;gCACjB;4BACF;4BACA,IAAI,OAAO;gCACT,MAAM,UAAU,CAAC,EAAE;gCACnB,MAAM,UAAU,CAAC,IAAI,EAAE;gCACvB,MAAM,KAAK,UAAU,CAAC,IAAI,EAAE,EAAE,KAAK,QAAQ;gCAC3C,MAAM,KAAK,UAAU,CAAC,IAAI,EAAE,EAAE,KAAK,QAAQ;4BAC7C;4BACA,YAAY,IAAI,CAAC,IAAI,KAAK;4BAC1B,YAAY,IAAI,CAAC,IAAI,KAAK;4BAC1B,YAAY,IAAI,CAAC;4BACjB,YAAY,IAAI,CAAC;4BACjB,YAAY,IAAI,CAAC,IAAI,KAAK;4BAC1B,YAAY,IAAI,CAAC,IAAI,KAAK;4BAC1B;wBACF;oBACA,KAAK;wBAAG;4BACN,IAAI,CAAC,OAAO;gCACV,MAAM,UAAU,CAAC,EAAE,CAAC,KAAK;gCACzB,MAAM,KAAK,KAAK,UAAU,CAAC,IAAI,EAAE,EAAE,QAAQ;gCAC3C,MAAM,KAAK,KAAK,UAAU,CAAC,IAAI,EAAE,EAAE,QAAQ;gCAC3C,YAAY,IAAI,CAAC;gCACjB,YAAY,IAAI,CAAC;gCACjB,YAAY,IAAI,CAAC;4BACnB;4BACA,IAAI,CAAC,OAAO;gCACV,MAAM,UAAU,CAAC,IAAI,EAAE,CAAC,KAAK;gCAC7B,MAAM,KAAK,KAAK,UAAU,CAAC,IAAI,EAAE,EAAE,QAAQ;gCAC3C,MAAM,KAAK,KAAK,UAAU,CAAC,EAAE,EAAE,QAAQ;gCACvC,YAAY,IAAI,CAAC;gCACjB,YAAY,IAAI,CAAC;gCACjB,YAAY,IAAI,CAAC;4BACnB;4BACA,IAAI,CAAC,OAAO;gCACV,MAAM,UAAU,CAAC,IAAI,EAAE,CAAC,KAAK;gCAC7B,MAAM,KAAK,KAAK,UAAU,CAAC,EAAE,EAAE,QAAQ;gCACvC,MAAM,KAAK,KAAK,UAAU,CAAC,IAAI,EAAE,EAAE,QAAQ;gCAC3C,YAAY,IAAI,CAAC;gCACjB,YAAY,IAAI,CAAC;gCACjB,YAAY,IAAI,CAAC;4BACnB;4BACA;wBACF;gBACF;YACF;YACA,OAAO;QACT;QACA,SAAS,KAAK,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC;YACxB,MAAM,KAAK,GAAG,QAAQ,CAAC,GAAG,CAAC,KAAK;YAChC,MAAM,KAAK,GAAG,QAAQ,CAAC,GAAG,CAAC,KAAK;YAChC,MAAM,KAAK,KAAK,CAAC,KAAK,EAAE;YACxB,MAAM,IAAI,IAAI,YACZ,IAAI,kJAAA,CAAA,UAAO,CACT,GAAG,QAAQ,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,QAAQ,CAAC,CAAC,GAAG,GAAG,QAAQ,CAAC,CAAC,GACnD,GAAG,QAAQ,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,QAAQ,CAAC,CAAC,GAAG,GAAG,QAAQ,CAAC,CAAC,GACnD,GAAG,QAAQ,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,QAAQ,CAAC,CAAC,GAAG,GAAG,QAAQ,CAAC,CAAC,IAErD,IAAI,kJAAA,CAAA,UAAO,CACT,GAAG,MAAM,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,GAAG,MAAM,CAAC,CAAC,GAC7C,GAAG,MAAM,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,GAAG,MAAM,CAAC,CAAC,GAC7C,GAAG,MAAM,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,GAAG,MAAM,CAAC,CAAC;YAGjD,OAAO;QACT;IACF;AACF;AACA,MAAM;IACJ,YAAY,QAAQ,EAAE,MAAM,CAAE;QAC5B,IAAI,CAAC,QAAQ,GAAG;QAChB,IAAI,CAAC,MAAM,GAAG;IAChB;IACA,QAAQ;QACN,OAAO,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK;IACtE;AACF;;CAKA,yCAAyC","ignoreList":[0]}},
    {"offset": {"line": 5895, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5901, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/renderers/CSS2DRenderer.js"],"sourcesContent":["import { Object3D, Vector2, Vector3, Matrix4 } from \"three\";\nclass CSS2DObject extends Object3D {\n  constructor(element = document.createElement(\"div\")) {\n    super();\n    this.isCSS2DObject = true;\n    this.element = element;\n    this.element.style.position = \"absolute\";\n    this.element.style.userSelect = \"none\";\n    this.element.setAttribute(\"draggable\", false);\n    this.center = new Vector2(0.5, 0.5);\n    this.addEventListener(\"removed\", function() {\n      this.traverse(function(object) {\n        if (object.element instanceof Element && object.element.parentNode !== null) {\n          object.element.parentNode.removeChild(object.element);\n        }\n      });\n    });\n  }\n  copy(source, recursive) {\n    super.copy(source, recursive);\n    this.element = source.element.cloneNode(true);\n    this.center = source.center;\n    return this;\n  }\n}\nconst _vector = /* @__PURE__ */ new Vector3();\nconst _viewMatrix = /* @__PURE__ */ new Matrix4();\nconst _viewProjectionMatrix = /* @__PURE__ */ new Matrix4();\nconst _a = /* @__PURE__ */ new Vector3();\nconst _b = /* @__PURE__ */ new Vector3();\nclass CSS2DRenderer {\n  constructor(parameters = {}) {\n    const _this = this;\n    let _width, _height;\n    let _widthHalf, _heightHalf;\n    const cache = {\n      objects: /* @__PURE__ */ new WeakMap()\n    };\n    const domElement = parameters.element !== void 0 ? parameters.element : document.createElement(\"div\");\n    domElement.style.overflow = \"hidden\";\n    this.domElement = domElement;\n    this.getSize = function() {\n      return {\n        width: _width,\n        height: _height\n      };\n    };\n    this.render = function(scene, camera) {\n      if (scene.matrixWorldAutoUpdate === true)\n        scene.updateMatrixWorld();\n      if (camera.parent === null && camera.matrixWorldAutoUpdate === true)\n        camera.updateMatrixWorld();\n      _viewMatrix.copy(camera.matrixWorldInverse);\n      _viewProjectionMatrix.multiplyMatrices(camera.projectionMatrix, _viewMatrix);\n      renderObject(scene, scene, camera);\n      zOrder(scene);\n    };\n    this.setSize = function(width, height) {\n      _width = width;\n      _height = height;\n      _widthHalf = _width / 2;\n      _heightHalf = _height / 2;\n      domElement.style.width = width + \"px\";\n      domElement.style.height = height + \"px\";\n    };\n    function renderObject(object, scene, camera) {\n      if (object.isCSS2DObject) {\n        _vector.setFromMatrixPosition(object.matrixWorld);\n        _vector.applyMatrix4(_viewProjectionMatrix);\n        const visible = object.visible === true && _vector.z >= -1 && _vector.z <= 1 && object.layers.test(camera.layers) === true;\n        object.element.style.display = visible === true ? \"\" : \"none\";\n        if (visible === true) {\n          object.onBeforeRender(_this, scene, camera);\n          const element = object.element;\n          element.style.transform = \"translate(\" + -100 * object.center.x + \"%,\" + -100 * object.center.y + \"%)translate(\" + (_vector.x * _widthHalf + _widthHalf) + \"px,\" + (-_vector.y * _heightHalf + _heightHalf) + \"px)\";\n          if (element.parentNode !== domElement) {\n            domElement.appendChild(element);\n          }\n          object.onAfterRender(_this, scene, camera);\n        }\n        const objectData = {\n          distanceToCameraSquared: getDistanceToSquared(camera, object)\n        };\n        cache.objects.set(object, objectData);\n      }\n      for (let i = 0, l = object.children.length; i < l; i++) {\n        renderObject(object.children[i], scene, camera);\n      }\n    }\n    function getDistanceToSquared(object1, object2) {\n      _a.setFromMatrixPosition(object1.matrixWorld);\n      _b.setFromMatrixPosition(object2.matrixWorld);\n      return _a.distanceToSquared(_b);\n    }\n    function filterAndFlatten(scene) {\n      const result = [];\n      scene.traverse(function(object) {\n        if (object.isCSS2DObject)\n          result.push(object);\n      });\n      return result;\n    }\n    function zOrder(scene) {\n      const sorted = filterAndFlatten(scene).sort(function(a, b) {\n        if (a.renderOrder !== b.renderOrder) {\n          return b.renderOrder - a.renderOrder;\n        }\n        const distanceA = cache.objects.get(a).distanceToCameraSquared;\n        const distanceB = cache.objects.get(b).distanceToCameraSquared;\n        return distanceA - distanceB;\n      });\n      const zMax = sorted.length;\n      for (let i = 0, l = sorted.length; i < l; i++) {\n        sorted[i].element.style.zIndex = zMax - i;\n      }\n    }\n  }\n}\nexport {\n  CSS2DObject,\n  CSS2DRenderer\n};\n//# sourceMappingURL=CSS2DRenderer.js.map\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 6023, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6029, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/renderers/CSS3DRenderer.js"],"sourcesContent":["import { Object3D, Vector3, Quaternion, Matrix4 } from \"three\";\nconst _position = /* @__PURE__ */ new Vector3();\nconst _quaternion = /* @__PURE__ */ new Quaternion();\nconst _scale = /* @__PURE__ */ new Vector3();\nclass CSS3DObject extends Object3D {\n  constructor(element = document.createElement(\"div\")) {\n    super();\n    this.isCSS3DObject = true;\n    this.element = element;\n    this.element.style.position = \"absolute\";\n    this.element.style.pointerEvents = \"auto\";\n    this.element.style.userSelect = \"none\";\n    this.element.setAttribute(\"draggable\", false);\n    this.addEventListener(\"removed\", function() {\n      this.traverse(function(object) {\n        if (object.element instanceof Element && object.element.parentNode !== null) {\n          object.element.parentNode.removeChild(object.element);\n        }\n      });\n    });\n  }\n  copy(source, recursive) {\n    super.copy(source, recursive);\n    this.element = source.element.cloneNode(true);\n    return this;\n  }\n}\nclass CSS3DSprite extends CSS3DObject {\n  constructor(element) {\n    super(element);\n    this.isCSS3DSprite = true;\n    this.rotation2D = 0;\n  }\n  copy(source, recursive) {\n    super.copy(source, recursive);\n    this.rotation2D = source.rotation2D;\n    return this;\n  }\n}\nconst _matrix = /* @__PURE__ */ new Matrix4();\nconst _matrix2 = /* @__PURE__ */ new Matrix4();\nclass CSS3DRenderer {\n  constructor(parameters = {}) {\n    const _this = this;\n    let _width, _height;\n    let _widthHalf, _heightHalf;\n    const cache = {\n      camera: { style: \"\" },\n      objects: /* @__PURE__ */ new WeakMap()\n    };\n    const domElement = parameters.element !== void 0 ? parameters.element : document.createElement(\"div\");\n    domElement.style.overflow = \"hidden\";\n    this.domElement = domElement;\n    const viewElement = document.createElement(\"div\");\n    viewElement.style.transformOrigin = \"0 0\";\n    viewElement.style.pointerEvents = \"none\";\n    domElement.appendChild(viewElement);\n    const cameraElement = document.createElement(\"div\");\n    cameraElement.style.transformStyle = \"preserve-3d\";\n    viewElement.appendChild(cameraElement);\n    this.getSize = function() {\n      return {\n        width: _width,\n        height: _height\n      };\n    };\n    this.render = function(scene, camera) {\n      const fov = camera.projectionMatrix.elements[5] * _heightHalf;\n      if (camera.view && camera.view.enabled) {\n        viewElement.style.transform = `translate( ${-camera.view.offsetX * (_width / camera.view.width)}px, ${-camera.view.offsetY * (_height / camera.view.height)}px )`;\n        viewElement.style.transform += `scale( ${camera.view.fullWidth / camera.view.width}, ${camera.view.fullHeight / camera.view.height} )`;\n      } else {\n        viewElement.style.transform = \"\";\n      }\n      if (scene.matrixWorldAutoUpdate === true)\n        scene.updateMatrixWorld();\n      if (camera.parent === null && camera.matrixWorldAutoUpdate === true)\n        camera.updateMatrixWorld();\n      let tx, ty;\n      if (camera.isOrthographicCamera) {\n        tx = -(camera.right + camera.left) / 2;\n        ty = (camera.top + camera.bottom) / 2;\n      }\n      const scaleByViewOffset = camera.view && camera.view.enabled ? camera.view.height / camera.view.fullHeight : 1;\n      const cameraCSSMatrix = camera.isOrthographicCamera ? `scale( ${scaleByViewOffset} )scale(` + fov + \")translate(\" + epsilon(tx) + \"px,\" + epsilon(ty) + \"px)\" + getCameraCSSMatrix(camera.matrixWorldInverse) : `scale( ${scaleByViewOffset} )translateZ(` + fov + \"px)\" + getCameraCSSMatrix(camera.matrixWorldInverse);\n      const perspective = camera.isPerspectiveCamera ? \"perspective(\" + fov + \"px) \" : \"\";\n      const style = perspective + cameraCSSMatrix + \"translate(\" + _widthHalf + \"px,\" + _heightHalf + \"px)\";\n      if (cache.camera.style !== style) {\n        cameraElement.style.transform = style;\n        cache.camera.style = style;\n      }\n      renderObject(scene, scene, camera);\n    };\n    this.setSize = function(width, height) {\n      _width = width;\n      _height = height;\n      _widthHalf = _width / 2;\n      _heightHalf = _height / 2;\n      domElement.style.width = width + \"px\";\n      domElement.style.height = height + \"px\";\n      viewElement.style.width = width + \"px\";\n      viewElement.style.height = height + \"px\";\n      cameraElement.style.width = width + \"px\";\n      cameraElement.style.height = height + \"px\";\n    };\n    function epsilon(value) {\n      return Math.abs(value) < 1e-10 ? 0 : value;\n    }\n    function getCameraCSSMatrix(matrix) {\n      const elements = matrix.elements;\n      return \"matrix3d(\" + epsilon(elements[0]) + \",\" + epsilon(-elements[1]) + \",\" + epsilon(elements[2]) + \",\" + epsilon(elements[3]) + \",\" + epsilon(elements[4]) + \",\" + epsilon(-elements[5]) + \",\" + epsilon(elements[6]) + \",\" + epsilon(elements[7]) + \",\" + epsilon(elements[8]) + \",\" + epsilon(-elements[9]) + \",\" + epsilon(elements[10]) + \",\" + epsilon(elements[11]) + \",\" + epsilon(elements[12]) + \",\" + epsilon(-elements[13]) + \",\" + epsilon(elements[14]) + \",\" + epsilon(elements[15]) + \")\";\n    }\n    function getObjectCSSMatrix(matrix) {\n      const elements = matrix.elements;\n      const matrix3d = \"matrix3d(\" + epsilon(elements[0]) + \",\" + epsilon(elements[1]) + \",\" + epsilon(elements[2]) + \",\" + epsilon(elements[3]) + \",\" + epsilon(-elements[4]) + \",\" + epsilon(-elements[5]) + \",\" + epsilon(-elements[6]) + \",\" + epsilon(-elements[7]) + \",\" + epsilon(elements[8]) + \",\" + epsilon(elements[9]) + \",\" + epsilon(elements[10]) + \",\" + epsilon(elements[11]) + \",\" + epsilon(elements[12]) + \",\" + epsilon(elements[13]) + \",\" + epsilon(elements[14]) + \",\" + epsilon(elements[15]) + \")\";\n      return \"translate(-50%,-50%)\" + matrix3d;\n    }\n    function renderObject(object, scene, camera, cameraCSSMatrix) {\n      if (object.isCSS3DObject) {\n        const visible = object.visible === true && object.layers.test(camera.layers) === true;\n        object.element.style.display = visible === true ? \"\" : \"none\";\n        if (visible === true) {\n          object.onBeforeRender(_this, scene, camera);\n          let style;\n          if (object.isCSS3DSprite) {\n            _matrix.copy(camera.matrixWorldInverse);\n            _matrix.transpose();\n            if (object.rotation2D !== 0)\n              _matrix.multiply(_matrix2.makeRotationZ(object.rotation2D));\n            object.matrixWorld.decompose(_position, _quaternion, _scale);\n            _matrix.setPosition(_position);\n            _matrix.scale(_scale);\n            _matrix.elements[3] = 0;\n            _matrix.elements[7] = 0;\n            _matrix.elements[11] = 0;\n            _matrix.elements[15] = 1;\n            style = getObjectCSSMatrix(_matrix);\n          } else {\n            style = getObjectCSSMatrix(object.matrixWorld);\n          }\n          const element = object.element;\n          const cachedObject = cache.objects.get(object);\n          if (cachedObject === void 0 || cachedObject.style !== style) {\n            element.style.transform = style;\n            const objectData = { style };\n            cache.objects.set(object, objectData);\n          }\n          if (element.parentNode !== cameraElement) {\n            cameraElement.appendChild(element);\n          }\n          object.onAfterRender(_this, scene, camera);\n        }\n      }\n      for (let i = 0, l = object.children.length; i < l; i++) {\n        renderObject(object.children[i], scene, camera);\n      }\n    }\n  }\n}\nexport {\n  CSS3DObject,\n  CSS3DRenderer,\n  CSS3DSprite\n};\n//# sourceMappingURL=CSS3DRenderer.js.map\n"],"names":[],"mappings":";;;;;AAAA;;AACA,MAAM,YAAY,aAAa,GAAG,IAAI,kJAAA,CAAA,UAAO;AAC7C,MAAM,cAAc,aAAa,GAAG,IAAI,kJAAA,CAAA,aAAU;AAClD,MAAM,SAAS,aAAa,GAAG,IAAI,kJAAA,CAAA,UAAO;AAC1C,MAAM,oBAAoB,kJAAA,CAAA,WAAQ;IAChC,YAAY,UAAU,SAAS,aAAa,CAAC,MAAM,CAAE;QACnD,KAAK;QACL,IAAI,CAAC,aAAa,GAAG;QACrB,IAAI,CAAC,OAAO,GAAG;QACf,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,QAAQ,GAAG;QAC9B,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,aAAa,GAAG;QACnC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,UAAU,GAAG;QAChC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,aAAa;QACvC,IAAI,CAAC,gBAAgB,CAAC,WAAW;YAC/B,IAAI,CAAC,QAAQ,CAAC,SAAS,MAAM;gBAC3B,IAAI,OAAO,OAAO,YAAY,WAAW,OAAO,OAAO,CAAC,UAAU,KAAK,MAAM;oBAC3E,OAAO,OAAO,CAAC,UAAU,CAAC,WAAW,CAAC,OAAO,OAAO;gBACtD;YACF;QACF;IACF;IACA,KAAK,MAAM,EAAE,SAAS,EAAE;QACtB,KAAK,CAAC,KAAK,QAAQ;QACnB,IAAI,CAAC,OAAO,GAAG,OAAO,OAAO,CAAC,SAAS,CAAC;QACxC,OAAO,IAAI;IACb;AACF;AACA,MAAM,oBAAoB;IACxB,YAAY,OAAO,CAAE;QACnB,KAAK,CAAC;QACN,IAAI,CAAC,aAAa,GAAG;QACrB,IAAI,CAAC,UAAU,GAAG;IACpB;IACA,KAAK,MAAM,EAAE,SAAS,EAAE;QACtB,KAAK,CAAC,KAAK,QAAQ;QACnB,IAAI,CAAC,UAAU,GAAG,OAAO,UAAU;QACnC,OAAO,IAAI;IACb;AACF;AACA,MAAM,UAAU,aAAa,GAAG,IAAI,kJAAA,CAAA,UAAO;AAC3C,MAAM,WAAW,aAAa,GAAG,IAAI,kJAAA,CAAA,UAAO;AAC5C,MAAM;IACJ,YAAY,aAAa,CAAC,CAAC,CAAE;QAC3B,MAAM,QAAQ,IAAI;QAClB,IAAI,QAAQ;QACZ,IAAI,YAAY;QAChB,MAAM,QAAQ;YACZ,QAAQ;gBAAE,OAAO;YAAG;YACpB,SAAS,aAAa,GAAG,IAAI;QAC/B;QACA,MAAM,aAAa,WAAW,OAAO,KAAK,KAAK,IAAI,WAAW,OAAO,GAAG,SAAS,aAAa,CAAC;QAC/F,WAAW,KAAK,CAAC,QAAQ,GAAG;QAC5B,IAAI,CAAC,UAAU,GAAG;QAClB,MAAM,cAAc,SAAS,aAAa,CAAC;QAC3C,YAAY,KAAK,CAAC,eAAe,GAAG;QACpC,YAAY,KAAK,CAAC,aAAa,GAAG;QAClC,WAAW,WAAW,CAAC;QACvB,MAAM,gBAAgB,SAAS,aAAa,CAAC;QAC7C,cAAc,KAAK,CAAC,cAAc,GAAG;QACrC,YAAY,WAAW,CAAC;QACxB,IAAI,CAAC,OAAO,GAAG;YACb,OAAO;gBACL,OAAO;gBACP,QAAQ;YACV;QACF;QACA,IAAI,CAAC,MAAM,GAAG,SAAS,KAAK,EAAE,MAAM;YAClC,MAAM,MAAM,OAAO,gBAAgB,CAAC,QAAQ,CAAC,EAAE,GAAG;YAClD,IAAI,OAAO,IAAI,IAAI,OAAO,IAAI,CAAC,OAAO,EAAE;gBACtC,YAAY,KAAK,CAAC,SAAS,GAAG,CAAC,WAAW,EAAE,CAAC,OAAO,IAAI,CAAC,OAAO,GAAG,CAAC,SAAS,OAAO,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,CAAC,OAAO,IAAI,CAAC,OAAO,GAAG,CAAC,UAAU,OAAO,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC;gBACjK,YAAY,KAAK,CAAC,SAAS,IAAI,CAAC,OAAO,EAAE,OAAO,IAAI,CAAC,SAAS,GAAG,OAAO,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,OAAO,IAAI,CAAC,UAAU,GAAG,OAAO,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC;YACxI,OAAO;gBACL,YAAY,KAAK,CAAC,SAAS,GAAG;YAChC;YACA,IAAI,MAAM,qBAAqB,KAAK,MAClC,MAAM,iBAAiB;YACzB,IAAI,OAAO,MAAM,KAAK,QAAQ,OAAO,qBAAqB,KAAK,MAC7D,OAAO,iBAAiB;YAC1B,IAAI,IAAI;YACR,IAAI,OAAO,oBAAoB,EAAE;gBAC/B,KAAK,CAAC,CAAC,OAAO,KAAK,GAAG,OAAO,IAAI,IAAI;gBACrC,KAAK,CAAC,OAAO,GAAG,GAAG,OAAO,MAAM,IAAI;YACtC;YACA,MAAM,oBAAoB,OAAO,IAAI,IAAI,OAAO,IAAI,CAAC,OAAO,GAAG,OAAO,IAAI,CAAC,MAAM,GAAG,OAAO,IAAI,CAAC,UAAU,GAAG;YAC7G,MAAM,kBAAkB,OAAO,oBAAoB,GAAG,CAAC,OAAO,EAAE,kBAAkB,QAAQ,CAAC,GAAG,MAAM,gBAAgB,QAAQ,MAAM,QAAQ,QAAQ,MAAM,QAAQ,mBAAmB,OAAO,kBAAkB,IAAI,CAAC,OAAO,EAAE,kBAAkB,aAAa,CAAC,GAAG,MAAM,QAAQ,mBAAmB,OAAO,kBAAkB;YACvT,MAAM,cAAc,OAAO,mBAAmB,GAAG,iBAAiB,MAAM,SAAS;YACjF,MAAM,QAAQ,cAAc,kBAAkB,eAAe,aAAa,QAAQ,cAAc;YAChG,IAAI,MAAM,MAAM,CAAC,KAAK,KAAK,OAAO;gBAChC,cAAc,KAAK,CAAC,SAAS,GAAG;gBAChC,MAAM,MAAM,CAAC,KAAK,GAAG;YACvB;YACA,aAAa,OAAO,OAAO;QAC7B;QACA,IAAI,CAAC,OAAO,GAAG,SAAS,KAAK,EAAE,MAAM;YACnC,SAAS;YACT,UAAU;YACV,aAAa,SAAS;YACtB,cAAc,UAAU;YACxB,WAAW,KAAK,CAAC,KAAK,GAAG,QAAQ;YACjC,WAAW,KAAK,CAAC,MAAM,GAAG,SAAS;YACnC,YAAY,KAAK,CAAC,KAAK,GAAG,QAAQ;YAClC,YAAY,KAAK,CAAC,MAAM,GAAG,SAAS;YACpC,cAAc,KAAK,CAAC,KAAK,GAAG,QAAQ;YACpC,cAAc,KAAK,CAAC,MAAM,GAAG,SAAS;QACxC;QACA,SAAS,QAAQ,KAAK;YACpB,OAAO,KAAK,GAAG,CAAC,SAAS,QAAQ,IAAI;QACvC;QACA,SAAS,mBAAmB,MAAM;YAChC,MAAM,WAAW,OAAO,QAAQ;YAChC,OAAO,cAAc,QAAQ,QAAQ,CAAC,EAAE,IAAI,MAAM,QAAQ,CAAC,QAAQ,CAAC,EAAE,IAAI,MAAM,QAAQ,QAAQ,CAAC,EAAE,IAAI,MAAM,QAAQ,QAAQ,CAAC,EAAE,IAAI,MAAM,QAAQ,QAAQ,CAAC,EAAE,IAAI,MAAM,QAAQ,CAAC,QAAQ,CAAC,EAAE,IAAI,MAAM,QAAQ,QAAQ,CAAC,EAAE,IAAI,MAAM,QAAQ,QAAQ,CAAC,EAAE,IAAI,MAAM,QAAQ,QAAQ,CAAC,EAAE,IAAI,MAAM,QAAQ,CAAC,QAAQ,CAAC,EAAE,IAAI,MAAM,QAAQ,QAAQ,CAAC,GAAG,IAAI,MAAM,QAAQ,QAAQ,CAAC,GAAG,IAAI,MAAM,QAAQ,QAAQ,CAAC,GAAG,IAAI,MAAM,QAAQ,CAAC,QAAQ,CAAC,GAAG,IAAI,MAAM,QAAQ,QAAQ,CAAC,GAAG,IAAI,MAAM,QAAQ,QAAQ,CAAC,GAAG,IAAI;QAC3e;QACA,SAAS,mBAAmB,MAAM;YAChC,MAAM,WAAW,OAAO,QAAQ;YAChC,MAAM,WAAW,cAAc,QAAQ,QAAQ,CAAC,EAAE,IAAI,MAAM,QAAQ,QAAQ,CAAC,EAAE,IAAI,MAAM,QAAQ,QAAQ,CAAC,EAAE,IAAI,MAAM,QAAQ,QAAQ,CAAC,EAAE,IAAI,MAAM,QAAQ,CAAC,QAAQ,CAAC,EAAE,IAAI,MAAM,QAAQ,CAAC,QAAQ,CAAC,EAAE,IAAI,MAAM,QAAQ,CAAC,QAAQ,CAAC,EAAE,IAAI,MAAM,QAAQ,CAAC,QAAQ,CAAC,EAAE,IAAI,MAAM,QAAQ,QAAQ,CAAC,EAAE,IAAI,MAAM,QAAQ,QAAQ,CAAC,EAAE,IAAI,MAAM,QAAQ,QAAQ,CAAC,GAAG,IAAI,MAAM,QAAQ,QAAQ,CAAC,GAAG,IAAI,MAAM,QAAQ,QAAQ,CAAC,GAAG,IAAI,MAAM,QAAQ,QAAQ,CAAC,GAAG,IAAI,MAAM,QAAQ,QAAQ,CAAC,GAAG,IAAI,MAAM,QAAQ,QAAQ,CAAC,GAAG,IAAI;YACnf,OAAO,yBAAyB;QAClC;QACA,SAAS,aAAa,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,eAAe;YAC1D,IAAI,OAAO,aAAa,EAAE;gBACxB,MAAM,UAAU,OAAO,OAAO,KAAK,QAAQ,OAAO,MAAM,CAAC,IAAI,CAAC,OAAO,MAAM,MAAM;gBACjF,OAAO,OAAO,CAAC,KAAK,CAAC,OAAO,GAAG,YAAY,OAAO,KAAK;gBACvD,IAAI,YAAY,MAAM;oBACpB,OAAO,cAAc,CAAC,OAAO,OAAO;oBACpC,IAAI;oBACJ,IAAI,OAAO,aAAa,EAAE;wBACxB,QAAQ,IAAI,CAAC,OAAO,kBAAkB;wBACtC,QAAQ,SAAS;wBACjB,IAAI,OAAO,UAAU,KAAK,GACxB,QAAQ,QAAQ,CAAC,SAAS,aAAa,CAAC,OAAO,UAAU;wBAC3D,OAAO,WAAW,CAAC,SAAS,CAAC,WAAW,aAAa;wBACrD,QAAQ,WAAW,CAAC;wBACpB,QAAQ,KAAK,CAAC;wBACd,QAAQ,QAAQ,CAAC,EAAE,GAAG;wBACtB,QAAQ,QAAQ,CAAC,EAAE,GAAG;wBACtB,QAAQ,QAAQ,CAAC,GAAG,GAAG;wBACvB,QAAQ,QAAQ,CAAC,GAAG,GAAG;wBACvB,QAAQ,mBAAmB;oBAC7B,OAAO;wBACL,QAAQ,mBAAmB,OAAO,WAAW;oBAC/C;oBACA,MAAM,UAAU,OAAO,OAAO;oBAC9B,MAAM,eAAe,MAAM,OAAO,CAAC,GAAG,CAAC;oBACvC,IAAI,iBAAiB,KAAK,KAAK,aAAa,KAAK,KAAK,OAAO;wBAC3D,QAAQ,KAAK,CAAC,SAAS,GAAG;wBAC1B,MAAM,aAAa;4BAAE;wBAAM;wBAC3B,MAAM,OAAO,CAAC,GAAG,CAAC,QAAQ;oBAC5B;oBACA,IAAI,QAAQ,UAAU,KAAK,eAAe;wBACxC,cAAc,WAAW,CAAC;oBAC5B;oBACA,OAAO,aAAa,CAAC,OAAO,OAAO;gBACrC;YACF;YACA,IAAK,IAAI,IAAI,GAAG,IAAI,OAAO,QAAQ,CAAC,MAAM,EAAE,IAAI,GAAG,IAAK;gBACtD,aAAa,OAAO,QAAQ,CAAC,EAAE,EAAE,OAAO;YAC1C;QACF;IACF;AACF;;CAMA,yCAAyC","ignoreList":[0]}},
    {"offset": {"line": 6197, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6203, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/renderers/Projector.js"],"sourcesContent":["import { Vector3, Color, Vector2, Vector4, Box3, Matrix4, Frustum, Matrix3, DoubleSide } from \"three\";\nclass RenderableObject {\n  constructor() {\n    this.id = 0;\n    this.object = null;\n    this.z = 0;\n    this.renderOrder = 0;\n  }\n}\nclass RenderableFace {\n  constructor() {\n    this.id = 0;\n    this.v1 = new RenderableVertex();\n    this.v2 = new RenderableVertex();\n    this.v3 = new RenderableVertex();\n    this.normalModel = new Vector3();\n    this.vertexNormalsModel = [new Vector3(), new Vector3(), new Vector3()];\n    this.vertexNormalsLength = 0;\n    this.color = new Color();\n    this.material = null;\n    this.uvs = [new Vector2(), new Vector2(), new Vector2()];\n    this.z = 0;\n    this.renderOrder = 0;\n  }\n}\nclass RenderableVertex {\n  constructor() {\n    this.position = new Vector3();\n    this.positionWorld = new Vector3();\n    this.positionScreen = new Vector4();\n    this.visible = true;\n  }\n  copy(vertex) {\n    this.positionWorld.copy(vertex.positionWorld);\n    this.positionScreen.copy(vertex.positionScreen);\n  }\n}\nclass RenderableLine {\n  constructor() {\n    this.id = 0;\n    this.v1 = new RenderableVertex();\n    this.v2 = new RenderableVertex();\n    this.vertexColors = [new Color(), new Color()];\n    this.material = null;\n    this.z = 0;\n    this.renderOrder = 0;\n  }\n}\nclass RenderableSprite {\n  constructor() {\n    this.id = 0;\n    this.object = null;\n    this.x = 0;\n    this.y = 0;\n    this.z = 0;\n    this.rotation = 0;\n    this.scale = new Vector2();\n    this.material = null;\n    this.renderOrder = 0;\n  }\n}\nclass Projector {\n  constructor() {\n    let _object, _objectCount, _objectPoolLength = 0, _vertex, _vertexCount, _vertexPoolLength = 0, _face, _faceCount, _facePoolLength = 0, _line, _lineCount, _linePoolLength = 0, _sprite, _spriteCount, _spritePoolLength = 0, _modelMatrix;\n    const _renderData = { objects: [], lights: [], elements: [] }, _vector3 = new Vector3(), _vector4 = new Vector4(), _clipBox = new Box3(new Vector3(-1, -1, -1), new Vector3(1, 1, 1)), _boundingBox = new Box3(), _points3 = new Array(3), _viewMatrix = new Matrix4(), _viewProjectionMatrix = new Matrix4(), _modelViewProjectionMatrix = new Matrix4(), _frustum = new Frustum(), _objectPool = [], _vertexPool = [], _facePool = [], _linePool = [], _spritePool = [];\n    function RenderList() {\n      const normals = [];\n      const colors = [];\n      const uvs = [];\n      let object = null;\n      const normalMatrix = new Matrix3();\n      function setObject(value) {\n        object = value;\n        normalMatrix.getNormalMatrix(object.matrixWorld);\n        normals.length = 0;\n        colors.length = 0;\n        uvs.length = 0;\n      }\n      function projectVertex(vertex) {\n        const position = vertex.position;\n        const positionWorld = vertex.positionWorld;\n        const positionScreen = vertex.positionScreen;\n        positionWorld.copy(position).applyMatrix4(_modelMatrix);\n        positionScreen.copy(positionWorld).applyMatrix4(_viewProjectionMatrix);\n        const invW = 1 / positionScreen.w;\n        positionScreen.x *= invW;\n        positionScreen.y *= invW;\n        positionScreen.z *= invW;\n        vertex.visible = positionScreen.x >= -1 && positionScreen.x <= 1 && positionScreen.y >= -1 && positionScreen.y <= 1 && positionScreen.z >= -1 && positionScreen.z <= 1;\n      }\n      function pushVertex(x, y, z) {\n        _vertex = getNextVertexInPool();\n        _vertex.position.set(x, y, z);\n        projectVertex(_vertex);\n      }\n      function pushNormal(x, y, z) {\n        normals.push(x, y, z);\n      }\n      function pushColor(r, g, b) {\n        colors.push(r, g, b);\n      }\n      function pushUv(x, y) {\n        uvs.push(x, y);\n      }\n      function checkTriangleVisibility(v1, v2, v3) {\n        if (v1.visible === true || v2.visible === true || v3.visible === true)\n          return true;\n        _points3[0] = v1.positionScreen;\n        _points3[1] = v2.positionScreen;\n        _points3[2] = v3.positionScreen;\n        return _clipBox.intersectsBox(_boundingBox.setFromPoints(_points3));\n      }\n      function checkBackfaceCulling(v1, v2, v3) {\n        return (v3.positionScreen.x - v1.positionScreen.x) * (v2.positionScreen.y - v1.positionScreen.y) - (v3.positionScreen.y - v1.positionScreen.y) * (v2.positionScreen.x - v1.positionScreen.x) < 0;\n      }\n      function pushLine(a, b) {\n        const v1 = _vertexPool[a];\n        const v2 = _vertexPool[b];\n        v1.positionScreen.copy(v1.position).applyMatrix4(_modelViewProjectionMatrix);\n        v2.positionScreen.copy(v2.position).applyMatrix4(_modelViewProjectionMatrix);\n        if (clipLine(v1.positionScreen, v2.positionScreen) === true) {\n          v1.positionScreen.multiplyScalar(1 / v1.positionScreen.w);\n          v2.positionScreen.multiplyScalar(1 / v2.positionScreen.w);\n          _line = getNextLineInPool();\n          _line.id = object.id;\n          _line.v1.copy(v1);\n          _line.v2.copy(v2);\n          _line.z = Math.max(v1.positionScreen.z, v2.positionScreen.z);\n          _line.renderOrder = object.renderOrder;\n          _line.material = object.material;\n          if (object.material.vertexColors) {\n            _line.vertexColors[0].fromArray(colors, a * 3);\n            _line.vertexColors[1].fromArray(colors, b * 3);\n          }\n          _renderData.elements.push(_line);\n        }\n      }\n      function pushTriangle(a, b, c, material) {\n        const v1 = _vertexPool[a];\n        const v2 = _vertexPool[b];\n        const v3 = _vertexPool[c];\n        if (checkTriangleVisibility(v1, v2, v3) === false)\n          return;\n        if (material.side === DoubleSide || checkBackfaceCulling(v1, v2, v3) === true) {\n          _face = getNextFaceInPool();\n          _face.id = object.id;\n          _face.v1.copy(v1);\n          _face.v2.copy(v2);\n          _face.v3.copy(v3);\n          _face.z = (v1.positionScreen.z + v2.positionScreen.z + v3.positionScreen.z) / 3;\n          _face.renderOrder = object.renderOrder;\n          _vector3.subVectors(v3.position, v2.position);\n          _vector4.subVectors(v1.position, v2.position);\n          _vector3.cross(_vector4);\n          _face.normalModel.copy(_vector3);\n          _face.normalModel.applyMatrix3(normalMatrix).normalize();\n          for (let i = 0; i < 3; i++) {\n            const normal = _face.vertexNormalsModel[i];\n            normal.fromArray(normals, arguments[i] * 3);\n            normal.applyMatrix3(normalMatrix).normalize();\n            const uv = _face.uvs[i];\n            uv.fromArray(uvs, arguments[i] * 2);\n          }\n          _face.vertexNormalsLength = 3;\n          _face.material = material;\n          if (material.vertexColors) {\n            _face.color.fromArray(colors, a * 3);\n          }\n          _renderData.elements.push(_face);\n        }\n      }\n      return {\n        setObject,\n        projectVertex,\n        checkTriangleVisibility,\n        checkBackfaceCulling,\n        pushVertex,\n        pushNormal,\n        pushColor,\n        pushUv,\n        pushLine,\n        pushTriangle\n      };\n    }\n    const renderList = new RenderList();\n    function projectObject(object) {\n      if (object.visible === false)\n        return;\n      if (object.isLight) {\n        _renderData.lights.push(object);\n      } else if (object.isMesh || object.isLine || object.isPoints) {\n        if (object.material.visible === false)\n          return;\n        if (object.frustumCulled === true && _frustum.intersectsObject(object) === false)\n          return;\n        addObject(object);\n      } else if (object.isSprite) {\n        if (object.material.visible === false)\n          return;\n        if (object.frustumCulled === true && _frustum.intersectsSprite(object) === false)\n          return;\n        addObject(object);\n      }\n      const children = object.children;\n      for (let i = 0, l = children.length; i < l; i++) {\n        projectObject(children[i]);\n      }\n    }\n    function addObject(object) {\n      _object = getNextObjectInPool();\n      _object.id = object.id;\n      _object.object = object;\n      _vector3.setFromMatrixPosition(object.matrixWorld);\n      _vector3.applyMatrix4(_viewProjectionMatrix);\n      _object.z = _vector3.z;\n      _object.renderOrder = object.renderOrder;\n      _renderData.objects.push(_object);\n    }\n    this.projectScene = function(scene, camera, sortObjects, sortElements) {\n      _faceCount = 0;\n      _lineCount = 0;\n      _spriteCount = 0;\n      _renderData.elements.length = 0;\n      if (scene.matrixWorldAutoUpdate === true)\n        scene.updateMatrixWorld();\n      if (camera.parent === null && camera.matrixWorldAutoUpdate === true)\n        camera.updateMatrixWorld();\n      _viewMatrix.copy(camera.matrixWorldInverse);\n      _viewProjectionMatrix.multiplyMatrices(camera.projectionMatrix, _viewMatrix);\n      _frustum.setFromProjectionMatrix(_viewProjectionMatrix);\n      _objectCount = 0;\n      _renderData.objects.length = 0;\n      _renderData.lights.length = 0;\n      projectObject(scene);\n      if (sortObjects === true) {\n        _renderData.objects.sort(painterSort);\n      }\n      const objects = _renderData.objects;\n      for (let o = 0, ol = objects.length; o < ol; o++) {\n        const object = objects[o].object;\n        const geometry = object.geometry;\n        renderList.setObject(object);\n        _modelMatrix = object.matrixWorld;\n        _vertexCount = 0;\n        if (object.isMesh) {\n          let material = object.material;\n          const isMultiMaterial = Array.isArray(material);\n          const attributes = geometry.attributes;\n          const groups = geometry.groups;\n          if (attributes.position === void 0)\n            continue;\n          const positions = attributes.position.array;\n          for (let i = 0, l = positions.length; i < l; i += 3) {\n            let x = positions[i];\n            let y = positions[i + 1];\n            let z = positions[i + 2];\n            const morphTargets = geometry.morphAttributes.position;\n            if (morphTargets !== void 0) {\n              const morphTargetsRelative = geometry.morphTargetsRelative;\n              const morphInfluences = object.morphTargetInfluences;\n              for (let t = 0, tl = morphTargets.length; t < tl; t++) {\n                const influence = morphInfluences[t];\n                if (influence === 0)\n                  continue;\n                const target = morphTargets[t];\n                if (morphTargetsRelative) {\n                  x += target.getX(i / 3) * influence;\n                  y += target.getY(i / 3) * influence;\n                  z += target.getZ(i / 3) * influence;\n                } else {\n                  x += (target.getX(i / 3) - positions[i]) * influence;\n                  y += (target.getY(i / 3) - positions[i + 1]) * influence;\n                  z += (target.getZ(i / 3) - positions[i + 2]) * influence;\n                }\n              }\n            }\n            renderList.pushVertex(x, y, z);\n          }\n          if (attributes.normal !== void 0) {\n            const normals = attributes.normal.array;\n            for (let i = 0, l = normals.length; i < l; i += 3) {\n              renderList.pushNormal(normals[i], normals[i + 1], normals[i + 2]);\n            }\n          }\n          if (attributes.color !== void 0) {\n            const colors = attributes.color.array;\n            for (let i = 0, l = colors.length; i < l; i += 3) {\n              renderList.pushColor(colors[i], colors[i + 1], colors[i + 2]);\n            }\n          }\n          if (attributes.uv !== void 0) {\n            const uvs = attributes.uv.array;\n            for (let i = 0, l = uvs.length; i < l; i += 2) {\n              renderList.pushUv(uvs[i], uvs[i + 1]);\n            }\n          }\n          if (geometry.index !== null) {\n            const indices = geometry.index.array;\n            if (groups.length > 0) {\n              for (let g = 0; g < groups.length; g++) {\n                const group = groups[g];\n                material = isMultiMaterial === true ? object.material[group.materialIndex] : object.material;\n                if (material === void 0)\n                  continue;\n                for (let i = group.start, l = group.start + group.count; i < l; i += 3) {\n                  renderList.pushTriangle(indices[i], indices[i + 1], indices[i + 2], material);\n                }\n              }\n            } else {\n              for (let i = 0, l = indices.length; i < l; i += 3) {\n                renderList.pushTriangle(indices[i], indices[i + 1], indices[i + 2], material);\n              }\n            }\n          } else {\n            if (groups.length > 0) {\n              for (let g = 0; g < groups.length; g++) {\n                const group = groups[g];\n                material = isMultiMaterial === true ? object.material[group.materialIndex] : object.material;\n                if (material === void 0)\n                  continue;\n                for (let i = group.start, l = group.start + group.count; i < l; i += 3) {\n                  renderList.pushTriangle(i, i + 1, i + 2, material);\n                }\n              }\n            } else {\n              for (let i = 0, l = positions.length / 3; i < l; i += 3) {\n                renderList.pushTriangle(i, i + 1, i + 2, material);\n              }\n            }\n          }\n        } else if (object.isLine) {\n          _modelViewProjectionMatrix.multiplyMatrices(_viewProjectionMatrix, _modelMatrix);\n          const attributes = geometry.attributes;\n          if (attributes.position !== void 0) {\n            const positions = attributes.position.array;\n            for (let i = 0, l = positions.length; i < l; i += 3) {\n              renderList.pushVertex(positions[i], positions[i + 1], positions[i + 2]);\n            }\n            if (attributes.color !== void 0) {\n              const colors = attributes.color.array;\n              for (let i = 0, l = colors.length; i < l; i += 3) {\n                renderList.pushColor(colors[i], colors[i + 1], colors[i + 2]);\n              }\n            }\n            if (geometry.index !== null) {\n              const indices = geometry.index.array;\n              for (let i = 0, l = indices.length; i < l; i += 2) {\n                renderList.pushLine(indices[i], indices[i + 1]);\n              }\n            } else {\n              const step = object.isLineSegments ? 2 : 1;\n              for (let i = 0, l = positions.length / 3 - 1; i < l; i += step) {\n                renderList.pushLine(i, i + 1);\n              }\n            }\n          }\n        } else if (object.isPoints) {\n          _modelViewProjectionMatrix.multiplyMatrices(_viewProjectionMatrix, _modelMatrix);\n          const attributes = geometry.attributes;\n          if (attributes.position !== void 0) {\n            const positions = attributes.position.array;\n            for (let i = 0, l = positions.length; i < l; i += 3) {\n              _vector4.set(positions[i], positions[i + 1], positions[i + 2], 1);\n              _vector4.applyMatrix4(_modelViewProjectionMatrix);\n              pushPoint(_vector4, object, camera);\n            }\n          }\n        } else if (object.isSprite) {\n          object.modelViewMatrix.multiplyMatrices(camera.matrixWorldInverse, object.matrixWorld);\n          _vector4.set(_modelMatrix.elements[12], _modelMatrix.elements[13], _modelMatrix.elements[14], 1);\n          _vector4.applyMatrix4(_viewProjectionMatrix);\n          pushPoint(_vector4, object, camera);\n        }\n      }\n      if (sortElements === true) {\n        _renderData.elements.sort(painterSort);\n      }\n      return _renderData;\n    };\n    function pushPoint(_vector42, object, camera) {\n      const invW = 1 / _vector42.w;\n      _vector42.z *= invW;\n      if (_vector42.z >= -1 && _vector42.z <= 1) {\n        _sprite = getNextSpriteInPool();\n        _sprite.id = object.id;\n        _sprite.x = _vector42.x * invW;\n        _sprite.y = _vector42.y * invW;\n        _sprite.z = _vector42.z;\n        _sprite.renderOrder = object.renderOrder;\n        _sprite.object = object;\n        _sprite.rotation = object.rotation;\n        _sprite.scale.x = object.scale.x * Math.abs(\n          _sprite.x - (_vector42.x + camera.projectionMatrix.elements[0]) / (_vector42.w + camera.projectionMatrix.elements[12])\n        );\n        _sprite.scale.y = object.scale.y * Math.abs(\n          _sprite.y - (_vector42.y + camera.projectionMatrix.elements[5]) / (_vector42.w + camera.projectionMatrix.elements[13])\n        );\n        _sprite.material = object.material;\n        _renderData.elements.push(_sprite);\n      }\n    }\n    function getNextObjectInPool() {\n      if (_objectCount === _objectPoolLength) {\n        const object = new RenderableObject();\n        _objectPool.push(object);\n        _objectPoolLength++;\n        _objectCount++;\n        return object;\n      }\n      return _objectPool[_objectCount++];\n    }\n    function getNextVertexInPool() {\n      if (_vertexCount === _vertexPoolLength) {\n        const vertex = new RenderableVertex();\n        _vertexPool.push(vertex);\n        _vertexPoolLength++;\n        _vertexCount++;\n        return vertex;\n      }\n      return _vertexPool[_vertexCount++];\n    }\n    function getNextFaceInPool() {\n      if (_faceCount === _facePoolLength) {\n        const face = new RenderableFace();\n        _facePool.push(face);\n        _facePoolLength++;\n        _faceCount++;\n        return face;\n      }\n      return _facePool[_faceCount++];\n    }\n    function getNextLineInPool() {\n      if (_lineCount === _linePoolLength) {\n        const line = new RenderableLine();\n        _linePool.push(line);\n        _linePoolLength++;\n        _lineCount++;\n        return line;\n      }\n      return _linePool[_lineCount++];\n    }\n    function getNextSpriteInPool() {\n      if (_spriteCount === _spritePoolLength) {\n        const sprite = new RenderableSprite();\n        _spritePool.push(sprite);\n        _spritePoolLength++;\n        _spriteCount++;\n        return sprite;\n      }\n      return _spritePool[_spriteCount++];\n    }\n    function painterSort(a, b) {\n      if (a.renderOrder !== b.renderOrder) {\n        return a.renderOrder - b.renderOrder;\n      } else if (a.z !== b.z) {\n        return b.z - a.z;\n      } else if (a.id !== b.id) {\n        return a.id - b.id;\n      } else {\n        return 0;\n      }\n    }\n    function clipLine(s1, s2) {\n      let alpha1 = 0, alpha2 = 1;\n      const bc1near = s1.z + s1.w, bc2near = s2.z + s2.w, bc1far = -s1.z + s1.w, bc2far = -s2.z + s2.w;\n      if (bc1near >= 0 && bc2near >= 0 && bc1far >= 0 && bc2far >= 0) {\n        return true;\n      } else if (bc1near < 0 && bc2near < 0 || bc1far < 0 && bc2far < 0) {\n        return false;\n      } else {\n        if (bc1near < 0) {\n          alpha1 = Math.max(alpha1, bc1near / (bc1near - bc2near));\n        } else if (bc2near < 0) {\n          alpha2 = Math.min(alpha2, bc1near / (bc1near - bc2near));\n        }\n        if (bc1far < 0) {\n          alpha1 = Math.max(alpha1, bc1far / (bc1far - bc2far));\n        } else if (bc2far < 0) {\n          alpha2 = Math.min(alpha2, bc1far / (bc1far - bc2far));\n        }\n        if (alpha2 < alpha1) {\n          return false;\n        } else {\n          s1.lerp(s2, alpha1);\n          s2.lerp(s1, 1 - alpha2);\n          return true;\n        }\n      }\n    }\n  }\n}\nexport {\n  Projector,\n  RenderableFace,\n  RenderableLine,\n  RenderableObject,\n  RenderableSprite,\n  RenderableVertex\n};\n//# sourceMappingURL=Projector.js.map\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 6703, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6709, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/textures/FlakesTexture.js"],"sourcesContent":["class FlakesTexture {\n  constructor(width = 512, height = 512) {\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = width;\n    canvas.height = height;\n    const context = canvas.getContext(\"2d\");\n    context.fillStyle = \"rgb(127,127,255)\";\n    context.fillRect(0, 0, width, height);\n    for (let i = 0; i < 4e3; i++) {\n      const x = Math.random() * width;\n      const y = Math.random() * height;\n      const r = Math.random() * 3 + 3;\n      let nx = Math.random() * 2 - 1;\n      let ny = Math.random() * 2 - 1;\n      let nz = 1.5;\n      const l = Math.sqrt(nx * nx + ny * ny + nz * nz);\n      nx /= l;\n      ny /= l;\n      nz /= l;\n      context.fillStyle = \"rgb(\" + (nx * 127 + 127) + \",\" + (ny * 127 + 127) + \",\" + nz * 255 + \")\";\n      context.beginPath();\n      context.arc(x, y, r, 0, Math.PI * 2);\n      context.fill();\n    }\n    return canvas;\n  }\n}\nexport {\n  FlakesTexture\n};\n//# sourceMappingURL=FlakesTexture.js.map\n"],"names":[],"mappings":";;;AAAA,MAAM;IACJ,YAAY,QAAQ,GAAG,EAAE,SAAS,GAAG,CAAE;QACrC,MAAM,SAAS,SAAS,aAAa,CAAC;QACtC,OAAO,KAAK,GAAG;QACf,OAAO,MAAM,GAAG;QAChB,MAAM,UAAU,OAAO,UAAU,CAAC;QAClC,QAAQ,SAAS,GAAG;QACpB,QAAQ,QAAQ,CAAC,GAAG,GAAG,OAAO;QAC9B,IAAK,IAAI,IAAI,GAAG,IAAI,KAAK,IAAK;YAC5B,MAAM,IAAI,KAAK,MAAM,KAAK;YAC1B,MAAM,IAAI,KAAK,MAAM,KAAK;YAC1B,MAAM,IAAI,KAAK,MAAM,KAAK,IAAI;YAC9B,IAAI,KAAK,KAAK,MAAM,KAAK,IAAI;YAC7B,IAAI,KAAK,KAAK,MAAM,KAAK,IAAI;YAC7B,IAAI,KAAK;YACT,MAAM,IAAI,KAAK,IAAI,CAAC,KAAK,KAAK,KAAK,KAAK,KAAK;YAC7C,MAAM;YACN,MAAM;YACN,MAAM;YACN,QAAQ,SAAS,GAAG,SAAS,CAAC,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,KAAK,MAAM,GAAG,IAAI,MAAM,KAAK,MAAM;YAC1F,QAAQ,SAAS;YACjB,QAAQ,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,KAAK,EAAE,GAAG;YAClC,QAAQ,IAAI;QACd;QACA,OAAO;IACT;AACF;;CAIA,yCAAyC","ignoreList":[0]}},
    {"offset": {"line": 6741, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6747, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/modifiers/CurveModifier.js"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nimport { DataTexture, RGBAFormat, FloatType, RepeatWrapping, NearestFilter, Mesh, InstancedMesh, DynamicDrawUsage, Matrix4 } from \"three\";\nconst CHANNELS = 4;\nconst TEXTURE_WIDTH = 1024;\nconst TEXTURE_HEIGHT = 4;\nconst initSplineTexture = (numberOfCurves = 1) => {\n  const dataArray = new Float32Array(TEXTURE_WIDTH * TEXTURE_HEIGHT * numberOfCurves * CHANNELS);\n  const dataTexture = new DataTexture(dataArray, TEXTURE_WIDTH, TEXTURE_HEIGHT * numberOfCurves, RGBAFormat, FloatType);\n  dataTexture.wrapS = RepeatWrapping;\n  dataTexture.wrapT = RepeatWrapping;\n  dataTexture.magFilter = NearestFilter;\n  dataTexture.needsUpdate = true;\n  return dataTexture;\n};\nconst updateSplineTexture = (texture, splineCurve, offset = 0) => {\n  const numberOfPoints = Math.floor(TEXTURE_WIDTH * (TEXTURE_HEIGHT / 4));\n  splineCurve.arcLengthDivisions = numberOfPoints / 2;\n  splineCurve.updateArcLengths();\n  const points = splineCurve.getSpacedPoints(numberOfPoints);\n  const frenetFrames = splineCurve.computeFrenetFrames(numberOfPoints, true);\n  for (let i = 0; i < numberOfPoints; i++) {\n    const rowOffset = Math.floor(i / TEXTURE_WIDTH);\n    const rowIndex = i % TEXTURE_WIDTH;\n    let pt = points[i];\n    setTextureValue(texture, rowIndex, pt.x, pt.y, pt.z, 0 + rowOffset + TEXTURE_HEIGHT * offset);\n    pt = frenetFrames.tangents[i];\n    setTextureValue(texture, rowIndex, pt.x, pt.y, pt.z, 1 + rowOffset + TEXTURE_HEIGHT * offset);\n    pt = frenetFrames.normals[i];\n    setTextureValue(texture, rowIndex, pt.x, pt.y, pt.z, 2 + rowOffset + TEXTURE_HEIGHT * offset);\n    pt = frenetFrames.binormals[i];\n    setTextureValue(texture, rowIndex, pt.x, pt.y, pt.z, 3 + rowOffset + TEXTURE_HEIGHT * offset);\n  }\n  texture.needsUpdate = true;\n};\nconst setTextureValue = (texture, index, x, y, z, o) => {\n  const image = texture.image;\n  const { data } = image;\n  const i = CHANNELS * TEXTURE_WIDTH * o;\n  data[index * CHANNELS + i + 0] = x;\n  data[index * CHANNELS + i + 1] = y;\n  data[index * CHANNELS + i + 2] = z;\n  data[index * CHANNELS + i + 3] = 1;\n};\nconst getUniforms = (splineTexture) => ({\n  spineTexture: { value: splineTexture },\n  pathOffset: { type: \"f\", value: 0 },\n  // time of path curve\n  pathSegment: { type: \"f\", value: 1 },\n  // fractional length of path\n  spineOffset: { type: \"f\", value: 161 },\n  spineLength: { type: \"f\", value: 400 },\n  flow: { type: \"i\", value: 1 }\n});\nfunction modifyShader(material, uniforms, numberOfCurves = 1) {\n  if (material.__ok)\n    return;\n  material.__ok = true;\n  material.onBeforeCompile = (shader) => {\n    if (shader.__modified)\n      return;\n    shader.__modified = true;\n    Object.assign(shader.uniforms, uniforms);\n    const vertexShader = (\n      /* glsl */\n      `\n\t\tuniform sampler2D spineTexture;\n\t\tuniform float pathOffset;\n\t\tuniform float pathSegment;\n\t\tuniform float spineOffset;\n\t\tuniform float spineLength;\n\t\tuniform int flow;\n\n\t\tfloat textureLayers = ${TEXTURE_HEIGHT * numberOfCurves}.;\n\t\tfloat textureStacks = ${TEXTURE_HEIGHT / 4}.;\n\n\t\t${shader.vertexShader}\n\t\t`.replace(\"#include <beginnormal_vertex>\", \"\").replace(\"#include <defaultnormal_vertex>\", \"\").replace(\"#include <begin_vertex>\", \"\").replace(\n        /void\\s*main\\s*\\(\\)\\s*\\{/,\n        /* glsl */\n        `\n        void main() {\n        #include <beginnormal_vertex>\n\n        vec4 worldPos = modelMatrix * vec4(position, 1.);\n\n        bool bend = flow > 0;\n        float xWeight = bend ? 0. : 1.;\n\n        #ifdef USE_INSTANCING\n        float pathOffsetFromInstanceMatrix = instanceMatrix[3][2];\n        float spineLengthFromInstanceMatrix = instanceMatrix[3][0];\n        float spinePortion = bend ? (worldPos.x + spineOffset) / spineLengthFromInstanceMatrix : 0.;\n        float mt = (spinePortion * pathSegment + pathOffset + pathOffsetFromInstanceMatrix)*textureStacks;\n        #else\n        float spinePortion = bend ? (worldPos.x + spineOffset) / spineLength : 0.;\n        float mt = (spinePortion * pathSegment + pathOffset)*textureStacks;\n        #endif\n\n        mt = mod(mt, textureStacks);\n        float rowOffset = floor(mt);\n\n        #ifdef USE_INSTANCING\n        rowOffset += instanceMatrix[3][1] * ${TEXTURE_HEIGHT}.;\n        #endif\n\n        vec3 spinePos = texture2D(spineTexture, vec2(mt, (0. + rowOffset + 0.5) / textureLayers)).xyz;\n        vec3 a =        texture2D(spineTexture, vec2(mt, (1. + rowOffset + 0.5) / textureLayers)).xyz;\n        vec3 b =        texture2D(spineTexture, vec2(mt, (2. + rowOffset + 0.5) / textureLayers)).xyz;\n        vec3 c =        texture2D(spineTexture, vec2(mt, (3. + rowOffset + 0.5) / textureLayers)).xyz;\n        mat3 basis = mat3(a, b, c);\n\n        vec3 transformed = basis\n          * vec3(worldPos.x * xWeight, worldPos.y * 1., worldPos.z * 1.)\n          + spinePos;\n\n        vec3 transformedNormal = normalMatrix * (basis * objectNormal);\n\t\t\t`\n      ).replace(\n        \"#include <project_vertex>\",\n        /* glsl */\n        `vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\n\t\t\t\tgl_Position = projectionMatrix * mvPosition;`\n      )\n    );\n    shader.vertexShader = vertexShader;\n  };\n}\nclass Flow {\n  /**\n   * @param {Mesh} mesh The mesh to clone and modify to bend around the curve\n   * @param {number} numberOfCurves The amount of space that should preallocated for additional curves\n   */\n  constructor(mesh, numberOfCurves = 1) {\n    __publicField(this, \"curveArray\");\n    __publicField(this, \"curveLengthArray\");\n    __publicField(this, \"object3D\");\n    __publicField(this, \"splineTexure\");\n    __publicField(this, \"uniforms\");\n    const obj3D = mesh.clone();\n    const splineTexure = initSplineTexture(numberOfCurves);\n    const uniforms = getUniforms(splineTexure);\n    obj3D.traverse((child) => {\n      if (child instanceof Mesh || child instanceof InstancedMesh) {\n        child.material = child.material.clone();\n        modifyShader(child.material, uniforms, numberOfCurves);\n      }\n    });\n    this.curveArray = new Array(numberOfCurves);\n    this.curveLengthArray = new Array(numberOfCurves);\n    this.object3D = obj3D;\n    this.splineTexure = splineTexure;\n    this.uniforms = uniforms;\n  }\n  updateCurve(index, curve) {\n    if (index >= this.curveArray.length)\n      throw Error(\"Index out of range for Flow\");\n    const curveLength = curve.getLength();\n    this.uniforms.spineLength.value = curveLength;\n    this.curveLengthArray[index] = curveLength;\n    this.curveArray[index] = curve;\n    updateSplineTexture(this.splineTexure, curve, index);\n  }\n  moveAlongCurve(amount) {\n    this.uniforms.pathOffset.value += amount;\n  }\n}\nconst matrix = /* @__PURE__ */ new Matrix4();\nclass InstancedFlow extends Flow {\n  /**\n   *\n   * @param {number} count The number of instanced elements\n   * @param {number} curveCount The number of curves to preallocate for\n   * @param {Geometry} geometry The geometry to use for the instanced mesh\n   * @param {Material} material The material to use for the instanced mesh\n   */\n  constructor(count, curveCount, geometry, material) {\n    const mesh = new InstancedMesh(geometry, material, count);\n    mesh.instanceMatrix.setUsage(DynamicDrawUsage);\n    mesh.frustumCulled = false;\n    super(mesh, curveCount);\n    __publicField(this, \"offsets\");\n    __publicField(this, \"whichCurve\");\n    this.offsets = new Array(count).fill(0);\n    this.whichCurve = new Array(count).fill(0);\n  }\n  /**\n   * The extra information about which curve and curve position is stored in the translation components of the matrix for the instanced objects\n   * This writes that information to the matrix and marks it as needing update.\n   *\n   * @param {number} index of the instanced element to update\n   */\n  writeChanges(index) {\n    matrix.makeTranslation(this.curveLengthArray[this.whichCurve[index]], this.whichCurve[index], this.offsets[index]);\n    this.object3D.setMatrixAt(index, matrix);\n    this.object3D.instanceMatrix.needsUpdate = true;\n  }\n  /**\n   * Move an individual element along the curve by a specific amount\n   *\n   * @param {number} index Which element to update\n   * @param {number} offset Move by how much\n   */\n  moveIndividualAlongCurve(index, offset) {\n    this.offsets[index] += offset;\n    this.writeChanges(index);\n  }\n  /**\n   * Select which curve to use for an element\n   *\n   * @param {number} index the index of the instanced element to update\n   * @param {number} curveNo the index of the curve it should use\n   */\n  setCurve(index, curveNo) {\n    if (isNaN(curveNo))\n      throw Error(\"curve index being set is Not a Number (NaN)\");\n    this.whichCurve[index] = curveNo;\n    this.writeChanges(index);\n  }\n}\nexport {\n  Flow,\n  InstancedFlow,\n  getUniforms,\n  initSplineTexture,\n  modifyShader,\n  updateSplineTexture\n};\n//# sourceMappingURL=CurveModifier.js.map\n"],"names":[],"mappings":";;;;;;;;AAMA;AANA,IAAI,YAAY,OAAO,cAAc;AACrC,IAAI,kBAAkB,CAAC,KAAK,KAAK,QAAU,OAAO,MAAM,UAAU,KAAK,KAAK;QAAE,YAAY;QAAM,cAAc;QAAM,UAAU;QAAM;IAAM,KAAK,GAAG,CAAC,IAAI,GAAG;AAC1J,IAAI,gBAAgB,CAAC,KAAK,KAAK;IAC7B,gBAAgB,KAAK,OAAO,QAAQ,WAAW,MAAM,KAAK,KAAK;IAC/D,OAAO;AACT;;AAEA,MAAM,WAAW;AACjB,MAAM,gBAAgB;AACtB,MAAM,iBAAiB;AACvB,MAAM,oBAAoB,CAAC,iBAAiB,CAAC;IAC3C,MAAM,YAAY,IAAI,aAAa,gBAAgB,iBAAiB,iBAAiB;IACrF,MAAM,cAAc,IAAI,kJAAA,CAAA,cAAW,CAAC,WAAW,eAAe,iBAAiB,gBAAgB,kJAAA,CAAA,aAAU,EAAE,kJAAA,CAAA,YAAS;IACpH,YAAY,KAAK,GAAG,kJAAA,CAAA,iBAAc;IAClC,YAAY,KAAK,GAAG,kJAAA,CAAA,iBAAc;IAClC,YAAY,SAAS,GAAG,kJAAA,CAAA,gBAAa;IACrC,YAAY,WAAW,GAAG;IAC1B,OAAO;AACT;AACA,MAAM,sBAAsB,CAAC,SAAS,aAAa,SAAS,CAAC;IAC3D,MAAM,iBAAiB,KAAK,KAAK,CAAC,gBAAgB,CAAC,iBAAiB,CAAC;IACrE,YAAY,kBAAkB,GAAG,iBAAiB;IAClD,YAAY,gBAAgB;IAC5B,MAAM,SAAS,YAAY,eAAe,CAAC;IAC3C,MAAM,eAAe,YAAY,mBAAmB,CAAC,gBAAgB;IACrE,IAAK,IAAI,IAAI,GAAG,IAAI,gBAAgB,IAAK;QACvC,MAAM,YAAY,KAAK,KAAK,CAAC,IAAI;QACjC,MAAM,WAAW,IAAI;QACrB,IAAI,KAAK,MAAM,CAAC,EAAE;QAClB,gBAAgB,SAAS,UAAU,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,IAAI,YAAY,iBAAiB;QACtF,KAAK,aAAa,QAAQ,CAAC,EAAE;QAC7B,gBAAgB,SAAS,UAAU,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,IAAI,YAAY,iBAAiB;QACtF,KAAK,aAAa,OAAO,CAAC,EAAE;QAC5B,gBAAgB,SAAS,UAAU,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,IAAI,YAAY,iBAAiB;QACtF,KAAK,aAAa,SAAS,CAAC,EAAE;QAC9B,gBAAgB,SAAS,UAAU,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,IAAI,YAAY,iBAAiB;IACxF;IACA,QAAQ,WAAW,GAAG;AACxB;AACA,MAAM,kBAAkB,CAAC,SAAS,OAAO,GAAG,GAAG,GAAG;IAChD,MAAM,QAAQ,QAAQ,KAAK;IAC3B,MAAM,EAAE,IAAI,EAAE,GAAG;IACjB,MAAM,IAAI,WAAW,gBAAgB;IACrC,IAAI,CAAC,QAAQ,WAAW,IAAI,EAAE,GAAG;IACjC,IAAI,CAAC,QAAQ,WAAW,IAAI,EAAE,GAAG;IACjC,IAAI,CAAC,QAAQ,WAAW,IAAI,EAAE,GAAG;IACjC,IAAI,CAAC,QAAQ,WAAW,IAAI,EAAE,GAAG;AACnC;AACA,MAAM,cAAc,CAAC,gBAAkB,CAAC;QACtC,cAAc;YAAE,OAAO;QAAc;QACrC,YAAY;YAAE,MAAM;YAAK,OAAO;QAAE;QAClC,qBAAqB;QACrB,aAAa;YAAE,MAAM;YAAK,OAAO;QAAE;QACnC,4BAA4B;QAC5B,aAAa;YAAE,MAAM;YAAK,OAAO;QAAI;QACrC,aAAa;YAAE,MAAM;YAAK,OAAO;QAAI;QACrC,MAAM;YAAE,MAAM;YAAK,OAAO;QAAE;IAC9B,CAAC;AACD,SAAS,aAAa,QAAQ,EAAE,QAAQ,EAAE,iBAAiB,CAAC;IAC1D,IAAI,SAAS,IAAI,EACf;IACF,SAAS,IAAI,GAAG;IAChB,SAAS,eAAe,GAAG,CAAC;QAC1B,IAAI,OAAO,UAAU,EACnB;QACF,OAAO,UAAU,GAAG;QACpB,OAAO,MAAM,CAAC,OAAO,QAAQ,EAAE;QAC/B,MAAM,eACJ,QAAQ,GACR,CAAC;;;;;;;;wBAQiB,EAAE,iBAAiB,eAAe;wBAClC,EAAE,iBAAiB,EAAE;;EAE3C,EAAE,OAAO,YAAY,CAAC;EACtB,CAAC,CAAC,OAAO,CAAC,iCAAiC,IAAI,OAAO,CAAC,mCAAmC,IAAI,OAAO,CAAC,2BAA2B,IAAI,OAAO,CACtI,2BACA,QAAQ,GACR,CAAC;;;;;;;;;;;;;;;;;;;;;;;4CAuBmC,EAAE,eAAe;;;;;;;;;;;;;;GAc1D,CAAC,EACI,OAAO,CACP,6BACA,QAAQ,GACR,CAAC;gDACuC,CAAC;QAG7C,OAAO,YAAY,GAAG;IACxB;AACF;AACA,MAAM;IACJ;;;GAGC,GACD,YAAY,IAAI,EAAE,iBAAiB,CAAC,CAAE;QACpC,cAAc,IAAI,EAAE;QACpB,cAAc,IAAI,EAAE;QACpB,cAAc,IAAI,EAAE;QACpB,cAAc,IAAI,EAAE;QACpB,cAAc,IAAI,EAAE;QACpB,MAAM,QAAQ,KAAK,KAAK;QACxB,MAAM,eAAe,kBAAkB;QACvC,MAAM,WAAW,YAAY;QAC7B,MAAM,QAAQ,CAAC,CAAC;YACd,IAAI,iBAAiB,kJAAA,CAAA,OAAI,IAAI,iBAAiB,kJAAA,CAAA,gBAAa,EAAE;gBAC3D,MAAM,QAAQ,GAAG,MAAM,QAAQ,CAAC,KAAK;gBACrC,aAAa,MAAM,QAAQ,EAAE,UAAU;YACzC;QACF;QACA,IAAI,CAAC,UAAU,GAAG,IAAI,MAAM;QAC5B,IAAI,CAAC,gBAAgB,GAAG,IAAI,MAAM;QAClC,IAAI,CAAC,QAAQ,GAAG;QAChB,IAAI,CAAC,YAAY,GAAG;QACpB,IAAI,CAAC,QAAQ,GAAG;IAClB;IACA,YAAY,KAAK,EAAE,KAAK,EAAE;QACxB,IAAI,SAAS,IAAI,CAAC,UAAU,CAAC,MAAM,EACjC,MAAM,MAAM;QACd,MAAM,cAAc,MAAM,SAAS;QACnC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK,GAAG;QAClC,IAAI,CAAC,gBAAgB,CAAC,MAAM,GAAG;QAC/B,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG;QACzB,oBAAoB,IAAI,CAAC,YAAY,EAAE,OAAO;IAChD;IACA,eAAe,MAAM,EAAE;QACrB,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,KAAK,IAAI;IACpC;AACF;AACA,MAAM,SAAS,aAAa,GAAG,IAAI,kJAAA,CAAA,UAAO;AAC1C,MAAM,sBAAsB;IAC1B;;;;;;GAMC,GACD,YAAY,KAAK,EAAE,UAAU,EAAE,QAAQ,EAAE,QAAQ,CAAE;QACjD,MAAM,OAAO,IAAI,kJAAA,CAAA,gBAAa,CAAC,UAAU,UAAU;QACnD,KAAK,cAAc,CAAC,QAAQ,CAAC,kJAAA,CAAA,mBAAgB;QAC7C,KAAK,aAAa,GAAG;QACrB,KAAK,CAAC,MAAM;QACZ,cAAc,IAAI,EAAE;QACpB,cAAc,IAAI,EAAE;QACpB,IAAI,CAAC,OAAO,GAAG,IAAI,MAAM,OAAO,IAAI,CAAC;QACrC,IAAI,CAAC,UAAU,GAAG,IAAI,MAAM,OAAO,IAAI,CAAC;IAC1C;IACA;;;;;GAKC,GACD,aAAa,KAAK,EAAE;QAClB,OAAO,eAAe,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM;QACjH,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,OAAO;QACjC,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,WAAW,GAAG;IAC7C;IACA;;;;;GAKC,GACD,yBAAyB,KAAK,EAAE,MAAM,EAAE;QACtC,IAAI,CAAC,OAAO,CAAC,MAAM,IAAI;QACvB,IAAI,CAAC,YAAY,CAAC;IACpB;IACA;;;;;GAKC,GACD,SAAS,KAAK,EAAE,OAAO,EAAE;QACvB,IAAI,MAAM,UACR,MAAM,MAAM;QACd,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG;QACzB,IAAI,CAAC,YAAY,CAAC;IACpB;AACF;;CASA,yCAAyC","ignoreList":[0]}},
    {"offset": {"line": 6984, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6990, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/modifiers/SimplifyModifier.js"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nimport { Vector3, BufferGeometry, Float32BufferAttribute } from \"three\";\nimport { mergeVertices } from \"../utils/BufferGeometryUtils.js\";\nconst cb = /* @__PURE__ */ new Vector3();\nconst ab = /* @__PURE__ */ new Vector3();\nfunction pushIfUnique(array, object) {\n  if (array.indexOf(object) === -1)\n    array.push(object);\n}\nfunction removeFromArray(array, object) {\n  const k = array.indexOf(object);\n  if (k > -1)\n    array.splice(k, 1);\n}\nclass Vertex {\n  constructor(v, id) {\n    __publicField(this, \"position\");\n    __publicField(this, \"id\");\n    __publicField(this, \"faces\");\n    __publicField(this, \"neighbors\");\n    __publicField(this, \"collapseCost\");\n    __publicField(this, \"collapseNeighbor\");\n    __publicField(this, \"minCost\", 0);\n    __publicField(this, \"totalCost\", 0);\n    __publicField(this, \"costCount\", 0);\n    this.position = v;\n    this.id = id;\n    this.faces = [];\n    this.neighbors = [];\n    this.collapseCost = 0;\n    this.collapseNeighbor = null;\n  }\n  addUniqueNeighbor(vertex) {\n    pushIfUnique(this.neighbors, vertex);\n  }\n  removeIfNonNeighbor(n) {\n    const neighbors = this.neighbors;\n    const faces = this.faces;\n    const offset = neighbors.indexOf(n);\n    if (offset === -1)\n      return;\n    for (let i = 0; i < faces.length; i++) {\n      if (faces[i].hasVertex(n))\n        return;\n    }\n    neighbors.splice(offset, 1);\n  }\n}\nclass Triangle {\n  constructor(v1, v2, v3, a, b, c) {\n    __publicField(this, \"a\");\n    __publicField(this, \"b\");\n    __publicField(this, \"c\");\n    __publicField(this, \"v1\");\n    __publicField(this, \"v2\");\n    __publicField(this, \"v3\");\n    __publicField(this, \"normal\", new Vector3());\n    this.a = a;\n    this.b = b;\n    this.c = c;\n    this.v1 = v1;\n    this.v2 = v2;\n    this.v3 = v3;\n    this.computeNormal();\n    v1.faces.push(this);\n    v1.addUniqueNeighbor(v2);\n    v1.addUniqueNeighbor(v3);\n    v2.faces.push(this);\n    v2.addUniqueNeighbor(v1);\n    v2.addUniqueNeighbor(v3);\n    v3.faces.push(this);\n    v3.addUniqueNeighbor(v1);\n    v3.addUniqueNeighbor(v2);\n  }\n  computeNormal() {\n    const vA = this.v1.position;\n    const vB = this.v2.position;\n    const vC = this.v3.position;\n    cb.subVectors(vC, vB);\n    ab.subVectors(vA, vB);\n    cb.cross(ab).normalize();\n    this.normal.copy(cb);\n  }\n  hasVertex(v) {\n    return v === this.v1 || v === this.v2 || v === this.v3;\n  }\n  replaceVertex(oldv, newv) {\n    if (oldv === this.v1)\n      this.v1 = newv;\n    else if (oldv === this.v2)\n      this.v2 = newv;\n    else if (oldv === this.v3)\n      this.v3 = newv;\n    removeFromArray(oldv.faces, this);\n    newv.faces.push(this);\n    oldv.removeIfNonNeighbor(this.v1);\n    this.v1.removeIfNonNeighbor(oldv);\n    oldv.removeIfNonNeighbor(this.v2);\n    this.v2.removeIfNonNeighbor(oldv);\n    oldv.removeIfNonNeighbor(this.v3);\n    this.v3.removeIfNonNeighbor(oldv);\n    this.v1.addUniqueNeighbor(this.v2);\n    this.v1.addUniqueNeighbor(this.v3);\n    this.v2.addUniqueNeighbor(this.v1);\n    this.v2.addUniqueNeighbor(this.v3);\n    this.v3.addUniqueNeighbor(this.v1);\n    this.v3.addUniqueNeighbor(this.v2);\n    this.computeNormal();\n  }\n}\nclass SimplifyModifier {\n  constructor() {\n    __publicField(this, \"computeEdgeCollapseCost\", (u, v) => {\n      const edgelength = v.position.distanceTo(u.position);\n      let curvature = 0;\n      const sideFaces = [];\n      let i, il = u.faces.length, face, sideFace;\n      for (i = 0; i < il; i++) {\n        face = u.faces[i];\n        if (face.hasVertex(v)) {\n          sideFaces.push(face);\n        }\n      }\n      for (i = 0; i < il; i++) {\n        let minCurvature = 1;\n        face = u.faces[i];\n        for (let j = 0; j < sideFaces.length; j++) {\n          sideFace = sideFaces[j];\n          const dotProd = face.normal.dot(sideFace.normal);\n          minCurvature = Math.min(minCurvature, (1.001 - dotProd) / 2);\n        }\n        curvature = Math.max(curvature, minCurvature);\n      }\n      const borders = 0;\n      if (sideFaces.length < 2) {\n        curvature = 1;\n      }\n      const amt = edgelength * curvature + borders;\n      return amt;\n    });\n    __publicField(this, \"computeEdgeCostAtVertex\", (v) => {\n      if (v.neighbors.length === 0) {\n        v.collapseNeighbor = null;\n        v.collapseCost = -0.01;\n        return;\n      }\n      v.collapseCost = 1e5;\n      v.collapseNeighbor = null;\n      for (let i = 0; i < v.neighbors.length; i++) {\n        const collapseCost = this.computeEdgeCollapseCost(v, v.neighbors[i]);\n        if (!v.collapseNeighbor) {\n          v.collapseNeighbor = v.neighbors[i];\n          v.collapseCost = collapseCost;\n          v.minCost = collapseCost;\n          v.totalCost = 0;\n          v.costCount = 0;\n        }\n        v.costCount++;\n        v.totalCost += collapseCost;\n        if (collapseCost < v.minCost) {\n          v.collapseNeighbor = v.neighbors[i];\n          v.minCost = collapseCost;\n        }\n      }\n      v.collapseCost = v.totalCost / v.costCount;\n    });\n    __publicField(this, \"removeFace\", (f, faces) => {\n      removeFromArray(faces, f);\n      if (f.v1)\n        removeFromArray(f.v1.faces, f);\n      if (f.v2)\n        removeFromArray(f.v2.faces, f);\n      if (f.v3)\n        removeFromArray(f.v3.faces, f);\n      const vs = [f.v1, f.v2, f.v3];\n      let v1, v2;\n      for (let i = 0; i < 3; i++) {\n        v1 = vs[i];\n        v2 = vs[(i + 1) % 3];\n        if (!v1 || !v2)\n          continue;\n        v1.removeIfNonNeighbor(v2);\n        v2.removeIfNonNeighbor(v1);\n      }\n    });\n    __publicField(this, \"collapse\", (vertices, faces, u, v) => {\n      if (!v) {\n        this.removeVertex(u, vertices);\n        return;\n      }\n      let i;\n      const tmpVertices = [];\n      for (i = 0; i < u.neighbors.length; i++) {\n        tmpVertices.push(u.neighbors[i]);\n      }\n      for (i = u.faces.length - 1; i >= 0; i--) {\n        if (u.faces[i].hasVertex(v)) {\n          this.removeFace(u.faces[i], faces);\n        }\n      }\n      for (i = u.faces.length - 1; i >= 0; i--) {\n        u.faces[i].replaceVertex(u, v);\n      }\n      this.removeVertex(u, vertices);\n      for (i = 0; i < tmpVertices.length; i++) {\n        this.computeEdgeCostAtVertex(tmpVertices[i]);\n      }\n    });\n    __publicField(this, \"minimumCostEdge\", (vertices) => {\n      let least = vertices[0];\n      for (let i = 0; i < vertices.length; i++) {\n        if (vertices[i].collapseCost < least.collapseCost) {\n          least = vertices[i];\n        }\n      }\n      return least;\n    });\n    __publicField(this, \"modify\", (geometry, count) => {\n      geometry = geometry.clone();\n      const attributes = geometry.attributes;\n      for (let name in attributes) {\n        if (name !== \"position\")\n          geometry.deleteAttribute(name);\n      }\n      geometry = mergeVertices(geometry);\n      const vertices = [];\n      const faces = [];\n      const positionAttribute = geometry.getAttribute(\"position\");\n      for (let i = 0; i < positionAttribute.count; i++) {\n        const v = new Vector3().fromBufferAttribute(positionAttribute, i);\n        const vertex = new Vertex(v, i);\n        vertices.push(vertex);\n      }\n      const geomIndex = geometry.getIndex();\n      if (geomIndex !== null) {\n        for (let i = 0; i < geomIndex.count; i += 3) {\n          const a = geomIndex.getX(i);\n          const b = geomIndex.getX(i + 1);\n          const c = geomIndex.getX(i + 2);\n          const triangle = new Triangle(vertices[a], vertices[b], vertices[c], a, b, c);\n          faces.push(triangle);\n        }\n      } else {\n        for (let i = 0; i < positionAttribute.count; i += 3) {\n          const a = i;\n          const b = i + 1;\n          const c = i + 2;\n          const triangle = new Triangle(vertices[a], vertices[b], vertices[c], a, b, c);\n          faces.push(triangle);\n        }\n      }\n      for (let i = 0, il = vertices.length; i < il; i++) {\n        this.computeEdgeCostAtVertex(vertices[i]);\n      }\n      let nextVertex;\n      let z = count;\n      while (z--) {\n        nextVertex = this.minimumCostEdge(vertices);\n        if (!nextVertex) {\n          console.log(\"THREE.SimplifyModifier: No next vertex\");\n          break;\n        } else {\n          this.collapse(vertices, faces, nextVertex, nextVertex.collapseNeighbor);\n        }\n      }\n      const simplifiedGeometry = new BufferGeometry();\n      const position = [];\n      let index = [];\n      for (let i = 0; i < vertices.length; i++) {\n        const vertex = vertices[i].position;\n        position.push(vertex.x, vertex.y, vertex.z);\n      }\n      for (let i = 0; i < faces.length; i++) {\n        const face = faces[i];\n        const a = vertices.indexOf(face.v1);\n        const b = vertices.indexOf(face.v2);\n        const c = vertices.indexOf(face.v3);\n        index.push(a, b, c);\n      }\n      simplifiedGeometry.setAttribute(\"position\", new Float32BufferAttribute(position, 3));\n      simplifiedGeometry.setIndex(index);\n      return simplifiedGeometry;\n    });\n  }\n  removeVertex(v, vertices) {\n    console.assert(v.faces.length === 0);\n    while (v.neighbors.length) {\n      const n = v.neighbors.pop();\n      removeFromArray(n.neighbors, v);\n    }\n    removeFromArray(vertices, v);\n  }\n}\nexport {\n  SimplifyModifier\n};\n//# sourceMappingURL=SimplifyModifier.js.map\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 7292, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7298, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/modifiers/EdgeSplitModifier.js"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nimport { Vector3, BufferAttribute, BufferGeometry } from \"three\";\nimport * as BufferGeometryUtils from \"../utils/BufferGeometryUtils.js\";\nimport { mergeVertices } from \"../utils/BufferGeometryUtils.js\";\nclass EdgeSplitModifier {\n  constructor() {\n    __publicField(this, \"A\", new Vector3());\n    __publicField(this, \"B\", new Vector3());\n    __publicField(this, \"C\", new Vector3());\n    __publicField(this, \"positions\", []);\n    __publicField(this, \"normals\", new Float32Array());\n    __publicField(this, \"indexes\", []);\n    __publicField(this, \"pointToIndexMap\", []);\n    __publicField(this, \"splitIndexes\", []);\n    __publicField(this, \"oldNormals\", []);\n    __publicField(this, \"computeNormals\", () => {\n      this.normals = new Float32Array(this.indexes.length * 3);\n      for (let i = 0; i < this.indexes.length; i += 3) {\n        let index = this.indexes[i];\n        this.A.set(this.positions[3 * index], this.positions[3 * index + 1], this.positions[3 * index + 2]);\n        index = this.indexes[i + 1];\n        this.B.set(this.positions[3 * index], this.positions[3 * index + 1], this.positions[3 * index + 2]);\n        index = this.indexes[i + 2];\n        this.C.set(this.positions[3 * index], this.positions[3 * index + 1], this.positions[3 * index + 2]);\n        this.C.sub(this.B);\n        this.A.sub(this.B);\n        const normal = this.C.cross(this.A).normalize();\n        for (let j = 0; j < 3; j++) {\n          this.normals[3 * (i + j)] = normal.x;\n          this.normals[3 * (i + j) + 1] = normal.y;\n          this.normals[3 * (i + j) + 2] = normal.z;\n        }\n      }\n    });\n    __publicField(this, \"mapPositionsToIndexes\", () => {\n      this.pointToIndexMap = Array(this.positions.length / 3);\n      for (let i = 0; i < this.indexes.length; i++) {\n        const index = this.indexes[i];\n        if (this.pointToIndexMap[index] == null) {\n          this.pointToIndexMap[index] = [];\n        }\n        this.pointToIndexMap[index].push(i);\n      }\n    });\n    __publicField(this, \"edgeSplitToGroups\", (indexes, cutOff, firstIndex) => {\n      this.A.set(\n        this.normals[3 * firstIndex],\n        this.normals[3 * firstIndex + 1],\n        this.normals[3 * firstIndex + 2]\n      ).normalize();\n      const result = {\n        splitGroup: [],\n        currentGroup: [firstIndex]\n      };\n      for (let j of indexes) {\n        if (j !== firstIndex) {\n          this.B.set(this.normals[3 * j], this.normals[3 * j + 1], this.normals[3 * j + 2]).normalize();\n          if (this.B.dot(this.A) < cutOff) {\n            result.splitGroup.push(j);\n          } else {\n            result.currentGroup.push(j);\n          }\n        }\n      }\n      return result;\n    });\n    __publicField(this, \"edgeSplit\", (indexes, cutOff, original = null) => {\n      if (indexes.length === 0)\n        return;\n      const groupResults = [];\n      for (let index of indexes) {\n        groupResults.push(this.edgeSplitToGroups(indexes, cutOff, index));\n      }\n      let result = groupResults[0];\n      for (let groupResult of groupResults) {\n        if (groupResult.currentGroup.length > result.currentGroup.length) {\n          result = groupResult;\n        }\n      }\n      if (original != null) {\n        this.splitIndexes.push({\n          original,\n          indexes: result.currentGroup\n        });\n      }\n      if (result.splitGroup.length) {\n        this.edgeSplit(result.splitGroup, cutOff, original || result.currentGroup[0]);\n      }\n    });\n    __publicField(this, \"modify\", (geometry, cutOffAngle, tryKeepNormals = true) => {\n      let hadNormals = false;\n      if (geometry.attributes.normal) {\n        hadNormals = true;\n        geometry = geometry.clone();\n        if (tryKeepNormals === true && geometry.index !== null) {\n          this.oldNormals = geometry.attributes.normal.array;\n        }\n        geometry.deleteAttribute(\"normal\");\n      }\n      if (geometry.index == null) {\n        if (BufferGeometryUtils === void 0) {\n          throw \"THREE.EdgeSplitModifier relies on BufferGeometryUtils\";\n        }\n        geometry = mergeVertices(geometry);\n      }\n      this.indexes = geometry.index.array;\n      this.positions = geometry.getAttribute(\"position\").array;\n      this.computeNormals();\n      this.mapPositionsToIndexes();\n      this.splitIndexes = [];\n      for (let vertexIndexes of this.pointToIndexMap) {\n        this.edgeSplit(vertexIndexes, Math.cos(cutOffAngle) - 1e-3);\n      }\n      const newAttributes = {};\n      for (let name of Object.keys(geometry.attributes)) {\n        const oldAttribute = geometry.attributes[name];\n        const newArray = new oldAttribute.array.constructor(\n          (this.indexes.length + this.splitIndexes.length) * oldAttribute.itemSize\n        );\n        newArray.set(oldAttribute.array);\n        newAttributes[name] = new BufferAttribute(newArray, oldAttribute.itemSize, oldAttribute.normalized);\n      }\n      const newIndexes = new Uint32Array(this.indexes.length);\n      newIndexes.set(this.indexes);\n      for (let i = 0; i < this.splitIndexes.length; i++) {\n        const split = this.splitIndexes[i];\n        const index = this.indexes[split.original];\n        for (let attribute of Object.values(newAttributes)) {\n          for (let j = 0; j < attribute.itemSize; j++) {\n            attribute.array[(this.indexes.length + i) * attribute.itemSize + j] = attribute.array[index * attribute.itemSize + j];\n          }\n        }\n        for (let j of split.indexes) {\n          newIndexes[j] = this.indexes.length + i;\n        }\n      }\n      geometry = new BufferGeometry();\n      geometry.setIndex(new BufferAttribute(newIndexes, 1));\n      for (let name of Object.keys(newAttributes)) {\n        geometry.setAttribute(name, newAttributes[name]);\n      }\n      if (hadNormals) {\n        geometry.computeVertexNormals();\n        if (this.oldNormals !== null) {\n          const changedNormals = new Array(this.oldNormals.length / 3).fill(false);\n          for (let splitData of this.splitIndexes)\n            changedNormals[splitData.original] = true;\n          for (let i = 0; i < changedNormals.length; i++) {\n            if (changedNormals[i] === false) {\n              for (let j = 0; j < 3; j++) {\n                geometry.attributes.normal.array[3 * i + j] = this.oldNormals[3 * i + j];\n              }\n            }\n          }\n        }\n      }\n      return geometry;\n    });\n  }\n}\nexport {\n  EdgeSplitModifier\n};\n//# sourceMappingURL=EdgeSplitModifier.js.map\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 7469, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7475, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/types/helpers.js"],"sourcesContent":["const getWithKey = (obj, key) => obj[key];\nexport {\n  getWithKey\n};\n//# sourceMappingURL=helpers.js.map\n"],"names":[],"mappings":";;;AAAA,MAAM,aAAa,CAAC,KAAK,MAAQ,GAAG,CAAC,IAAI;;CAIzC,mCAAmC","ignoreList":[0]}},
    {"offset": {"line": 7481, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7487, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/utils/BufferGeometryUtils.js"],"sourcesContent":["import { BufferGeometry, BufferAttribute, InterleavedBuffer, InterleavedBufferAttribute, TrianglesDrawMode, TriangleFanDrawMode, TriangleStripDrawMode, Vector3, Float32BufferAttribute } from \"three\";\nimport { getWithKey } from \"../types/helpers.js\";\nconst mergeBufferGeometries = (geometries, useGroups) => {\n  const isIndexed = geometries[0].index !== null;\n  const attributesUsed = new Set(Object.keys(geometries[0].attributes));\n  const morphAttributesUsed = new Set(Object.keys(geometries[0].morphAttributes));\n  const attributes = {};\n  const morphAttributes = {};\n  const morphTargetsRelative = geometries[0].morphTargetsRelative;\n  const mergedGeometry = new BufferGeometry();\n  let offset = 0;\n  geometries.forEach((geom, i) => {\n    let attributesCount = 0;\n    if (isIndexed !== (geom.index !== null)) {\n      console.error(\n        \"THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index \" + i + \". All geometries must have compatible attributes; make sure index attribute exists among all geometries, or in none of them.\"\n      );\n      return null;\n    }\n    for (let name in geom.attributes) {\n      if (!attributesUsed.has(name)) {\n        console.error(\n          \"THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index \" + i + '. All geometries must have compatible attributes; make sure \"' + name + '\" attribute exists among all geometries, or in none of them.'\n        );\n        return null;\n      }\n      if (attributes[name] === void 0) {\n        attributes[name] = [];\n      }\n      attributes[name].push(geom.attributes[name]);\n      attributesCount++;\n    }\n    if (attributesCount !== attributesUsed.size) {\n      console.error(\n        \"THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index \" + i + \". Make sure all geometries have the same number of attributes.\"\n      );\n      return null;\n    }\n    if (morphTargetsRelative !== geom.morphTargetsRelative) {\n      console.error(\n        \"THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index \" + i + \". .morphTargetsRelative must be consistent throughout all geometries.\"\n      );\n      return null;\n    }\n    for (let name in geom.morphAttributes) {\n      if (!morphAttributesUsed.has(name)) {\n        console.error(\n          \"THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index \" + i + \".  .morphAttributes must be consistent throughout all geometries.\"\n        );\n        return null;\n      }\n      if (morphAttributes[name] === void 0)\n        morphAttributes[name] = [];\n      morphAttributes[name].push(geom.morphAttributes[name]);\n    }\n    mergedGeometry.userData.mergedUserData = mergedGeometry.userData.mergedUserData || [];\n    mergedGeometry.userData.mergedUserData.push(geom.userData);\n    if (useGroups) {\n      let count;\n      if (geom.index) {\n        count = geom.index.count;\n      } else if (geom.attributes.position !== void 0) {\n        count = geom.attributes.position.count;\n      } else {\n        console.error(\n          \"THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index \" + i + \". The geometry must have either an index or a position attribute\"\n        );\n        return null;\n      }\n      mergedGeometry.addGroup(offset, count, i);\n      offset += count;\n    }\n  });\n  if (isIndexed) {\n    let indexOffset = 0;\n    const mergedIndex = [];\n    geometries.forEach((geom) => {\n      const index = geom.index;\n      for (let j = 0; j < index.count; ++j) {\n        mergedIndex.push(index.getX(j) + indexOffset);\n      }\n      indexOffset += geom.attributes.position.count;\n    });\n    mergedGeometry.setIndex(mergedIndex);\n  }\n  for (let name in attributes) {\n    const mergedAttribute = mergeBufferAttributes(attributes[name]);\n    if (!mergedAttribute) {\n      console.error(\n        \"THREE.BufferGeometryUtils: .mergeBufferGeometries() failed while trying to merge the \" + name + \" attribute.\"\n      );\n      return null;\n    }\n    mergedGeometry.setAttribute(name, mergedAttribute);\n  }\n  for (let name in morphAttributes) {\n    const numMorphTargets = morphAttributes[name][0].length;\n    if (numMorphTargets === 0)\n      break;\n    mergedGeometry.morphAttributes = mergedGeometry.morphAttributes || {};\n    mergedGeometry.morphAttributes[name] = [];\n    for (let i = 0; i < numMorphTargets; ++i) {\n      const morphAttributesToMerge = [];\n      for (let j = 0; j < morphAttributes[name].length; ++j) {\n        morphAttributesToMerge.push(morphAttributes[name][j][i]);\n      }\n      const mergedMorphAttribute = mergeBufferAttributes(morphAttributesToMerge);\n      if (!mergedMorphAttribute) {\n        console.error(\n          \"THREE.BufferGeometryUtils: .mergeBufferGeometries() failed while trying to merge the \" + name + \" morphAttribute.\"\n        );\n        return null;\n      }\n      mergedGeometry.morphAttributes[name].push(mergedMorphAttribute);\n    }\n  }\n  return mergedGeometry;\n};\nconst mergeBufferAttributes = (attributes) => {\n  let TypedArray = void 0;\n  let itemSize = void 0;\n  let normalized = void 0;\n  let arrayLength = 0;\n  attributes.forEach((attr) => {\n    if (TypedArray === void 0) {\n      TypedArray = attr.array.constructor;\n    }\n    if (TypedArray !== attr.array.constructor) {\n      console.error(\n        \"THREE.BufferGeometryUtils: .mergeBufferAttributes() failed. BufferAttribute.array must be of consistent array types across matching attributes.\"\n      );\n      return null;\n    }\n    if (itemSize === void 0)\n      itemSize = attr.itemSize;\n    if (itemSize !== attr.itemSize) {\n      console.error(\n        \"THREE.BufferGeometryUtils: .mergeBufferAttributes() failed. BufferAttribute.itemSize must be consistent across matching attributes.\"\n      );\n      return null;\n    }\n    if (normalized === void 0)\n      normalized = attr.normalized;\n    if (normalized !== attr.normalized) {\n      console.error(\n        \"THREE.BufferGeometryUtils: .mergeBufferAttributes() failed. BufferAttribute.normalized must be consistent across matching attributes.\"\n      );\n      return null;\n    }\n    arrayLength += attr.array.length;\n  });\n  if (TypedArray && itemSize) {\n    const array = new TypedArray(arrayLength);\n    let offset = 0;\n    attributes.forEach((attr) => {\n      array.set(attr.array, offset);\n      offset += attr.array.length;\n    });\n    return new BufferAttribute(array, itemSize, normalized);\n  }\n};\nconst interleaveAttributes = (attributes) => {\n  let TypedArray = void 0;\n  let arrayLength = 0;\n  let stride = 0;\n  for (let i = 0, l = attributes.length; i < l; ++i) {\n    const attribute = attributes[i];\n    if (TypedArray === void 0)\n      TypedArray = attribute.array.constructor;\n    if (TypedArray !== attribute.array.constructor) {\n      console.error(\"AttributeBuffers of different types cannot be interleaved\");\n      return null;\n    }\n    arrayLength += attribute.array.length;\n    stride += attribute.itemSize;\n  }\n  const interleavedBuffer = new InterleavedBuffer(new TypedArray(arrayLength), stride);\n  let offset = 0;\n  const res = [];\n  const getters = [\"getX\", \"getY\", \"getZ\", \"getW\"];\n  const setters = [\"setX\", \"setY\", \"setZ\", \"setW\"];\n  for (let j = 0, l = attributes.length; j < l; j++) {\n    const attribute = attributes[j];\n    const itemSize = attribute.itemSize;\n    const count = attribute.count;\n    const iba = new InterleavedBufferAttribute(interleavedBuffer, itemSize, offset, attribute.normalized);\n    res.push(iba);\n    offset += itemSize;\n    for (let c = 0; c < count; c++) {\n      for (let k = 0; k < itemSize; k++) {\n        const set = getWithKey(iba, setters[k]);\n        const get = getWithKey(attribute, getters[k]);\n        set(c, get(c));\n      }\n    }\n  }\n  return res;\n};\nfunction estimateBytesUsed(geometry) {\n  let mem = 0;\n  for (let name in geometry.attributes) {\n    const attr = geometry.getAttribute(name);\n    mem += attr.count * attr.itemSize * attr.array.BYTES_PER_ELEMENT;\n  }\n  const indices = geometry.getIndex();\n  mem += indices ? indices.count * indices.itemSize * indices.array.BYTES_PER_ELEMENT : 0;\n  return mem;\n}\nfunction mergeVertices(geometry, tolerance = 1e-4) {\n  tolerance = Math.max(tolerance, Number.EPSILON);\n  const hashToIndex = {};\n  const indices = geometry.getIndex();\n  const positions = geometry.getAttribute(\"position\");\n  const vertexCount = indices ? indices.count : positions.count;\n  let nextIndex = 0;\n  const attributeNames = Object.keys(geometry.attributes);\n  const attrArrays = {};\n  const morphAttrsArrays = {};\n  const newIndices = [];\n  const getters = [\"getX\", \"getY\", \"getZ\", \"getW\"];\n  for (let i = 0, l = attributeNames.length; i < l; i++) {\n    const name = attributeNames[i];\n    attrArrays[name] = [];\n    const morphAttr = geometry.morphAttributes[name];\n    if (morphAttr) {\n      morphAttrsArrays[name] = new Array(morphAttr.length).fill(0).map(() => []);\n    }\n  }\n  const decimalShift = Math.log10(1 / tolerance);\n  const shiftMultiplier = Math.pow(10, decimalShift);\n  for (let i = 0; i < vertexCount; i++) {\n    const index = indices ? indices.getX(i) : i;\n    let hash = \"\";\n    for (let j = 0, l = attributeNames.length; j < l; j++) {\n      const name = attributeNames[j];\n      const attribute = geometry.getAttribute(name);\n      const itemSize = attribute.itemSize;\n      for (let k = 0; k < itemSize; k++) {\n        hash += `${~~(attribute[getters[k]](index) * shiftMultiplier)},`;\n      }\n    }\n    if (hash in hashToIndex) {\n      newIndices.push(hashToIndex[hash]);\n    } else {\n      for (let j = 0, l = attributeNames.length; j < l; j++) {\n        const name = attributeNames[j];\n        const attribute = geometry.getAttribute(name);\n        const morphAttr = geometry.morphAttributes[name];\n        const itemSize = attribute.itemSize;\n        const newarray = attrArrays[name];\n        const newMorphArrays = morphAttrsArrays[name];\n        for (let k = 0; k < itemSize; k++) {\n          const getterFunc = getters[k];\n          newarray.push(attribute[getterFunc](index));\n          if (morphAttr) {\n            for (let m = 0, ml = morphAttr.length; m < ml; m++) {\n              newMorphArrays[m].push(morphAttr[m][getterFunc](index));\n            }\n          }\n        }\n      }\n      hashToIndex[hash] = nextIndex;\n      newIndices.push(nextIndex);\n      nextIndex++;\n    }\n  }\n  const result = geometry.clone();\n  for (let i = 0, l = attributeNames.length; i < l; i++) {\n    const name = attributeNames[i];\n    const oldAttribute = geometry.getAttribute(name);\n    const buffer = new oldAttribute.array.constructor(attrArrays[name]);\n    const attribute = new BufferAttribute(buffer, oldAttribute.itemSize, oldAttribute.normalized);\n    result.setAttribute(name, attribute);\n    if (name in morphAttrsArrays) {\n      for (let j = 0; j < morphAttrsArrays[name].length; j++) {\n        const oldMorphAttribute = geometry.morphAttributes[name][j];\n        const buffer2 = new oldMorphAttribute.array.constructor(morphAttrsArrays[name][j]);\n        const morphAttribute = new BufferAttribute(buffer2, oldMorphAttribute.itemSize, oldMorphAttribute.normalized);\n        result.morphAttributes[name][j] = morphAttribute;\n      }\n    }\n  }\n  result.setIndex(newIndices);\n  return result;\n}\nfunction toTrianglesDrawMode(geometry, drawMode) {\n  if (drawMode === TrianglesDrawMode) {\n    console.warn(\"THREE.BufferGeometryUtils.toTrianglesDrawMode(): Geometry already defined as triangles.\");\n    return geometry;\n  }\n  if (drawMode === TriangleFanDrawMode || drawMode === TriangleStripDrawMode) {\n    let index = geometry.getIndex();\n    if (index === null) {\n      const indices = [];\n      const position = geometry.getAttribute(\"position\");\n      if (position !== void 0) {\n        for (let i = 0; i < position.count; i++) {\n          indices.push(i);\n        }\n        geometry.setIndex(indices);\n        index = geometry.getIndex();\n      } else {\n        console.error(\n          \"THREE.BufferGeometryUtils.toTrianglesDrawMode(): Undefined position attribute. Processing not possible.\"\n        );\n        return geometry;\n      }\n    }\n    const numberOfTriangles = index.count - 2;\n    const newIndices = [];\n    if (index) {\n      if (drawMode === TriangleFanDrawMode) {\n        for (let i = 1; i <= numberOfTriangles; i++) {\n          newIndices.push(index.getX(0));\n          newIndices.push(index.getX(i));\n          newIndices.push(index.getX(i + 1));\n        }\n      } else {\n        for (let i = 0; i < numberOfTriangles; i++) {\n          if (i % 2 === 0) {\n            newIndices.push(index.getX(i));\n            newIndices.push(index.getX(i + 1));\n            newIndices.push(index.getX(i + 2));\n          } else {\n            newIndices.push(index.getX(i + 2));\n            newIndices.push(index.getX(i + 1));\n            newIndices.push(index.getX(i));\n          }\n        }\n      }\n    }\n    if (newIndices.length / 3 !== numberOfTriangles) {\n      console.error(\"THREE.BufferGeometryUtils.toTrianglesDrawMode(): Unable to generate correct amount of triangles.\");\n    }\n    const newGeometry = geometry.clone();\n    newGeometry.setIndex(newIndices);\n    newGeometry.clearGroups();\n    return newGeometry;\n  } else {\n    console.error(\"THREE.BufferGeometryUtils.toTrianglesDrawMode(): Unknown draw mode:\", drawMode);\n    return geometry;\n  }\n}\nfunction computeMorphedAttributes(object) {\n  if (object.geometry.isBufferGeometry !== true) {\n    console.error(\"THREE.BufferGeometryUtils: Geometry is not of type BufferGeometry.\");\n    return null;\n  }\n  const _vA = new Vector3();\n  const _vB = new Vector3();\n  const _vC = new Vector3();\n  const _tempA = new Vector3();\n  const _tempB = new Vector3();\n  const _tempC = new Vector3();\n  const _morphA = new Vector3();\n  const _morphB = new Vector3();\n  const _morphC = new Vector3();\n  function _calculateMorphedAttributeData(object2, material2, attribute, morphAttribute, morphTargetsRelative2, a2, b2, c2, modifiedAttributeArray) {\n    _vA.fromBufferAttribute(attribute, a2);\n    _vB.fromBufferAttribute(attribute, b2);\n    _vC.fromBufferAttribute(attribute, c2);\n    const morphInfluences = object2.morphTargetInfluences;\n    if (\n      // @ts-ignore\n      material2.morphTargets && morphAttribute && morphInfluences\n    ) {\n      _morphA.set(0, 0, 0);\n      _morphB.set(0, 0, 0);\n      _morphC.set(0, 0, 0);\n      for (let i2 = 0, il2 = morphAttribute.length; i2 < il2; i2++) {\n        const influence = morphInfluences[i2];\n        const morph = morphAttribute[i2];\n        if (influence === 0)\n          continue;\n        _tempA.fromBufferAttribute(morph, a2);\n        _tempB.fromBufferAttribute(morph, b2);\n        _tempC.fromBufferAttribute(morph, c2);\n        if (morphTargetsRelative2) {\n          _morphA.addScaledVector(_tempA, influence);\n          _morphB.addScaledVector(_tempB, influence);\n          _morphC.addScaledVector(_tempC, influence);\n        } else {\n          _morphA.addScaledVector(_tempA.sub(_vA), influence);\n          _morphB.addScaledVector(_tempB.sub(_vB), influence);\n          _morphC.addScaledVector(_tempC.sub(_vC), influence);\n        }\n      }\n      _vA.add(_morphA);\n      _vB.add(_morphB);\n      _vC.add(_morphC);\n    }\n    if (object2.isSkinnedMesh) {\n      object2.boneTransform(a2, _vA);\n      object2.boneTransform(b2, _vB);\n      object2.boneTransform(c2, _vC);\n    }\n    modifiedAttributeArray[a2 * 3 + 0] = _vA.x;\n    modifiedAttributeArray[a2 * 3 + 1] = _vA.y;\n    modifiedAttributeArray[a2 * 3 + 2] = _vA.z;\n    modifiedAttributeArray[b2 * 3 + 0] = _vB.x;\n    modifiedAttributeArray[b2 * 3 + 1] = _vB.y;\n    modifiedAttributeArray[b2 * 3 + 2] = _vB.z;\n    modifiedAttributeArray[c2 * 3 + 0] = _vC.x;\n    modifiedAttributeArray[c2 * 3 + 1] = _vC.y;\n    modifiedAttributeArray[c2 * 3 + 2] = _vC.z;\n  }\n  const geometry = object.geometry;\n  const material = object.material;\n  let a, b, c;\n  const index = geometry.index;\n  const positionAttribute = geometry.attributes.position;\n  const morphPosition = geometry.morphAttributes.position;\n  const morphTargetsRelative = geometry.morphTargetsRelative;\n  const normalAttribute = geometry.attributes.normal;\n  const morphNormal = geometry.morphAttributes.position;\n  const groups = geometry.groups;\n  const drawRange = geometry.drawRange;\n  let i, j, il, jl;\n  let group, groupMaterial;\n  let start, end;\n  const modifiedPosition = new Float32Array(positionAttribute.count * positionAttribute.itemSize);\n  const modifiedNormal = new Float32Array(normalAttribute.count * normalAttribute.itemSize);\n  if (index !== null) {\n    if (Array.isArray(material)) {\n      for (i = 0, il = groups.length; i < il; i++) {\n        group = groups[i];\n        groupMaterial = material[group.materialIndex];\n        start = Math.max(group.start, drawRange.start);\n        end = Math.min(group.start + group.count, drawRange.start + drawRange.count);\n        for (j = start, jl = end; j < jl; j += 3) {\n          a = index.getX(j);\n          b = index.getX(j + 1);\n          c = index.getX(j + 2);\n          _calculateMorphedAttributeData(\n            object,\n            groupMaterial,\n            positionAttribute,\n            morphPosition,\n            morphTargetsRelative,\n            a,\n            b,\n            c,\n            modifiedPosition\n          );\n          _calculateMorphedAttributeData(\n            object,\n            groupMaterial,\n            normalAttribute,\n            morphNormal,\n            morphTargetsRelative,\n            a,\n            b,\n            c,\n            modifiedNormal\n          );\n        }\n      }\n    } else {\n      start = Math.max(0, drawRange.start);\n      end = Math.min(index.count, drawRange.start + drawRange.count);\n      for (i = start, il = end; i < il; i += 3) {\n        a = index.getX(i);\n        b = index.getX(i + 1);\n        c = index.getX(i + 2);\n        _calculateMorphedAttributeData(\n          object,\n          material,\n          positionAttribute,\n          morphPosition,\n          morphTargetsRelative,\n          a,\n          b,\n          c,\n          modifiedPosition\n        );\n        _calculateMorphedAttributeData(\n          object,\n          material,\n          normalAttribute,\n          morphNormal,\n          morphTargetsRelative,\n          a,\n          b,\n          c,\n          modifiedNormal\n        );\n      }\n    }\n  } else if (positionAttribute !== void 0) {\n    if (Array.isArray(material)) {\n      for (i = 0, il = groups.length; i < il; i++) {\n        group = groups[i];\n        groupMaterial = material[group.materialIndex];\n        start = Math.max(group.start, drawRange.start);\n        end = Math.min(group.start + group.count, drawRange.start + drawRange.count);\n        for (j = start, jl = end; j < jl; j += 3) {\n          a = j;\n          b = j + 1;\n          c = j + 2;\n          _calculateMorphedAttributeData(\n            object,\n            groupMaterial,\n            positionAttribute,\n            morphPosition,\n            morphTargetsRelative,\n            a,\n            b,\n            c,\n            modifiedPosition\n          );\n          _calculateMorphedAttributeData(\n            object,\n            groupMaterial,\n            normalAttribute,\n            morphNormal,\n            morphTargetsRelative,\n            a,\n            b,\n            c,\n            modifiedNormal\n          );\n        }\n      }\n    } else {\n      start = Math.max(0, drawRange.start);\n      end = Math.min(positionAttribute.count, drawRange.start + drawRange.count);\n      for (i = start, il = end; i < il; i += 3) {\n        a = i;\n        b = i + 1;\n        c = i + 2;\n        _calculateMorphedAttributeData(\n          object,\n          material,\n          positionAttribute,\n          morphPosition,\n          morphTargetsRelative,\n          a,\n          b,\n          c,\n          modifiedPosition\n        );\n        _calculateMorphedAttributeData(\n          object,\n          material,\n          normalAttribute,\n          morphNormal,\n          morphTargetsRelative,\n          a,\n          b,\n          c,\n          modifiedNormal\n        );\n      }\n    }\n  }\n  const morphedPositionAttribute = new Float32BufferAttribute(modifiedPosition, 3);\n  const morphedNormalAttribute = new Float32BufferAttribute(modifiedNormal, 3);\n  return {\n    positionAttribute,\n    normalAttribute,\n    morphedPositionAttribute,\n    morphedNormalAttribute\n  };\n}\nfunction toCreasedNormals(geometry, creaseAngle = Math.PI / 3) {\n  const creaseDot = Math.cos(creaseAngle);\n  const hashMultiplier = (1 + 1e-10) * 100;\n  const verts = [new Vector3(), new Vector3(), new Vector3()];\n  const tempVec1 = new Vector3();\n  const tempVec2 = new Vector3();\n  const tempNorm = new Vector3();\n  const tempNorm2 = new Vector3();\n  function hashVertex(v) {\n    const x = ~~(v.x * hashMultiplier);\n    const y = ~~(v.y * hashMultiplier);\n    const z = ~~(v.z * hashMultiplier);\n    return `${x},${y},${z}`;\n  }\n  const resultGeometry = geometry.index ? geometry.toNonIndexed() : geometry;\n  const posAttr = resultGeometry.attributes.position;\n  const vertexMap = {};\n  for (let i = 0, l = posAttr.count / 3; i < l; i++) {\n    const i3 = 3 * i;\n    const a = verts[0].fromBufferAttribute(posAttr, i3 + 0);\n    const b = verts[1].fromBufferAttribute(posAttr, i3 + 1);\n    const c = verts[2].fromBufferAttribute(posAttr, i3 + 2);\n    tempVec1.subVectors(c, b);\n    tempVec2.subVectors(a, b);\n    const normal = new Vector3().crossVectors(tempVec1, tempVec2).normalize();\n    for (let n = 0; n < 3; n++) {\n      const vert = verts[n];\n      const hash = hashVertex(vert);\n      if (!(hash in vertexMap)) {\n        vertexMap[hash] = [];\n      }\n      vertexMap[hash].push(normal);\n    }\n  }\n  const normalArray = new Float32Array(posAttr.count * 3);\n  const normAttr = new BufferAttribute(normalArray, 3, false);\n  for (let i = 0, l = posAttr.count / 3; i < l; i++) {\n    const i3 = 3 * i;\n    const a = verts[0].fromBufferAttribute(posAttr, i3 + 0);\n    const b = verts[1].fromBufferAttribute(posAttr, i3 + 1);\n    const c = verts[2].fromBufferAttribute(posAttr, i3 + 2);\n    tempVec1.subVectors(c, b);\n    tempVec2.subVectors(a, b);\n    tempNorm.crossVectors(tempVec1, tempVec2).normalize();\n    for (let n = 0; n < 3; n++) {\n      const vert = verts[n];\n      const hash = hashVertex(vert);\n      const otherNormals = vertexMap[hash];\n      tempNorm2.set(0, 0, 0);\n      for (let k = 0, lk = otherNormals.length; k < lk; k++) {\n        const otherNorm = otherNormals[k];\n        if (tempNorm.dot(otherNorm) > creaseDot) {\n          tempNorm2.add(otherNorm);\n        }\n      }\n      tempNorm2.normalize();\n      normAttr.setXYZ(i3 + n, tempNorm2.x, tempNorm2.y, tempNorm2.z);\n    }\n  }\n  resultGeometry.setAttribute(\"normal\", normAttr);\n  return resultGeometry;\n}\nexport {\n  computeMorphedAttributes,\n  estimateBytesUsed,\n  interleaveAttributes,\n  mergeBufferAttributes,\n  mergeBufferGeometries,\n  mergeVertices,\n  toCreasedNormals,\n  toTrianglesDrawMode\n};\n//# sourceMappingURL=BufferGeometryUtils.js.map\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 8034, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8040, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/utils/SceneUtils.js"],"sourcesContent":["import { Group, Mesh } from \"three\";\nconst SceneUtils = {\n  createMeshesFromInstancedMesh: function(instancedMesh) {\n    const group = new Group();\n    const count = instancedMesh.count;\n    const geometry = instancedMesh.geometry;\n    const material = instancedMesh.material;\n    for (let i = 0; i < count; i++) {\n      const mesh = new Mesh(geometry, material);\n      instancedMesh.getMatrixAt(i, mesh.matrix);\n      mesh.matrix.decompose(mesh.position, mesh.quaternion, mesh.scale);\n      group.add(mesh);\n    }\n    group.copy(instancedMesh);\n    group.updateMatrixWorld();\n    return group;\n  },\n  createMultiMaterialObject: function(geometry, materials) {\n    const group = new Group();\n    for (let i = 0, l = materials.length; i < l; i++) {\n      group.add(new Mesh(geometry, materials[i]));\n    }\n    return group;\n  },\n  detach: function(child, parent, scene) {\n    console.warn(\"THREE.SceneUtils: detach() has been deprecated. Use scene.attach( child ) instead.\");\n    scene.attach(child);\n  },\n  attach: function(child, scene, parent) {\n    console.warn(\"THREE.SceneUtils: attach() has been deprecated. Use parent.attach( child ) instead.\");\n    parent.attach(child);\n  }\n};\nexport {\n  SceneUtils\n};\n//# sourceMappingURL=SceneUtils.js.map\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,aAAa;IACjB,+BAA+B,SAAS,aAAa;QACnD,MAAM,QAAQ,IAAI,kJAAA,CAAA,QAAK;QACvB,MAAM,QAAQ,cAAc,KAAK;QACjC,MAAM,WAAW,cAAc,QAAQ;QACvC,MAAM,WAAW,cAAc,QAAQ;QACvC,IAAK,IAAI,IAAI,GAAG,IAAI,OAAO,IAAK;YAC9B,MAAM,OAAO,IAAI,kJAAA,CAAA,OAAI,CAAC,UAAU;YAChC,cAAc,WAAW,CAAC,GAAG,KAAK,MAAM;YACxC,KAAK,MAAM,CAAC,SAAS,CAAC,KAAK,QAAQ,EAAE,KAAK,UAAU,EAAE,KAAK,KAAK;YAChE,MAAM,GAAG,CAAC;QACZ;QACA,MAAM,IAAI,CAAC;QACX,MAAM,iBAAiB;QACvB,OAAO;IACT;IACA,2BAA2B,SAAS,QAAQ,EAAE,SAAS;QACrD,MAAM,QAAQ,IAAI,kJAAA,CAAA,QAAK;QACvB,IAAK,IAAI,IAAI,GAAG,IAAI,UAAU,MAAM,EAAE,IAAI,GAAG,IAAK;YAChD,MAAM,GAAG,CAAC,IAAI,kJAAA,CAAA,OAAI,CAAC,UAAU,SAAS,CAAC,EAAE;QAC3C;QACA,OAAO;IACT;IACA,QAAQ,SAAS,KAAK,EAAE,MAAM,EAAE,KAAK;QACnC,QAAQ,IAAI,CAAC;QACb,MAAM,MAAM,CAAC;IACf;IACA,QAAQ,SAAS,KAAK,EAAE,KAAK,EAAE,MAAM;QACnC,QAAQ,IAAI,CAAC;QACb,OAAO,MAAM,CAAC;IAChB;AACF;;CAIA,sCAAsC","ignoreList":[0]}},
    {"offset": {"line": 8079, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8085, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/utils/GeometryUtils.js"],"sourcesContent":["import { Vector3 } from \"three\";\nconst hilbert2D = (center = new Vector3(0, 0, 0), size = 10, iterations = 1, v0 = 0, v1 = 1, v2 = 2, v3 = 3) => {\n  const half = size / 2;\n  const vec_s = [\n    new Vector3(center.x - half, center.y, center.z - half),\n    new Vector3(center.x - half, center.y, center.z + half),\n    new Vector3(center.x + half, center.y, center.z + half),\n    new Vector3(center.x + half, center.y, center.z - half)\n  ];\n  const vec = [vec_s[v0], vec_s[v1], vec_s[v2], vec_s[v3]];\n  if (0 <= --iterations) {\n    const tmp = [];\n    Array.prototype.push.apply(tmp, hilbert2D(vec[0], half, iterations, v0, v3, v2, v1));\n    Array.prototype.push.apply(tmp, hilbert2D(vec[1], half, iterations, v0, v1, v2, v3));\n    Array.prototype.push.apply(tmp, hilbert2D(vec[2], half, iterations, v0, v1, v2, v3));\n    Array.prototype.push.apply(tmp, hilbert2D(vec[3], half, iterations, v2, v1, v0, v3));\n    return tmp;\n  }\n  return vec;\n};\nconst hilbert3D = (center = new Vector3(0, 0, 0), size = 10, iterations = 1, v0 = 0, v1 = 1, v2 = 2, v3 = 3, v4 = 4, v5 = 5, v6 = 6, v7 = 7) => {\n  const half = size / 2;\n  const vec_s = [\n    new Vector3(center.x - half, center.y + half, center.z - half),\n    new Vector3(center.x - half, center.y + half, center.z + half),\n    new Vector3(center.x - half, center.y - half, center.z + half),\n    new Vector3(center.x - half, center.y - half, center.z - half),\n    new Vector3(center.x + half, center.y - half, center.z - half),\n    new Vector3(center.x + half, center.y - half, center.z + half),\n    new Vector3(center.x + half, center.y + half, center.z + half),\n    new Vector3(center.x + half, center.y + half, center.z - half)\n  ];\n  const vec = [vec_s[v0], vec_s[v1], vec_s[v2], vec_s[v3], vec_s[v4], vec_s[v5], vec_s[v6], vec_s[v7]];\n  if (--iterations >= 0) {\n    const tmp = [];\n    Array.prototype.push.apply(tmp, hilbert3D(vec[0], half, iterations, v0, v3, v4, v7, v6, v5, v2, v1));\n    Array.prototype.push.apply(tmp, hilbert3D(vec[1], half, iterations, v0, v7, v6, v1, v2, v5, v4, v3));\n    Array.prototype.push.apply(tmp, hilbert3D(vec[2], half, iterations, v0, v7, v6, v1, v2, v5, v4, v3));\n    Array.prototype.push.apply(tmp, hilbert3D(vec[3], half, iterations, v2, v3, v0, v1, v6, v7, v4, v5));\n    Array.prototype.push.apply(tmp, hilbert3D(vec[4], half, iterations, v2, v3, v0, v1, v6, v7, v4, v5));\n    Array.prototype.push.apply(tmp, hilbert3D(vec[5], half, iterations, v4, v3, v2, v5, v6, v1, v0, v7));\n    Array.prototype.push.apply(tmp, hilbert3D(vec[6], half, iterations, v4, v3, v2, v5, v6, v1, v0, v7));\n    Array.prototype.push.apply(tmp, hilbert3D(vec[7], half, iterations, v6, v5, v2, v1, v0, v3, v4, v7));\n    return tmp;\n  }\n  return vec;\n};\nconst gosper = (size = 1) => {\n  function fractalize(config) {\n    let output = \"\";\n    let input = config.axiom;\n    for (let i = 0, il = config.steps; 0 <= il ? i < il : i > il; 0 <= il ? i++ : i--) {\n      output = \"\";\n      for (let j = 0, jl = input.length; j < jl; j++) {\n        const char = input[j];\n        if (char in config.rules) {\n          output += config.rules[char];\n        } else {\n          output += char;\n        }\n      }\n      input = output;\n    }\n    return output;\n  }\n  function toPoints(config) {\n    let currX = 0;\n    let currY = 0;\n    let angle = 0;\n    const path = [0, 0, 0];\n    const fractal = config.fractal;\n    for (let i = 0, l = fractal.length; i < l; i++) {\n      const char = fractal[i];\n      if (char === \"+\") {\n        angle += config.angle;\n      } else if (char === \"-\") {\n        angle -= config.angle;\n      } else if (char === \"F\") {\n        currX += config.size * Math.cos(angle);\n        currY += -config.size * Math.sin(angle);\n        path.push(currX, currY, 0);\n      }\n    }\n    return path;\n  }\n  const gosper2 = fractalize({\n    axiom: \"A\",\n    steps: 4,\n    rules: {\n      A: \"A+BF++BF-FA--FAFA-BF+\",\n      B: \"-FA+BFBF++BF+FA--FA-B\"\n    }\n  });\n  const points = toPoints({\n    fractal: gosper2,\n    size,\n    angle: Math.PI / 3\n    // 60 degrees\n  });\n  return points;\n};\nconst GeometryUtils = {\n  hilbert3D,\n  gosper,\n  hilbert2D\n};\nexport {\n  GeometryUtils\n};\n//# sourceMappingURL=GeometryUtils.js.map\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 8214, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8220, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/utils/RoughnessMipmapper.js"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nimport { MathUtils, WebGLRenderTarget, Vector2, Mesh, PlaneGeometry, OrthographicCamera, RawShaderMaterial, NoBlending } from \"three\";\nvar _mipmapMaterial = /* @__PURE__ */ _getMipmapMaterial();\nvar _mesh = /* @__PURE__ */ new Mesh(/* @__PURE__ */ new PlaneGeometry(2, 2), _mipmapMaterial);\nvar _flatCamera = /* @__PURE__ */ new OrthographicCamera(0, 1, 0, 1, 0, 1);\nvar _tempTarget = null;\nclass RoughnessMipmapper {\n  constructor(renderer) {\n    __publicField(this, \"generateMipmaps\", function(material) {\n      if (\"roughnessMap\" in material === false)\n        return;\n      var { roughnessMap, normalMap } = material;\n      if (roughnessMap === null || normalMap === null || !roughnessMap.generateMipmaps || material.userData.roughnessUpdated) {\n        return;\n      }\n      material.userData.roughnessUpdated = true;\n      var width = Math.max(roughnessMap.image.width, normalMap.image.width);\n      var height = Math.max(roughnessMap.image.height, normalMap.image.height);\n      if (!MathUtils.isPowerOfTwo(width) || !MathUtils.isPowerOfTwo(height))\n        return;\n      var oldTarget = this._renderer.getRenderTarget();\n      var autoClear = this._renderer.autoClear;\n      this._renderer.autoClear = false;\n      if (_tempTarget === null || _tempTarget.width !== width || _tempTarget.height !== height) {\n        if (_tempTarget !== null)\n          _tempTarget.dispose();\n        _tempTarget = new WebGLRenderTarget(width, height, {\n          depthBuffer: false\n        });\n        _tempTarget.scissorTest = true;\n      }\n      if (width !== roughnessMap.image.width || height !== roughnessMap.image.height) {\n        var params = {\n          wrapS: roughnessMap.wrapS,\n          wrapT: roughnessMap.wrapT,\n          magFilter: roughnessMap.magFilter,\n          minFilter: roughnessMap.minFilter,\n          depthBuffer: false\n        };\n        var newRoughnessTarget = new WebGLRenderTarget(width, height, params);\n        newRoughnessTarget.texture.generateMipmaps = true;\n        this._renderer.setRenderTarget(newRoughnessTarget);\n        material.roughnessMap = newRoughnessTarget.texture;\n        if (material.metalnessMap == roughnessMap)\n          material.metalnessMap = material.roughnessMap;\n        if (material.aoMap == roughnessMap)\n          material.aoMap = material.roughnessMap;\n      }\n      _mipmapMaterial.uniforms.roughnessMap.value = roughnessMap;\n      _mipmapMaterial.uniforms.normalMap.value = normalMap;\n      var position = new Vector2(0, 0);\n      var texelSize = _mipmapMaterial.uniforms.texelSize.value;\n      for (let mip = 0; width >= 1 && height >= 1; ++mip, width /= 2, height /= 2) {\n        texelSize.set(1 / width, 1 / height);\n        if (mip == 0)\n          texelSize.set(0, 0);\n        _tempTarget.viewport.set(position.x, position.y, width, height);\n        _tempTarget.scissor.set(position.x, position.y, width, height);\n        this._renderer.setRenderTarget(_tempTarget);\n        this._renderer.render(_mesh, _flatCamera);\n        this._renderer.copyFramebufferToTexture(position, material.roughnessMap, mip);\n        _mipmapMaterial.uniforms.roughnessMap.value = material.roughnessMap;\n      }\n      if (roughnessMap !== material.roughnessMap)\n        roughnessMap.dispose();\n      this._renderer.setRenderTarget(oldTarget);\n      this._renderer.autoClear = autoClear;\n    });\n    __publicField(this, \"dispose\", function() {\n      _mipmapMaterial.dispose();\n      _mesh.geometry.dispose();\n      if (_tempTarget != null)\n        _tempTarget.dispose();\n    });\n    this._renderer = renderer;\n    this._renderer.compile(_mesh, _flatCamera);\n  }\n}\nfunction _getMipmapMaterial() {\n  var shaderMaterial = new RawShaderMaterial({\n    uniforms: {\n      roughnessMap: { value: null },\n      normalMap: { value: null },\n      texelSize: { value: new Vector2(1, 1) }\n    },\n    vertexShader: (\n      /* glsl */\n      `\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tattribute vec3 position;\n\t\t\tattribute vec2 uv;\n\n\t\t\tvarying vec2 vUv;\n\n\t\t\tvoid main() {\n\n\t\t\t\tvUv = uv;\n\n\t\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t\t}\n\t\t`\n    ),\n    fragmentShader: (\n      /* glsl */\n      `\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec2 vUv;\n\n\t\t\tuniform sampler2D roughnessMap;\n\t\t\tuniform sampler2D normalMap;\n\t\t\tuniform vec2 texelSize;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\n\t\t\tvec4 envMapTexelToLinear( vec4 a ) { return a; }\n\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tfloat roughnessToVariance( float roughness ) {\n\n\t\t\t\tfloat variance = 0.0;\n\n\t\t\t\tif ( roughness >= r1 ) {\n\n\t\t\t\t\tvariance = ( r0 - roughness ) * ( v1 - v0 ) / ( r0 - r1 ) + v0;\n\n\t\t\t\t} else if ( roughness >= r4 ) {\n\n\t\t\t\t\tvariance = ( r1 - roughness ) * ( v4 - v1 ) / ( r1 - r4 ) + v1;\n\n\t\t\t\t} else if ( roughness >= r5 ) {\n\n\t\t\t\t\tvariance = ( r4 - roughness ) * ( v5 - v4 ) / ( r4 - r5 ) + v4;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfloat roughness2 = roughness * roughness;\n\n\t\t\t\t\tvariance = 1.79 * roughness2 * roughness2;\n\n\t\t\t\t}\n\n\t\t\t\treturn variance;\n\n\t\t\t}\n\n\t\t\tfloat varianceToRoughness( float variance ) {\n\n\t\t\t\tfloat roughness = 0.0;\n\n\t\t\t\tif ( variance >= v1 ) {\n\n\t\t\t\t\troughness = ( v0 - variance ) * ( r1 - r0 ) / ( v0 - v1 ) + r0;\n\n\t\t\t\t} else if ( variance >= v4 ) {\n\n\t\t\t\t\troughness = ( v1 - variance ) * ( r4 - r1 ) / ( v1 - v4 ) + r1;\n\n\t\t\t\t} else if ( variance >= v5 ) {\n\n\t\t\t\t\troughness = ( v4 - variance ) * ( r5 - r4 ) / ( v4 - v5 ) + r4;\n\n\t\t\t\t} else {\n\n\t\t\t\t\troughness = pow( 0.559 * variance, 0.25 ); // 0.559 = 1.0 / 1.79\n\n\t\t\t\t}\n\n\t\t\t\treturn roughness;\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = texture2D( roughnessMap, vUv, - 1.0 );\n\n\t\t\t\tif ( texelSize.x == 0.0 ) return;\n\n\t\t\t\tfloat roughness = gl_FragColor.g;\n\n\t\t\t\tfloat variance = roughnessToVariance( roughness );\n\n\t\t\t\tvec3 avgNormal;\n\n\t\t\t\tfor ( float x = - 1.0; x < 2.0; x += 2.0 ) {\n\n\t\t\t\t\tfor ( float y = - 1.0; y < 2.0; y += 2.0 ) {\n\n\t\t\t\t\t\tvec2 uv = vUv + vec2( x, y ) * 0.25 * texelSize;\n\n\t\t\t\t\t\tavgNormal += normalize( texture2D( normalMap, uv, - 1.0 ).xyz - 0.5 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvariance += 1.0 - 0.25 * length( avgNormal );\n\n\t\t\t\tgl_FragColor.g = varianceToRoughness( variance );\n\n\t\t\t}\n\t\t`\n    ),\n    blending: NoBlending,\n    depthTest: false,\n    depthWrite: false\n  });\n  shaderMaterial.type = \"RoughnessMipmapper\";\n  return shaderMaterial;\n}\nexport {\n  RoughnessMipmapper\n};\n//# sourceMappingURL=RoughnessMipmapper.js.map\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 8443, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8449, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/utils/SkeletonUtils.js"],"sourcesContent":["import { Vector3, Quaternion, Matrix4, AnimationMixer, VectorKeyframeTrack, QuaternionKeyframeTrack, AnimationClip, SkeletonHelper } from \"three\";\nfunction retarget(target, source, options = {}) {\n  const pos = new Vector3(), quat = new Quaternion(), scale = new Vector3(), bindBoneMatrix = new Matrix4(), relativeMatrix = new Matrix4(), globalMatrix = new Matrix4();\n  options.preserveMatrix = options.preserveMatrix !== void 0 ? options.preserveMatrix : true;\n  options.preservePosition = options.preservePosition !== void 0 ? options.preservePosition : true;\n  options.preserveHipPosition = options.preserveHipPosition !== void 0 ? options.preserveHipPosition : false;\n  options.useTargetMatrix = options.useTargetMatrix !== void 0 ? options.useTargetMatrix : false;\n  options.hip = options.hip !== void 0 ? options.hip : \"hip\";\n  options.names = options.names || {};\n  const sourceBones = source.isObject3D ? source.skeleton.bones : getBones(source), bones = target.isObject3D ? target.skeleton.bones : getBones(target);\n  let bindBones, bone, name, boneTo, bonesPosition;\n  if (target.isObject3D) {\n    target.skeleton.pose();\n  } else {\n    options.useTargetMatrix = true;\n    options.preserveMatrix = false;\n  }\n  if (options.preservePosition) {\n    bonesPosition = [];\n    for (let i = 0; i < bones.length; i++) {\n      bonesPosition.push(bones[i].position.clone());\n    }\n  }\n  if (options.preserveMatrix) {\n    target.updateMatrixWorld();\n    target.matrixWorld.identity();\n    for (let i = 0; i < target.children.length; ++i) {\n      target.children[i].updateMatrixWorld(true);\n    }\n  }\n  if (options.offsets) {\n    bindBones = [];\n    for (let i = 0; i < bones.length; ++i) {\n      bone = bones[i];\n      name = options.names[bone.name] || bone.name;\n      if (options.offsets[name]) {\n        bone.matrix.multiply(options.offsets[name]);\n        bone.matrix.decompose(bone.position, bone.quaternion, bone.scale);\n        bone.updateMatrixWorld();\n      }\n      bindBones.push(bone.matrixWorld.clone());\n    }\n  }\n  for (let i = 0; i < bones.length; ++i) {\n    bone = bones[i];\n    name = options.names[bone.name] || bone.name;\n    boneTo = getBoneByName(name, sourceBones);\n    globalMatrix.copy(bone.matrixWorld);\n    if (boneTo) {\n      boneTo.updateMatrixWorld();\n      if (options.useTargetMatrix) {\n        relativeMatrix.copy(boneTo.matrixWorld);\n      } else {\n        relativeMatrix.copy(target.matrixWorld).invert();\n        relativeMatrix.multiply(boneTo.matrixWorld);\n      }\n      scale.setFromMatrixScale(relativeMatrix);\n      relativeMatrix.scale(scale.set(1 / scale.x, 1 / scale.y, 1 / scale.z));\n      globalMatrix.makeRotationFromQuaternion(quat.setFromRotationMatrix(relativeMatrix));\n      if (target.isObject3D) {\n        const boneIndex = bones.indexOf(bone), wBindMatrix = bindBones ? bindBones[boneIndex] : bindBoneMatrix.copy(target.skeleton.boneInverses[boneIndex]).invert();\n        globalMatrix.multiply(wBindMatrix);\n      }\n      globalMatrix.copyPosition(relativeMatrix);\n    }\n    if (bone.parent && bone.parent.isBone) {\n      bone.matrix.copy(bone.parent.matrixWorld).invert();\n      bone.matrix.multiply(globalMatrix);\n    } else {\n      bone.matrix.copy(globalMatrix);\n    }\n    if (options.preserveHipPosition && name === options.hip) {\n      bone.matrix.setPosition(pos.set(0, bone.position.y, 0));\n    }\n    bone.matrix.decompose(bone.position, bone.quaternion, bone.scale);\n    bone.updateMatrixWorld();\n  }\n  if (options.preservePosition) {\n    for (let i = 0; i < bones.length; ++i) {\n      bone = bones[i];\n      name = options.names[bone.name] || bone.name;\n      if (name !== options.hip) {\n        bone.position.copy(bonesPosition[i]);\n      }\n    }\n  }\n  if (options.preserveMatrix) {\n    target.updateMatrixWorld(true);\n  }\n}\nfunction retargetClip(target, source, clip, options = {}) {\n  options.useFirstFramePosition = options.useFirstFramePosition !== void 0 ? options.useFirstFramePosition : false;\n  options.fps = options.fps !== void 0 ? options.fps : 30;\n  options.names = options.names || [];\n  if (!source.isObject3D) {\n    source = getHelperFromSkeleton(source);\n  }\n  const numFrames = Math.round(clip.duration * (options.fps / 1e3) * 1e3), delta = 1 / options.fps, convertedTracks = [], mixer = new AnimationMixer(source), bones = getBones(target.skeleton), boneDatas = [];\n  let positionOffset, bone, boneTo, boneData, name;\n  mixer.clipAction(clip).play();\n  mixer.update(0);\n  source.updateMatrixWorld();\n  for (let i = 0; i < numFrames; ++i) {\n    const time = i * delta;\n    retarget(target, source, options);\n    for (let j = 0; j < bones.length; ++j) {\n      name = options.names[bones[j].name] || bones[j].name;\n      boneTo = getBoneByName(name, source.skeleton);\n      if (boneTo) {\n        bone = bones[j];\n        boneData = boneDatas[j] = boneDatas[j] || { bone };\n        if (options.hip === name) {\n          if (!boneData.pos) {\n            boneData.pos = {\n              times: new Float32Array(numFrames),\n              values: new Float32Array(numFrames * 3)\n            };\n          }\n          if (options.useFirstFramePosition) {\n            if (i === 0) {\n              positionOffset = bone.position.clone();\n            }\n            bone.position.sub(positionOffset);\n          }\n          boneData.pos.times[i] = time;\n          bone.position.toArray(boneData.pos.values, i * 3);\n        }\n        if (!boneData.quat) {\n          boneData.quat = {\n            times: new Float32Array(numFrames),\n            values: new Float32Array(numFrames * 4)\n          };\n        }\n        boneData.quat.times[i] = time;\n        bone.quaternion.toArray(boneData.quat.values, i * 4);\n      }\n    }\n    mixer.update(delta);\n    source.updateMatrixWorld();\n  }\n  for (let i = 0; i < boneDatas.length; ++i) {\n    boneData = boneDatas[i];\n    if (boneData) {\n      if (boneData.pos) {\n        convertedTracks.push(\n          new VectorKeyframeTrack(\n            \".bones[\" + boneData.bone.name + \"].position\",\n            boneData.pos.times,\n            boneData.pos.values\n          )\n        );\n      }\n      convertedTracks.push(\n        new QuaternionKeyframeTrack(\n          \".bones[\" + boneData.bone.name + \"].quaternion\",\n          boneData.quat.times,\n          boneData.quat.values\n        )\n      );\n    }\n  }\n  mixer.uncacheAction(clip);\n  return new AnimationClip(clip.name, -1, convertedTracks);\n}\nfunction clone(source) {\n  const sourceLookup = /* @__PURE__ */ new Map();\n  const cloneLookup = /* @__PURE__ */ new Map();\n  const clone2 = source.clone();\n  parallelTraverse(source, clone2, function(sourceNode, clonedNode) {\n    sourceLookup.set(clonedNode, sourceNode);\n    cloneLookup.set(sourceNode, clonedNode);\n  });\n  clone2.traverse(function(node) {\n    if (!node.isSkinnedMesh)\n      return;\n    const clonedMesh = node;\n    const sourceMesh = sourceLookup.get(node);\n    const sourceBones = sourceMesh.skeleton.bones;\n    clonedMesh.skeleton = sourceMesh.skeleton.clone();\n    clonedMesh.bindMatrix.copy(sourceMesh.bindMatrix);\n    clonedMesh.skeleton.bones = sourceBones.map(function(bone) {\n      return cloneLookup.get(bone);\n    });\n    clonedMesh.bind(clonedMesh.skeleton, clonedMesh.bindMatrix);\n  });\n  return clone2;\n}\nfunction getBoneByName(name, skeleton) {\n  for (let i = 0, bones = getBones(skeleton); i < bones.length; i++) {\n    if (name === bones[i].name)\n      return bones[i];\n  }\n}\nfunction getBones(skeleton) {\n  return Array.isArray(skeleton) ? skeleton : skeleton.bones;\n}\nfunction getHelperFromSkeleton(skeleton) {\n  const source = new SkeletonHelper(skeleton.bones[0]);\n  source.skeleton = skeleton;\n  return source;\n}\nfunction parallelTraverse(a, b, callback) {\n  callback(a, b);\n  for (let i = 0; i < a.children.length; i++) {\n    parallelTraverse(a.children[i], b.children[i], callback);\n  }\n}\nconst SkeletonUtils = { retarget, retargetClip, clone };\nexport {\n  SkeletonUtils\n};\n//# sourceMappingURL=SkeletonUtils.js.map\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 8655, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8661, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/utils/ShadowMapViewer.js"],"sourcesContent":["import { OrthographicCamera, Scene, UniformsUtils, ShaderMaterial, PlaneGeometry, Mesh, Texture, LinearFilter, MeshBasicMaterial, DoubleSide } from \"three\";\nimport { UnpackDepthRGBAShader } from \"../shaders/UnpackDepthRGBAShader.js\";\nclass ShadowMapViewer {\n  constructor(light) {\n    const scope = this;\n    const doRenderLabel = light.name !== void 0 && light.name !== \"\";\n    let userAutoClearSetting;\n    const frame = {\n      x: 10,\n      y: 10,\n      width: 256,\n      height: 256\n    };\n    const camera = new OrthographicCamera(\n      window.innerWidth / -2,\n      window.innerWidth / 2,\n      window.innerHeight / 2,\n      window.innerHeight / -2,\n      1,\n      10\n    );\n    camera.position.set(0, 0, 2);\n    const scene = new Scene();\n    const shader = UnpackDepthRGBAShader;\n    const uniforms = UniformsUtils.clone(shader.uniforms);\n    const material = new ShaderMaterial({\n      uniforms,\n      vertexShader: shader.vertexShader,\n      fragmentShader: shader.fragmentShader\n    });\n    const plane = new PlaneGeometry(frame.width, frame.height);\n    const mesh = new Mesh(plane, material);\n    scene.add(mesh);\n    let labelCanvas, labelMesh;\n    if (doRenderLabel) {\n      labelCanvas = document.createElement(\"canvas\");\n      const context = labelCanvas.getContext(\"2d\");\n      context.font = \"Bold 20px Arial\";\n      const labelWidth = context.measureText(light.name).width;\n      labelCanvas.width = labelWidth;\n      labelCanvas.height = 25;\n      context.font = \"Bold 20px Arial\";\n      context.fillStyle = \"rgba( 255, 0, 0, 1 )\";\n      context.fillText(light.name, 0, 20);\n      const labelTexture = new Texture(labelCanvas);\n      labelTexture.magFilter = LinearFilter;\n      labelTexture.minFilter = LinearFilter;\n      labelTexture.needsUpdate = true;\n      const labelMaterial = new MeshBasicMaterial({ map: labelTexture, side: DoubleSide });\n      labelMaterial.transparent = true;\n      const labelPlane = new PlaneGeometry(labelCanvas.width, labelCanvas.height);\n      labelMesh = new Mesh(labelPlane, labelMaterial);\n      scene.add(labelMesh);\n    }\n    function resetPosition() {\n      scope.position.set(scope.position.x, scope.position.y);\n    }\n    this.enabled = true;\n    this.size = {\n      width: frame.width,\n      height: frame.height,\n      set: function(width, height) {\n        this.width = width;\n        this.height = height;\n        mesh.scale.set(this.width / frame.width, this.height / frame.height, 1);\n        resetPosition();\n      }\n    };\n    this.position = {\n      x: frame.x,\n      y: frame.y,\n      set: function(x, y) {\n        this.x = x;\n        this.y = y;\n        const width = scope.size.width;\n        const height = scope.size.height;\n        mesh.position.set(-window.innerWidth / 2 + width / 2 + this.x, window.innerHeight / 2 - height / 2 - this.y, 0);\n        if (doRenderLabel)\n          labelMesh.position.set(mesh.position.x, mesh.position.y - scope.size.height / 2 + labelCanvas.height / 2, 0);\n      }\n    };\n    this.render = function(renderer) {\n      if (this.enabled) {\n        uniforms.tDiffuse.value = light.shadow.map.texture;\n        userAutoClearSetting = renderer.autoClear;\n        renderer.autoClear = false;\n        renderer.clearDepth();\n        renderer.render(scene, camera);\n        renderer.autoClear = userAutoClearSetting;\n      }\n    };\n    this.updateForWindowResize = function() {\n      if (this.enabled) {\n        camera.left = window.innerWidth / -2;\n        camera.right = window.innerWidth / 2;\n        camera.top = window.innerHeight / 2;\n        camera.bottom = window.innerHeight / -2;\n        camera.updateProjectionMatrix();\n        this.update();\n      }\n    };\n    this.update = function() {\n      this.position.set(this.position.x, this.position.y);\n      this.size.set(this.size.width, this.size.height);\n    };\n    this.update();\n  }\n}\nexport {\n  ShadowMapViewer\n};\n//# sourceMappingURL=ShadowMapViewer.js.map\n"],"names":[],"mappings":";;;;;;;;AAAA;;;AAEA,MAAM;IACJ,YAAY,KAAK,CAAE;QACjB,MAAM,QAAQ,IAAI;QAClB,MAAM,gBAAgB,MAAM,IAAI,KAAK,KAAK,KAAK,MAAM,IAAI,KAAK;QAC9D,IAAI;QACJ,MAAM,QAAQ;YACZ,GAAG;YACH,GAAG;YACH,OAAO;YACP,QAAQ;QACV;QACA,MAAM,SAAS,IAAI,kJAAA,CAAA,qBAAkB,CACnC,OAAO,UAAU,GAAG,CAAC,GACrB,OAAO,UAAU,GAAG,GACpB,OAAO,WAAW,GAAG,GACrB,OAAO,WAAW,GAAG,CAAC,GACtB,GACA;QAEF,OAAO,QAAQ,CAAC,GAAG,CAAC,GAAG,GAAG;QAC1B,MAAM,QAAQ,IAAI,kJAAA,CAAA,QAAK;QACvB,MAAM,SAAS;QACf,MAAM,WAAW,kJAAA,CAAA,gBAAa,CAAC,KAAK,CAAC,OAAO,QAAQ;QACpD,MAAM,WAAW,IAAI,kJAAA,CAAA,iBAAc,CAAC;YAClC;YACA,cAAc,OAAO,YAAY;YACjC,gBAAgB,OAAO,cAAc;QACvC;QACA,MAAM,QAAQ,IAAI,kJAAA,CAAA,gBAAa,CAAC,MAAM,KAAK,EAAE,MAAM,MAAM;QACzD,MAAM,OAAO,IAAI,kJAAA,CAAA,OAAI,CAAC,OAAO;QAC7B,MAAM,GAAG,CAAC;QACV,IAAI,aAAa;QACjB,IAAI,eAAe;YACjB,cAAc,SAAS,aAAa,CAAC;YACrC,MAAM,UAAU,YAAY,UAAU,CAAC;YACvC,QAAQ,IAAI,GAAG;YACf,MAAM,aAAa,QAAQ,WAAW,CAAC,MAAM,IAAI,EAAE,KAAK;YACxD,YAAY,KAAK,GAAG;YACpB,YAAY,MAAM,GAAG;YACrB,QAAQ,IAAI,GAAG;YACf,QAAQ,SAAS,GAAG;YACpB,QAAQ,QAAQ,CAAC,MAAM,IAAI,EAAE,GAAG;YAChC,MAAM,eAAe,IAAI,kJAAA,CAAA,UAAO,CAAC;YACjC,aAAa,SAAS,GAAG,kJAAA,CAAA,eAAY;YACrC,aAAa,SAAS,GAAG,kJAAA,CAAA,eAAY;YACrC,aAAa,WAAW,GAAG;YAC3B,MAAM,gBAAgB,IAAI,kJAAA,CAAA,oBAAiB,CAAC;gBAAE,KAAK;gBAAc,MAAM,kJAAA,CAAA,aAAU;YAAC;YAClF,cAAc,WAAW,GAAG;YAC5B,MAAM,aAAa,IAAI,kJAAA,CAAA,gBAAa,CAAC,YAAY,KAAK,EAAE,YAAY,MAAM;YAC1E,YAAY,IAAI,kJAAA,CAAA,OAAI,CAAC,YAAY;YACjC,MAAM,GAAG,CAAC;QACZ;QACA,SAAS;YACP,MAAM,QAAQ,CAAC,GAAG,CAAC,MAAM,QAAQ,CAAC,CAAC,EAAE,MAAM,QAAQ,CAAC,CAAC;QACvD;QACA,IAAI,CAAC,OAAO,GAAG;QACf,IAAI,CAAC,IAAI,GAAG;YACV,OAAO,MAAM,KAAK;YAClB,QAAQ,MAAM,MAAM;YACpB,KAAK,SAAS,KAAK,EAAE,MAAM;gBACzB,IAAI,CAAC,KAAK,GAAG;gBACb,IAAI,CAAC,MAAM,GAAG;gBACd,KAAK,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG,MAAM,KAAK,EAAE,IAAI,CAAC,MAAM,GAAG,MAAM,MAAM,EAAE;gBACrE;YACF;QACF;QACA,IAAI,CAAC,QAAQ,GAAG;YACd,GAAG,MAAM,CAAC;YACV,GAAG,MAAM,CAAC;YACV,KAAK,SAAS,CAAC,EAAE,CAAC;gBAChB,IAAI,CAAC,CAAC,GAAG;gBACT,IAAI,CAAC,CAAC,GAAG;gBACT,MAAM,QAAQ,MAAM,IAAI,CAAC,KAAK;gBAC9B,MAAM,SAAS,MAAM,IAAI,CAAC,MAAM;gBAChC,KAAK,QAAQ,CAAC,GAAG,CAAC,CAAC,OAAO,UAAU,GAAG,IAAI,QAAQ,IAAI,IAAI,CAAC,CAAC,EAAE,OAAO,WAAW,GAAG,IAAI,SAAS,IAAI,IAAI,CAAC,CAAC,EAAE;gBAC7G,IAAI,eACF,UAAU,QAAQ,CAAC,GAAG,CAAC,KAAK,QAAQ,CAAC,CAAC,EAAE,KAAK,QAAQ,CAAC,CAAC,GAAG,MAAM,IAAI,CAAC,MAAM,GAAG,IAAI,YAAY,MAAM,GAAG,GAAG;YAC9G;QACF;QACA,IAAI,CAAC,MAAM,GAAG,SAAS,QAAQ;YAC7B,IAAI,IAAI,CAAC,OAAO,EAAE;gBAChB,SAAS,QAAQ,CAAC,KAAK,GAAG,MAAM,MAAM,CAAC,GAAG,CAAC,OAAO;gBAClD,uBAAuB,SAAS,SAAS;gBACzC,SAAS,SAAS,GAAG;gBACrB,SAAS,UAAU;gBACnB,SAAS,MAAM,CAAC,OAAO;gBACvB,SAAS,SAAS,GAAG;YACvB;QACF;QACA,IAAI,CAAC,qBAAqB,GAAG;YAC3B,IAAI,IAAI,CAAC,OAAO,EAAE;gBAChB,OAAO,IAAI,GAAG,OAAO,UAAU,GAAG,CAAC;gBACnC,OAAO,KAAK,GAAG,OAAO,UAAU,GAAG;gBACnC,OAAO,GAAG,GAAG,OAAO,WAAW,GAAG;gBAClC,OAAO,MAAM,GAAG,OAAO,WAAW,GAAG,CAAC;gBACtC,OAAO,sBAAsB;gBAC7B,IAAI,CAAC,MAAM;YACb;QACF;QACA,IAAI,CAAC,MAAM,GAAG;YACZ,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;YAClD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM;QACjD;QACA,IAAI,CAAC,MAAM;IACb;AACF;;CAIA,2CAA2C","ignoreList":[0]}},
    {"offset": {"line": 8775, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8781, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/utils/GeometryCompressionUtils.js"],"sourcesContent":["import { BufferAttribute, Matrix4, Vector3, Matrix3, MeshPhongMaterial, UniformsUtils, ShaderLib, ShaderChunk } from \"three\";\nimport { version } from \"../_polyfill/constants.js\";\nvar GeometryCompressionUtils = {\n  /**\n   * Make the input mesh.geometry's normal attribute encoded and compressed by 3 different methods.\n   * Also will change the mesh.material to `PackedPhongMaterial` which let the vertex shader program decode the normal data.\n   *\n   * @param {THREE.Mesh} mesh\n   * @param {String} encodeMethod\t\t\"DEFAULT\" || \"OCT1Byte\" || \"OCT2Byte\" || \"ANGLES\"\n   *\n   */\n  compressNormals: function(mesh, encodeMethod) {\n    if (!mesh.geometry) {\n      console.error(\"Mesh must contain geometry. \");\n    }\n    const normal = mesh.geometry.attributes.normal;\n    if (!normal) {\n      console.error(\"Geometry must contain normal attribute. \");\n    }\n    if (normal.isPacked)\n      return;\n    if (normal.itemSize != 3) {\n      console.error(\"normal.itemSize is not 3, which cannot be encoded. \");\n    }\n    const array = normal.array;\n    const count = normal.count;\n    let result;\n    if (encodeMethod == \"DEFAULT\") {\n      result = new Uint8Array(count * 3);\n      for (let idx = 0; idx < array.length; idx += 3) {\n        const encoded = this.EncodingFuncs.defaultEncode(array[idx], array[idx + 1], array[idx + 2], 1);\n        result[idx + 0] = encoded[0];\n        result[idx + 1] = encoded[1];\n        result[idx + 2] = encoded[2];\n      }\n      mesh.geometry.setAttribute(\"normal\", new BufferAttribute(result, 3, true));\n      mesh.geometry.attributes.normal.bytes = result.length * 1;\n    } else if (encodeMethod == \"OCT1Byte\") {\n      result = new Int8Array(count * 2);\n      for (let idx = 0; idx < array.length; idx += 3) {\n        const encoded = this.EncodingFuncs.octEncodeBest(array[idx], array[idx + 1], array[idx + 2], 1);\n        result[idx / 3 * 2 + 0] = encoded[0];\n        result[idx / 3 * 2 + 1] = encoded[1];\n      }\n      mesh.geometry.setAttribute(\"normal\", new BufferAttribute(result, 2, true));\n      mesh.geometry.attributes.normal.bytes = result.length * 1;\n    } else if (encodeMethod == \"OCT2Byte\") {\n      result = new Int16Array(count * 2);\n      for (let idx = 0; idx < array.length; idx += 3) {\n        const encoded = this.EncodingFuncs.octEncodeBest(array[idx], array[idx + 1], array[idx + 2], 2);\n        result[idx / 3 * 2 + 0] = encoded[0];\n        result[idx / 3 * 2 + 1] = encoded[1];\n      }\n      mesh.geometry.setAttribute(\"normal\", new BufferAttribute(result, 2, true));\n      mesh.geometry.attributes.normal.bytes = result.length * 2;\n    } else if (encodeMethod == \"ANGLES\") {\n      result = new Uint16Array(count * 2);\n      for (let idx = 0; idx < array.length; idx += 3) {\n        const encoded = this.EncodingFuncs.anglesEncode(array[idx], array[idx + 1], array[idx + 2]);\n        result[idx / 3 * 2 + 0] = encoded[0];\n        result[idx / 3 * 2 + 1] = encoded[1];\n      }\n      mesh.geometry.setAttribute(\"normal\", new BufferAttribute(result, 2, true));\n      mesh.geometry.attributes.normal.bytes = result.length * 2;\n    } else {\n      console.error(\"Unrecognized encoding method, should be `DEFAULT` or `ANGLES` or `OCT`. \");\n    }\n    mesh.geometry.attributes.normal.needsUpdate = true;\n    mesh.geometry.attributes.normal.isPacked = true;\n    mesh.geometry.attributes.normal.packingMethod = encodeMethod;\n    if (!(mesh.material instanceof PackedPhongMaterial)) {\n      mesh.material = new PackedPhongMaterial().copy(mesh.material);\n    }\n    if (encodeMethod == \"ANGLES\") {\n      mesh.material.defines.USE_PACKED_NORMAL = 0;\n    }\n    if (encodeMethod == \"OCT1Byte\") {\n      mesh.material.defines.USE_PACKED_NORMAL = 1;\n    }\n    if (encodeMethod == \"OCT2Byte\") {\n      mesh.material.defines.USE_PACKED_NORMAL = 1;\n    }\n    if (encodeMethod == \"DEFAULT\") {\n      mesh.material.defines.USE_PACKED_NORMAL = 2;\n    }\n  },\n  /**\n   * Make the input mesh.geometry's position attribute encoded and compressed.\n   * Also will change the mesh.material to `PackedPhongMaterial` which let the vertex shader program decode the position data.\n   *\n   * @param {THREE.Mesh} mesh\n   *\n   */\n  compressPositions: function(mesh) {\n    if (!mesh.geometry) {\n      console.error(\"Mesh must contain geometry. \");\n    }\n    const position = mesh.geometry.attributes.position;\n    if (!position) {\n      console.error(\"Geometry must contain position attribute. \");\n    }\n    if (position.isPacked)\n      return;\n    if (position.itemSize != 3) {\n      console.error(\"position.itemSize is not 3, which cannot be packed. \");\n    }\n    const array = position.array;\n    const encodingBytes = 2;\n    const result = this.EncodingFuncs.quantizedEncode(array, encodingBytes);\n    const quantized = result.quantized;\n    const decodeMat = result.decodeMat;\n    if (mesh.geometry.boundingBox == null)\n      mesh.geometry.computeBoundingBox();\n    if (mesh.geometry.boundingSphere == null)\n      mesh.geometry.computeBoundingSphere();\n    mesh.geometry.setAttribute(\"position\", new BufferAttribute(quantized, 3));\n    mesh.geometry.attributes.position.isPacked = true;\n    mesh.geometry.attributes.position.needsUpdate = true;\n    mesh.geometry.attributes.position.bytes = quantized.length * encodingBytes;\n    if (!(mesh.material instanceof PackedPhongMaterial)) {\n      mesh.material = new PackedPhongMaterial().copy(mesh.material);\n    }\n    mesh.material.defines.USE_PACKED_POSITION = 0;\n    mesh.material.uniforms.quantizeMatPos.value = decodeMat;\n    mesh.material.uniforms.quantizeMatPos.needsUpdate = true;\n  },\n  /**\n   * Make the input mesh.geometry's uv attribute encoded and compressed.\n   * Also will change the mesh.material to `PackedPhongMaterial` which let the vertex shader program decode the uv data.\n   *\n   * @param {THREE.Mesh} mesh\n   *\n   */\n  compressUvs: function(mesh) {\n    if (!mesh.geometry) {\n      console.error(\"Mesh must contain geometry property. \");\n    }\n    const uvs = mesh.geometry.attributes.uv;\n    if (!uvs) {\n      console.error(\"Geometry must contain uv attribute. \");\n    }\n    if (uvs.isPacked)\n      return;\n    const range = { min: Infinity, max: -Infinity };\n    const array = uvs.array;\n    for (let i = 0; i < array.length; i++) {\n      range.min = Math.min(range.min, array[i]);\n      range.max = Math.max(range.max, array[i]);\n    }\n    let result;\n    if (range.min >= -1 && range.max <= 1) {\n      result = new Uint16Array(array.length);\n      for (let i = 0; i < array.length; i += 2) {\n        const encoded = this.EncodingFuncs.defaultEncode(array[i], array[i + 1], 0, 2);\n        result[i] = encoded[0];\n        result[i + 1] = encoded[1];\n      }\n      mesh.geometry.setAttribute(\"uv\", new BufferAttribute(result, 2, true));\n      mesh.geometry.attributes.uv.isPacked = true;\n      mesh.geometry.attributes.uv.needsUpdate = true;\n      mesh.geometry.attributes.uv.bytes = result.length * 2;\n      if (!(mesh.material instanceof PackedPhongMaterial)) {\n        mesh.material = new PackedPhongMaterial().copy(mesh.material);\n      }\n      mesh.material.defines.USE_PACKED_UV = 0;\n    } else {\n      result = this.EncodingFuncs.quantizedEncodeUV(array, 2);\n      mesh.geometry.setAttribute(\"uv\", new BufferAttribute(result.quantized, 2));\n      mesh.geometry.attributes.uv.isPacked = true;\n      mesh.geometry.attributes.uv.needsUpdate = true;\n      mesh.geometry.attributes.uv.bytes = result.quantized.length * 2;\n      if (!(mesh.material instanceof PackedPhongMaterial)) {\n        mesh.material = new PackedPhongMaterial().copy(mesh.material);\n      }\n      mesh.material.defines.USE_PACKED_UV = 1;\n      mesh.material.uniforms.quantizeMatUV.value = result.decodeMat;\n      mesh.material.uniforms.quantizeMatUV.needsUpdate = true;\n    }\n  },\n  EncodingFuncs: {\n    defaultEncode: function(x, y, z, bytes) {\n      if (bytes == 1) {\n        const tmpx = Math.round((x + 1) * 0.5 * 255);\n        const tmpy = Math.round((y + 1) * 0.5 * 255);\n        const tmpz = Math.round((z + 1) * 0.5 * 255);\n        return new Uint8Array([tmpx, tmpy, tmpz]);\n      } else if (bytes == 2) {\n        const tmpx = Math.round((x + 1) * 0.5 * 65535);\n        const tmpy = Math.round((y + 1) * 0.5 * 65535);\n        const tmpz = Math.round((z + 1) * 0.5 * 65535);\n        return new Uint16Array([tmpx, tmpy, tmpz]);\n      } else {\n        console.error(\"number of bytes must be 1 or 2\");\n      }\n    },\n    defaultDecode: function(array, bytes) {\n      if (bytes == 1) {\n        return [array[0] / 255 * 2 - 1, array[1] / 255 * 2 - 1, array[2] / 255 * 2 - 1];\n      } else if (bytes == 2) {\n        return [array[0] / 65535 * 2 - 1, array[1] / 65535 * 2 - 1, array[2] / 65535 * 2 - 1];\n      } else {\n        console.error(\"number of bytes must be 1 or 2\");\n      }\n    },\n    // for `Angles` encoding\n    anglesEncode: function(x, y, z) {\n      const normal0 = parseInt(0.5 * (1 + Math.atan2(y, x) / Math.PI) * 65535);\n      const normal1 = parseInt(0.5 * (1 + z) * 65535);\n      return new Uint16Array([normal0, normal1]);\n    },\n    // for `Octahedron` encoding\n    octEncodeBest: function(x, y, z, bytes) {\n      var oct, dec, best, currentCos, bestCos;\n      best = oct = octEncodeVec3(x, y, z, \"floor\", \"floor\");\n      dec = octDecodeVec2(oct);\n      bestCos = dot(x, y, z, dec);\n      oct = octEncodeVec3(x, y, z, \"ceil\", \"floor\");\n      dec = octDecodeVec2(oct);\n      currentCos = dot(x, y, z, dec);\n      if (currentCos > bestCos) {\n        best = oct;\n        bestCos = currentCos;\n      }\n      oct = octEncodeVec3(x, y, z, \"floor\", \"ceil\");\n      dec = octDecodeVec2(oct);\n      currentCos = dot(x, y, z, dec);\n      if (currentCos > bestCos) {\n        best = oct;\n        bestCos = currentCos;\n      }\n      oct = octEncodeVec3(x, y, z, \"ceil\", \"ceil\");\n      dec = octDecodeVec2(oct);\n      currentCos = dot(x, y, z, dec);\n      if (currentCos > bestCos) {\n        best = oct;\n      }\n      return best;\n      function octEncodeVec3(x0, y0, z0, xfunc, yfunc) {\n        var x2 = x0 / (Math.abs(x0) + Math.abs(y0) + Math.abs(z0));\n        var y2 = y0 / (Math.abs(x0) + Math.abs(y0) + Math.abs(z0));\n        if (z < 0) {\n          var tempx = (1 - Math.abs(y2)) * (x2 >= 0 ? 1 : -1);\n          var tempy = (1 - Math.abs(x2)) * (y2 >= 0 ? 1 : -1);\n          x2 = tempx;\n          y2 = tempy;\n          var diff = 1 - Math.abs(x2) - Math.abs(y2);\n          if (diff > 0) {\n            diff += 1e-3;\n            x2 += x2 > 0 ? diff / 2 : -diff / 2;\n            y2 += y2 > 0 ? diff / 2 : -diff / 2;\n          }\n        }\n        if (bytes == 1) {\n          return new Int8Array([Math[xfunc](x2 * 127.5 + (x2 < 0 ? 1 : 0)), Math[yfunc](y2 * 127.5 + (y2 < 0 ? 1 : 0))]);\n        }\n        if (bytes == 2) {\n          return new Int16Array([\n            Math[xfunc](x2 * 32767.5 + (x2 < 0 ? 1 : 0)),\n            Math[yfunc](y2 * 32767.5 + (y2 < 0 ? 1 : 0))\n          ]);\n        }\n      }\n      function octDecodeVec2(oct2) {\n        var x2 = oct2[0];\n        var y2 = oct2[1];\n        if (bytes == 1) {\n          x2 /= x2 < 0 ? 127 : 128;\n          y2 /= y2 < 0 ? 127 : 128;\n        } else if (bytes == 2) {\n          x2 /= x2 < 0 ? 32767 : 32768;\n          y2 /= y2 < 0 ? 32767 : 32768;\n        }\n        var z2 = 1 - Math.abs(x2) - Math.abs(y2);\n        if (z2 < 0) {\n          var tmpx = x2;\n          x2 = (1 - Math.abs(y2)) * (x2 >= 0 ? 1 : -1);\n          y2 = (1 - Math.abs(tmpx)) * (y2 >= 0 ? 1 : -1);\n        }\n        var length = Math.sqrt(x2 * x2 + y2 * y2 + z2 * z2);\n        return [x2 / length, y2 / length, z2 / length];\n      }\n      function dot(x2, y2, z2, vec3) {\n        return x2 * vec3[0] + y2 * vec3[1] + z2 * vec3[2];\n      }\n    },\n    quantizedEncode: function(array, bytes) {\n      let quantized, segments;\n      if (bytes == 1) {\n        quantized = new Uint8Array(array.length);\n        segments = 255;\n      } else if (bytes == 2) {\n        quantized = new Uint16Array(array.length);\n        segments = 65535;\n      } else {\n        console.error(\"number of bytes error! \");\n      }\n      const decodeMat = new Matrix4();\n      const min = new Float32Array(3);\n      const max = new Float32Array(3);\n      min[0] = min[1] = min[2] = Number.MAX_VALUE;\n      max[0] = max[1] = max[2] = -Number.MAX_VALUE;\n      for (let i = 0; i < array.length; i += 3) {\n        min[0] = Math.min(min[0], array[i + 0]);\n        min[1] = Math.min(min[1], array[i + 1]);\n        min[2] = Math.min(min[2], array[i + 2]);\n        max[0] = Math.max(max[0], array[i + 0]);\n        max[1] = Math.max(max[1], array[i + 1]);\n        max[2] = Math.max(max[2], array[i + 2]);\n      }\n      decodeMat.scale(\n        new Vector3((max[0] - min[0]) / segments, (max[1] - min[1]) / segments, (max[2] - min[2]) / segments)\n      );\n      decodeMat.elements[12] = min[0];\n      decodeMat.elements[13] = min[1];\n      decodeMat.elements[14] = min[2];\n      decodeMat.transpose();\n      const multiplier = new Float32Array([\n        max[0] !== min[0] ? segments / (max[0] - min[0]) : 0,\n        max[1] !== min[1] ? segments / (max[1] - min[1]) : 0,\n        max[2] !== min[2] ? segments / (max[2] - min[2]) : 0\n      ]);\n      for (let i = 0; i < array.length; i += 3) {\n        quantized[i + 0] = Math.floor((array[i + 0] - min[0]) * multiplier[0]);\n        quantized[i + 1] = Math.floor((array[i + 1] - min[1]) * multiplier[1]);\n        quantized[i + 2] = Math.floor((array[i + 2] - min[2]) * multiplier[2]);\n      }\n      return {\n        quantized,\n        decodeMat\n      };\n    },\n    quantizedEncodeUV: function(array, bytes) {\n      let quantized, segments;\n      if (bytes == 1) {\n        quantized = new Uint8Array(array.length);\n        segments = 255;\n      } else if (bytes == 2) {\n        quantized = new Uint16Array(array.length);\n        segments = 65535;\n      } else {\n        console.error(\"number of bytes error! \");\n      }\n      const decodeMat = new Matrix3();\n      const min = new Float32Array(2);\n      const max = new Float32Array(2);\n      min[0] = min[1] = Number.MAX_VALUE;\n      max[0] = max[1] = -Number.MAX_VALUE;\n      for (let i = 0; i < array.length; i += 2) {\n        min[0] = Math.min(min[0], array[i + 0]);\n        min[1] = Math.min(min[1], array[i + 1]);\n        max[0] = Math.max(max[0], array[i + 0]);\n        max[1] = Math.max(max[1], array[i + 1]);\n      }\n      decodeMat.scale((max[0] - min[0]) / segments, (max[1] - min[1]) / segments);\n      decodeMat.elements[6] = min[0];\n      decodeMat.elements[7] = min[1];\n      decodeMat.transpose();\n      const multiplier = new Float32Array([\n        max[0] !== min[0] ? segments / (max[0] - min[0]) : 0,\n        max[1] !== min[1] ? segments / (max[1] - min[1]) : 0\n      ]);\n      for (let i = 0; i < array.length; i += 2) {\n        quantized[i + 0] = Math.floor((array[i + 0] - min[0]) * multiplier[0]);\n        quantized[i + 1] = Math.floor((array[i + 1] - min[1]) * multiplier[1]);\n      }\n      return {\n        quantized,\n        decodeMat\n      };\n    }\n  }\n};\nclass PackedPhongMaterial extends MeshPhongMaterial {\n  constructor(parameters) {\n    super();\n    this.defines = {};\n    this.type = \"PackedPhongMaterial\";\n    this.uniforms = UniformsUtils.merge([\n      ShaderLib.phong.uniforms,\n      {\n        quantizeMatPos: { value: null },\n        quantizeMatUV: { value: null }\n      }\n    ]);\n    this.vertexShader = [\n      \"#define PHONG\",\n      \"varying vec3 vViewPosition;\",\n      \"#ifndef FLAT_SHADED\",\n      \"varying vec3 vNormal;\",\n      \"#endif\",\n      ShaderChunk.common,\n      ShaderChunk.uv_pars_vertex,\n      ShaderChunk.uv2_pars_vertex,\n      ShaderChunk.displacementmap_pars_vertex,\n      ShaderChunk.envmap_pars_vertex,\n      ShaderChunk.color_pars_vertex,\n      ShaderChunk.fog_pars_vertex,\n      ShaderChunk.morphtarget_pars_vertex,\n      ShaderChunk.skinning_pars_vertex,\n      ShaderChunk.shadowmap_pars_vertex,\n      ShaderChunk.logdepthbuf_pars_vertex,\n      ShaderChunk.clipping_planes_pars_vertex,\n      `#ifdef USE_PACKED_NORMAL\n\t\t\t\t\t#if USE_PACKED_NORMAL == 0\n\t\t\t\t\t\tvec3 decodeNormal(vec3 packedNormal)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfloat x = packedNormal.x * 2.0 - 1.0;\n\t\t\t\t\t\t\tfloat y = packedNormal.y * 2.0 - 1.0;\n\t\t\t\t\t\t\tvec2 scth = vec2(sin(x * PI), cos(x * PI));\n\t\t\t\t\t\t\tvec2 scphi = vec2(sqrt(1.0 - y * y), y);\n\t\t\t\t\t\t\treturn normalize( vec3(scth.y * scphi.x, scth.x * scphi.x, scphi.y) );\n\t\t\t\t\t\t}\n\t\t\t\t\t#endif\n\n\t\t\t\t\t#if USE_PACKED_NORMAL == 1\n\t\t\t\t\t\tvec3 decodeNormal(vec3 packedNormal)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvec3 v = vec3(packedNormal.xy, 1.0 - abs(packedNormal.x) - abs(packedNormal.y));\n\t\t\t\t\t\t\tif (v.z < 0.0)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tv.xy = (1.0 - abs(v.yx)) * vec2((v.x >= 0.0) ? +1.0 : -1.0, (v.y >= 0.0) ? +1.0 : -1.0);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn normalize(v);\n\t\t\t\t\t\t}\n\t\t\t\t\t#endif\n\n\t\t\t\t\t#if USE_PACKED_NORMAL == 2\n\t\t\t\t\t\tvec3 decodeNormal(vec3 packedNormal)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvec3 v = (packedNormal * 2.0) - 1.0;\n\t\t\t\t\t\t\treturn normalize(v);\n\t\t\t\t\t\t}\n\t\t\t\t\t#endif\n\t\t\t\t#endif`,\n      `#ifdef USE_PACKED_POSITION\n\t\t\t\t\t#if USE_PACKED_POSITION == 0\n\t\t\t\t\t\tuniform mat4 quantizeMatPos;\n\t\t\t\t\t#endif\n\t\t\t\t#endif`,\n      `#ifdef USE_PACKED_UV\n\t\t\t\t\t#if USE_PACKED_UV == 1\n\t\t\t\t\t\tuniform mat3 quantizeMatUV;\n\t\t\t\t\t#endif\n\t\t\t\t#endif`,\n      `#ifdef USE_PACKED_UV\n\t\t\t\t\t#if USE_PACKED_UV == 0\n\t\t\t\t\t\tvec2 decodeUV(vec2 packedUV)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvec2 uv = (packedUV * 2.0) - 1.0;\n\t\t\t\t\t\t\treturn uv;\n\t\t\t\t\t\t}\n\t\t\t\t\t#endif\n\n\t\t\t\t\t#if USE_PACKED_UV == 1\n\t\t\t\t\t\tvec2 decodeUV(vec2 packedUV)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvec2 uv = ( vec3(packedUV, 1.0) * quantizeMatUV ).xy;\n\t\t\t\t\t\t\treturn uv;\n\t\t\t\t\t\t}\n\t\t\t\t\t#endif\n\t\t\t\t#endif`,\n      \"void main() {\",\n      ShaderChunk.uv_vertex,\n      `#ifdef USE_UV\n\t\t\t\t\t#ifdef USE_PACKED_UV\n\t\t\t\t\t\tvUv = decodeUV(vUv);\n\t\t\t\t\t#endif\n\t\t\t\t#endif`,\n      ShaderChunk.uv2_vertex,\n      ShaderChunk.color_vertex,\n      ShaderChunk.beginnormal_vertex,\n      `#ifdef USE_PACKED_NORMAL\n\t\t\t\t\tobjectNormal = decodeNormal(objectNormal);\n\t\t\t\t#endif\n\n\t\t\t\t#ifdef USE_TANGENT\n\t\t\t\t\tvec3 objectTangent = vec3( tangent.xyz );\n\t\t\t\t#endif\n\t\t\t\t`,\n      ShaderChunk.morphnormal_vertex,\n      ShaderChunk.skinbase_vertex,\n      ShaderChunk.skinnormal_vertex,\n      ShaderChunk.defaultnormal_vertex,\n      \"#ifndef FLAT_SHADED\",\n      \"\tvNormal = normalize( transformedNormal );\",\n      \"#endif\",\n      ShaderChunk.begin_vertex,\n      `#ifdef USE_PACKED_POSITION\n\t\t\t\t\t#if USE_PACKED_POSITION == 0\n\t\t\t\t\t\ttransformed = ( vec4(transformed, 1.0) * quantizeMatPos ).xyz;\n\t\t\t\t\t#endif\n\t\t\t\t#endif`,\n      ShaderChunk.morphtarget_vertex,\n      ShaderChunk.skinning_vertex,\n      ShaderChunk.displacementmap_vertex,\n      ShaderChunk.project_vertex,\n      ShaderChunk.logdepthbuf_vertex,\n      ShaderChunk.clipping_planes_vertex,\n      \"vViewPosition = - mvPosition.xyz;\",\n      ShaderChunk.worldpos_vertex,\n      ShaderChunk.envmap_vertex,\n      ShaderChunk.shadowmap_vertex,\n      ShaderChunk.fog_vertex,\n      \"}\"\n    ].join(\"\\n\");\n    this.fragmentShader = [\n      \"#define PHONG\",\n      \"uniform vec3 diffuse;\",\n      \"uniform vec3 emissive;\",\n      \"uniform vec3 specular;\",\n      \"uniform float shininess;\",\n      \"uniform float opacity;\",\n      ShaderChunk.common,\n      ShaderChunk.packing,\n      ShaderChunk.dithering_pars_fragment,\n      ShaderChunk.color_pars_fragment,\n      ShaderChunk.uv_pars_fragment,\n      ShaderChunk.uv2_pars_fragment,\n      ShaderChunk.map_pars_fragment,\n      ShaderChunk.alphamap_pars_fragment,\n      ShaderChunk.aomap_pars_fragment,\n      ShaderChunk.lightmap_pars_fragment,\n      ShaderChunk.emissivemap_pars_fragment,\n      ShaderChunk.envmap_common_pars_fragment,\n      ShaderChunk.envmap_pars_fragment,\n      ShaderChunk.cube_uv_reflection_fragment,\n      ShaderChunk.fog_pars_fragment,\n      ShaderChunk.bsdfs,\n      ShaderChunk.lights_pars_begin,\n      ShaderChunk.lights_phong_pars_fragment,\n      ShaderChunk.shadowmap_pars_fragment,\n      ShaderChunk.bumpmap_pars_fragment,\n      ShaderChunk.normalmap_pars_fragment,\n      ShaderChunk.specularmap_pars_fragment,\n      ShaderChunk.logdepthbuf_pars_fragment,\n      ShaderChunk.clipping_planes_pars_fragment,\n      \"void main() {\",\n      ShaderChunk.clipping_planes_fragment,\n      \"vec4 diffuseColor = vec4( diffuse, opacity );\",\n      \"ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\",\n      \"vec3 totalEmissiveRadiance = emissive;\",\n      ShaderChunk.logdepthbuf_fragment,\n      ShaderChunk.map_fragment,\n      ShaderChunk.color_fragment,\n      ShaderChunk.alphamap_fragment,\n      ShaderChunk.alphatest_fragment,\n      ShaderChunk.specularmap_fragment,\n      ShaderChunk.normal_fragment_begin,\n      ShaderChunk.normal_fragment_maps,\n      ShaderChunk.emissivemap_fragment,\n      // accumulation\n      ShaderChunk.lights_phong_fragment,\n      ShaderChunk.lights_fragment_begin,\n      ShaderChunk.lights_fragment_maps,\n      ShaderChunk.lights_fragment_end,\n      // modulation\n      ShaderChunk.aomap_fragment,\n      \"vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\",\n      ShaderChunk.envmap_fragment,\n      \"gl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\n      ShaderChunk.tonemapping_fragment,\n      version >= 154 ? ShaderChunk.colorspace_fragment : ShaderChunk.encodings_fragment,\n      ShaderChunk.fog_fragment,\n      ShaderChunk.premultiplied_alpha_fragment,\n      ShaderChunk.dithering_fragment,\n      \"}\"\n    ].join(\"\\n\");\n    this.setValues(parameters);\n  }\n}\nexport {\n  GeometryCompressionUtils,\n  PackedPhongMaterial\n};\n//# sourceMappingURL=GeometryCompressionUtils.js.map\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 9384, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9390, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/_polyfill/constants.js"],"sourcesContent":["import { REVISION } from \"three\";\nconst version = /* @__PURE__ */ (() => parseInt(REVISION.replace(/\\D+/g, \"\")))();\nexport {\n  version\n};\n//# sourceMappingURL=constants.js.map\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,UAAU,aAAa,GAAG,CAAC,IAAM,SAAS,kJAAA,CAAA,WAAQ,CAAC,OAAO,CAAC,QAAQ,IAAI;;CAI7E,qCAAqC","ignoreList":[0]}},
    {"offset": {"line": 9398, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9404, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/_polyfill/CapsuleGeometry.js"],"sourcesContent":["import { LatheGeometry, Path } from \"three\";\nconst CapsuleGeometry = /* @__PURE__ */ (() => {\n  class CapsuleGeometry2 extends LatheGeometry {\n    constructor(radius = 1, length = 1, capSegments = 4, radialSegments = 8) {\n      const path = new Path();\n      path.absarc(0, -length / 2, radius, Math.PI * 1.5, 0);\n      path.absarc(0, length / 2, radius, 0, Math.PI * 0.5);\n      super(path.getPoints(capSegments), radialSegments);\n      this.type = \"CapsuleGeometry\";\n      this.parameters = {\n        radius,\n        height: length,\n        capSegments,\n        radialSegments\n      };\n    }\n    static fromJSON(data) {\n      return new CapsuleGeometry2(data.radius, data.length, data.capSegments, data.radialSegments);\n    }\n  }\n  return CapsuleGeometry2;\n})();\nexport {\n  CapsuleGeometry\n};\n//# sourceMappingURL=CapsuleGeometry.js.map\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,kBAAkB,aAAa,GAAG,CAAC;IACvC,MAAM,yBAAyB,kJAAA,CAAA,gBAAa;QAC1C,YAAY,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,cAAc,CAAC,EAAE,iBAAiB,CAAC,CAAE;YACvE,MAAM,OAAO,IAAI,kJAAA,CAAA,OAAI;YACrB,KAAK,MAAM,CAAC,GAAG,CAAC,SAAS,GAAG,QAAQ,KAAK,EAAE,GAAG,KAAK;YACnD,KAAK,MAAM,CAAC,GAAG,SAAS,GAAG,QAAQ,GAAG,KAAK,EAAE,GAAG;YAChD,KAAK,CAAC,KAAK,SAAS,CAAC,cAAc;YACnC,IAAI,CAAC,IAAI,GAAG;YACZ,IAAI,CAAC,UAAU,GAAG;gBAChB;gBACA,QAAQ;gBACR;gBACA;YACF;QACF;QACA,OAAO,SAAS,IAAI,EAAE;YACpB,OAAO,IAAI,iBAAiB,KAAK,MAAM,EAAE,KAAK,MAAM,EAAE,KAAK,WAAW,EAAE,KAAK,cAAc;QAC7F;IACF;IACA,OAAO;AACT,CAAC;;CAID,2CAA2C","ignoreList":[0]}},
    {"offset": {"line": 9432, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9438, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/_polyfill/LoaderUtils.js"],"sourcesContent":["function decodeText(array) {\n  if (typeof TextDecoder !== \"undefined\") {\n    return new TextDecoder().decode(array);\n  }\n  let s = \"\";\n  for (let i = 0, il = array.length; i < il; i++) {\n    s += String.fromCharCode(array[i]);\n  }\n  try {\n    return decodeURIComponent(escape(s));\n  } catch (e) {\n    return s;\n  }\n}\nexport {\n  decodeText\n};\n//# sourceMappingURL=LoaderUtils.js.map\n"],"names":[],"mappings":";;;AAAA,SAAS,WAAW,KAAK;IACvB,IAAI,OAAO,gBAAgB,aAAa;QACtC,OAAO,IAAI,cAAc,MAAM,CAAC;IAClC;IACA,IAAI,IAAI;IACR,IAAK,IAAI,IAAI,GAAG,KAAK,MAAM,MAAM,EAAE,IAAI,IAAI,IAAK;QAC9C,KAAK,OAAO,YAAY,CAAC,KAAK,CAAC,EAAE;IACnC;IACA,IAAI;QACF,OAAO,mBAAmB,OAAO;IACnC,EAAE,OAAO,GAAG;QACV,OAAO;IACT;AACF;;CAIA,uCAAuC","ignoreList":[0]}},
    {"offset": {"line": 9457, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9463, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/_polyfill/Data3DTexture.js"],"sourcesContent":["import { Texture, NearestFilter, ClampToEdgeWrapping } from \"three\";\nclass Data3DTexture extends Texture {\n  constructor(data = null, width = 1, height = 1, depth = 1) {\n    super(null);\n    this.isData3DTexture = true;\n    this.image = { data, width, height, depth };\n    this.magFilter = NearestFilter;\n    this.minFilter = NearestFilter;\n    this.wrapR = ClampToEdgeWrapping;\n    this.generateMipmaps = false;\n    this.flipY = false;\n    this.unpackAlignment = 1;\n  }\n}\nexport {\n  Data3DTexture\n};\n//# sourceMappingURL=Data3DTexture.js.map\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,sBAAsB,kJAAA,CAAA,UAAO;IACjC,YAAY,OAAO,IAAI,EAAE,QAAQ,CAAC,EAAE,SAAS,CAAC,EAAE,QAAQ,CAAC,CAAE;QACzD,KAAK,CAAC;QACN,IAAI,CAAC,eAAe,GAAG;QACvB,IAAI,CAAC,KAAK,GAAG;YAAE;YAAM;YAAO;YAAQ;QAAM;QAC1C,IAAI,CAAC,SAAS,GAAG,kJAAA,CAAA,gBAAa;QAC9B,IAAI,CAAC,SAAS,GAAG,kJAAA,CAAA,gBAAa;QAC9B,IAAI,CAAC,KAAK,GAAG,kJAAA,CAAA,sBAAmB;QAChC,IAAI,CAAC,eAAe,GAAG;QACvB,IAAI,CAAC,KAAK,GAAG;QACb,IAAI,CAAC,eAAe,GAAG;IACzB;AACF;;CAIA,yCAAyC","ignoreList":[0]}},
    {"offset": {"line": 9488, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9494, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/_polyfill/CompressedCubeTexture.js"],"sourcesContent":["import { CompressedTexture, CubeReflectionMapping } from \"three\";\nclass CompressedCubeTexture extends CompressedTexture {\n  constructor(images, format, type) {\n    super(void 0, images[0].width, images[0].height, format, type, CubeReflectionMapping);\n    this.isCompressedCubeTexture = true;\n    this.isCubeTexture = true;\n    this.image = images;\n  }\n}\nexport {\n  CompressedCubeTexture\n};\n//# sourceMappingURL=CompressedCubeTexture.js.map\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,8BAA8B,kJAAA,CAAA,oBAAiB;IACnD,YAAY,MAAM,EAAE,MAAM,EAAE,IAAI,CAAE;QAChC,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC,EAAE,CAAC,KAAK,EAAE,MAAM,CAAC,EAAE,CAAC,MAAM,EAAE,QAAQ,MAAM,kJAAA,CAAA,wBAAqB;QACpF,IAAI,CAAC,uBAAuB,GAAG;QAC/B,IAAI,CAAC,aAAa,GAAG;QACrB,IAAI,CAAC,KAAK,GAAG;IACf;AACF;;CAIA,iDAAiD","ignoreList":[0]}},
    {"offset": {"line": 9509, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9515, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/_polyfill/CompressedArrayTexture.js"],"sourcesContent":["import { CompressedTexture, ClampToEdgeWrapping } from \"three\";\nclass CompressedArrayTexture extends CompressedTexture {\n  constructor(mipmaps, width, height, depth, format, type) {\n    super(mipmaps, width, height, format, type);\n    this.isCompressedArrayTexture = true;\n    this.image.depth = depth;\n    this.wrapR = ClampToEdgeWrapping;\n  }\n}\nexport {\n  CompressedArrayTexture\n};\n//# sourceMappingURL=CompressedArrayTexture.js.map\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,+BAA+B,kJAAA,CAAA,oBAAiB;IACpD,YAAY,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,CAAE;QACvD,KAAK,CAAC,SAAS,OAAO,QAAQ,QAAQ;QACtC,IAAI,CAAC,wBAAwB,GAAG;QAChC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG;QACnB,IAAI,CAAC,KAAK,GAAG,kJAAA,CAAA,sBAAmB;IAClC;AACF;;CAIA,kDAAkD","ignoreList":[0]}},
    {"offset": {"line": 9530, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9536, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/environments/RoomEnvironment.js"],"sourcesContent":["import * as THREE from \"three\";\nfunction RoomEnvironment() {\n  const scene = new THREE.Scene();\n  const geometry = new THREE.BoxGeometry();\n  geometry.deleteAttribute(\"uv\");\n  const roomMaterial = new THREE.MeshStandardMaterial({ side: THREE.BackSide });\n  const boxMaterial = new THREE.MeshStandardMaterial();\n  const mainLight = new THREE.PointLight(16777215, 5, 28, 2);\n  mainLight.position.set(0.418, 16.199, 0.3);\n  scene.add(mainLight);\n  const room = new THREE.Mesh(geometry, roomMaterial);\n  room.position.set(-0.757, 13.219, 0.717);\n  room.scale.set(31.713, 28.305, 28.591);\n  scene.add(room);\n  const box1 = new THREE.Mesh(geometry, boxMaterial);\n  box1.position.set(-10.906, 2.009, 1.846);\n  box1.rotation.set(0, -0.195, 0);\n  box1.scale.set(2.328, 7.905, 4.651);\n  scene.add(box1);\n  const box2 = new THREE.Mesh(geometry, boxMaterial);\n  box2.position.set(-5.607, -0.754, -0.758);\n  box2.rotation.set(0, 0.994, 0);\n  box2.scale.set(1.97, 1.534, 3.955);\n  scene.add(box2);\n  const box3 = new THREE.Mesh(geometry, boxMaterial);\n  box3.position.set(6.167, 0.857, 7.803);\n  box3.rotation.set(0, 0.561, 0);\n  box3.scale.set(3.927, 6.285, 3.687);\n  scene.add(box3);\n  const box4 = new THREE.Mesh(geometry, boxMaterial);\n  box4.position.set(-2.017, 0.018, 6.124);\n  box4.rotation.set(0, 0.333, 0);\n  box4.scale.set(2.002, 4.566, 2.064);\n  scene.add(box4);\n  const box5 = new THREE.Mesh(geometry, boxMaterial);\n  box5.position.set(2.291, -0.756, -2.621);\n  box5.rotation.set(0, -0.286, 0);\n  box5.scale.set(1.546, 1.552, 1.496);\n  scene.add(box5);\n  const box6 = new THREE.Mesh(geometry, boxMaterial);\n  box6.position.set(-2.193, -0.369, -5.547);\n  box6.rotation.set(0, 0.516, 0);\n  box6.scale.set(3.875, 3.487, 2.986);\n  scene.add(box6);\n  const light1 = new THREE.Mesh(geometry, createAreaLightMaterial(50));\n  light1.position.set(-16.116, 14.37, 8.208);\n  light1.scale.set(0.1, 2.428, 2.739);\n  scene.add(light1);\n  const light2 = new THREE.Mesh(geometry, createAreaLightMaterial(50));\n  light2.position.set(-16.109, 18.021, -8.207);\n  light2.scale.set(0.1, 2.425, 2.751);\n  scene.add(light2);\n  const light3 = new THREE.Mesh(geometry, createAreaLightMaterial(17));\n  light3.position.set(14.904, 12.198, -1.832);\n  light3.scale.set(0.15, 4.265, 6.331);\n  scene.add(light3);\n  const light4 = new THREE.Mesh(geometry, createAreaLightMaterial(43));\n  light4.position.set(-0.462, 8.89, 14.52);\n  light4.scale.set(4.38, 5.441, 0.088);\n  scene.add(light4);\n  const light5 = new THREE.Mesh(geometry, createAreaLightMaterial(20));\n  light5.position.set(3.235, 11.486, -12.541);\n  light5.scale.set(2.5, 2, 0.1);\n  scene.add(light5);\n  const light6 = new THREE.Mesh(geometry, createAreaLightMaterial(100));\n  light6.position.set(0, 20, 0);\n  light6.scale.set(1, 0.1, 1);\n  scene.add(light6);\n  function createAreaLightMaterial(intensity) {\n    const material = new THREE.MeshBasicMaterial();\n    material.color.setScalar(intensity);\n    return material;\n  }\n  return scene;\n}\nexport {\n  RoomEnvironment\n};\n//# sourceMappingURL=RoomEnvironment.js.map\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 9619, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9625, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/animation/AnimationClipCreator.js"],"sourcesContent":["import { NumberKeyframeTrack, AnimationClip, Vector3, VectorKeyframeTrack, BooleanKeyframeTrack, ColorKeyframeTrack } from \"three\";\nconst AnimationClipCreator = {\n  CreateRotationAnimation(period, axis = \"x\") {\n    const times = [0, period], values = [0, 360];\n    const trackName = \".rotation[\" + axis + \"]\";\n    const track = new NumberKeyframeTrack(trackName, times, values);\n    return new AnimationClip(null, period, [track]);\n  },\n  CreateScaleAxisAnimation(period, axis = \"x\") {\n    const times = [0, period], values = [0, 1];\n    const trackName = \".scale[\" + axis + \"]\";\n    const track = new NumberKeyframeTrack(trackName, times, values);\n    return new AnimationClip(null, period, [track]);\n  },\n  CreateShakeAnimation(duration, shakeScale) {\n    const times = [], values = [], tmp = new Vector3();\n    for (let i = 0; i < duration * 10; i++) {\n      times.push(i / 10);\n      tmp.set(Math.random() * 2 - 1, Math.random() * 2 - 1, Math.random() * 2 - 1).multiply(shakeScale).toArray(values, values.length);\n    }\n    const trackName = \".position\";\n    const track = new VectorKeyframeTrack(trackName, times, values);\n    return new AnimationClip(null, duration, [track]);\n  },\n  CreatePulsationAnimation(duration, pulseScale) {\n    const times = [], values = [], tmp = new Vector3();\n    for (let i = 0; i < duration * 10; i++) {\n      times.push(i / 10);\n      const scaleFactor = Math.random() * pulseScale;\n      tmp.set(scaleFactor, scaleFactor, scaleFactor).toArray(values, values.length);\n    }\n    const trackName = \".scale\";\n    const track = new VectorKeyframeTrack(trackName, times, values);\n    return new AnimationClip(null, duration, [track]);\n  },\n  CreateVisibilityAnimation(duration) {\n    const times = [0, duration / 2, duration], values = [true, false, true];\n    const trackName = \".visible\";\n    const track = new BooleanKeyframeTrack(trackName, times, values);\n    return new AnimationClip(null, duration, [track]);\n  },\n  CreateMaterialColorAnimation(duration, colors) {\n    const times = [], values = [], timeStep = duration / colors.length;\n    for (let i = 0; i < colors.length; i++) {\n      times.push(i * timeStep);\n      const color = colors[i];\n      values.push(color.r, color.g, color.b);\n    }\n    const trackName = \".material.color\";\n    const track = new ColorKeyframeTrack(trackName, times, values);\n    return new AnimationClip(null, duration, [track]);\n  }\n};\nexport {\n  AnimationClipCreator\n};\n//# sourceMappingURL=AnimationClipCreator.js.map\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,uBAAuB;IAC3B,yBAAwB,MAAM,EAAE,OAAO,GAAG;QACxC,MAAM,QAAQ;YAAC;YAAG;SAAO,EAAE,SAAS;YAAC;YAAG;SAAI;QAC5C,MAAM,YAAY,eAAe,OAAO;QACxC,MAAM,QAAQ,IAAI,kJAAA,CAAA,sBAAmB,CAAC,WAAW,OAAO;QACxD,OAAO,IAAI,kJAAA,CAAA,gBAAa,CAAC,MAAM,QAAQ;YAAC;SAAM;IAChD;IACA,0BAAyB,MAAM,EAAE,OAAO,GAAG;QACzC,MAAM,QAAQ;YAAC;YAAG;SAAO,EAAE,SAAS;YAAC;YAAG;SAAE;QAC1C,MAAM,YAAY,YAAY,OAAO;QACrC,MAAM,QAAQ,IAAI,kJAAA,CAAA,sBAAmB,CAAC,WAAW,OAAO;QACxD,OAAO,IAAI,kJAAA,CAAA,gBAAa,CAAC,MAAM,QAAQ;YAAC;SAAM;IAChD;IACA,sBAAqB,QAAQ,EAAE,UAAU;QACvC,MAAM,QAAQ,EAAE,EAAE,SAAS,EAAE,EAAE,MAAM,IAAI,kJAAA,CAAA,UAAO;QAChD,IAAK,IAAI,IAAI,GAAG,IAAI,WAAW,IAAI,IAAK;YACtC,MAAM,IAAI,CAAC,IAAI;YACf,IAAI,GAAG,CAAC,KAAK,MAAM,KAAK,IAAI,GAAG,KAAK,MAAM,KAAK,IAAI,GAAG,KAAK,MAAM,KAAK,IAAI,GAAG,QAAQ,CAAC,YAAY,OAAO,CAAC,QAAQ,OAAO,MAAM;QACjI;QACA,MAAM,YAAY;QAClB,MAAM,QAAQ,IAAI,kJAAA,CAAA,sBAAmB,CAAC,WAAW,OAAO;QACxD,OAAO,IAAI,kJAAA,CAAA,gBAAa,CAAC,MAAM,UAAU;YAAC;SAAM;IAClD;IACA,0BAAyB,QAAQ,EAAE,UAAU;QAC3C,MAAM,QAAQ,EAAE,EAAE,SAAS,EAAE,EAAE,MAAM,IAAI,kJAAA,CAAA,UAAO;QAChD,IAAK,IAAI,IAAI,GAAG,IAAI,WAAW,IAAI,IAAK;YACtC,MAAM,IAAI,CAAC,IAAI;YACf,MAAM,cAAc,KAAK,MAAM,KAAK;YACpC,IAAI,GAAG,CAAC,aAAa,aAAa,aAAa,OAAO,CAAC,QAAQ,OAAO,MAAM;QAC9E;QACA,MAAM,YAAY;QAClB,MAAM,QAAQ,IAAI,kJAAA,CAAA,sBAAmB,CAAC,WAAW,OAAO;QACxD,OAAO,IAAI,kJAAA,CAAA,gBAAa,CAAC,MAAM,UAAU;YAAC;SAAM;IAClD;IACA,2BAA0B,QAAQ;QAChC,MAAM,QAAQ;YAAC;YAAG,WAAW;YAAG;SAAS,EAAE,SAAS;YAAC;YAAM;YAAO;SAAK;QACvE,MAAM,YAAY;QAClB,MAAM,QAAQ,IAAI,kJAAA,CAAA,uBAAoB,CAAC,WAAW,OAAO;QACzD,OAAO,IAAI,kJAAA,CAAA,gBAAa,CAAC,MAAM,UAAU;YAAC;SAAM;IAClD;IACA,8BAA6B,QAAQ,EAAE,MAAM;QAC3C,MAAM,QAAQ,EAAE,EAAE,SAAS,EAAE,EAAE,WAAW,WAAW,OAAO,MAAM;QAClE,IAAK,IAAI,IAAI,GAAG,IAAI,OAAO,MAAM,EAAE,IAAK;YACtC,MAAM,IAAI,CAAC,IAAI;YACf,MAAM,QAAQ,MAAM,CAAC,EAAE;YACvB,OAAO,IAAI,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC,EAAE,MAAM,CAAC;QACvC;QACA,MAAM,YAAY;QAClB,MAAM,QAAQ,IAAI,kJAAA,CAAA,qBAAkB,CAAC,WAAW,OAAO;QACvD,OAAO,IAAI,kJAAA,CAAA,gBAAa,CAAC,MAAM,UAAU;YAAC;SAAM;IAClD;AACF;;CAIA,gDAAgD","ignoreList":[0]}},
    {"offset": {"line": 9716, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9722, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/animation/CCDIKSolver.js"],"sourcesContent":["import { Object3D, SphereGeometry, MeshBasicMaterial, Color, LineBasicMaterial, Quaternion, Vector3, Matrix4, Mesh, Line, BufferGeometry, BufferAttribute } from \"three\";\nconst _q = /* @__PURE__ */ new Quaternion();\nconst _targetPos = /* @__PURE__ */ new Vector3();\nconst _targetVec = /* @__PURE__ */ new Vector3();\nconst _effectorPos = /* @__PURE__ */ new Vector3();\nconst _effectorVec = /* @__PURE__ */ new Vector3();\nconst _linkPos = /* @__PURE__ */ new Vector3();\nconst _invLinkQ = /* @__PURE__ */ new Quaternion();\nconst _linkScale = /* @__PURE__ */ new Vector3();\nconst _axis = /* @__PURE__ */ new Vector3();\nconst _vector = /* @__PURE__ */ new Vector3();\nconst _matrix = /* @__PURE__ */ new Matrix4();\nclass CCDIKSolver {\n  /**\n   * @param {THREE.SkinnedMesh} mesh\n   * @param {Array<Object>} iks\n   */\n  constructor(mesh, iks = []) {\n    this.mesh = mesh;\n    this.iks = iks;\n    this._valid();\n  }\n  /**\n   * Update all IK bones.\n   *\n   * @return {CCDIKSolver}\n   */\n  update() {\n    const iks = this.iks;\n    for (let i = 0, il = iks.length; i < il; i++) {\n      this.updateOne(iks[i]);\n    }\n    return this;\n  }\n  /**\n   * Update one IK bone\n   *\n   * @param {Object} ik parameter\n   * @return {CCDIKSolver}\n   */\n  updateOne(ik) {\n    const bones = this.mesh.skeleton.bones;\n    const math = Math;\n    const effector = bones[ik.effector];\n    const target = bones[ik.target];\n    _targetPos.setFromMatrixPosition(target.matrixWorld);\n    const links = ik.links;\n    const iteration = ik.iteration !== void 0 ? ik.iteration : 1;\n    for (let i = 0; i < iteration; i++) {\n      let rotated = false;\n      for (let j = 0, jl = links.length; j < jl; j++) {\n        const link = bones[links[j].index];\n        if (links[j].enabled === false)\n          break;\n        const limitation = links[j].limitation;\n        const rotationMin = links[j].rotationMin;\n        const rotationMax = links[j].rotationMax;\n        link.matrixWorld.decompose(_linkPos, _invLinkQ, _linkScale);\n        _invLinkQ.invert();\n        _effectorPos.setFromMatrixPosition(effector.matrixWorld);\n        _effectorVec.subVectors(_effectorPos, _linkPos);\n        _effectorVec.applyQuaternion(_invLinkQ);\n        _effectorVec.normalize();\n        _targetVec.subVectors(_targetPos, _linkPos);\n        _targetVec.applyQuaternion(_invLinkQ);\n        _targetVec.normalize();\n        let angle = _targetVec.dot(_effectorVec);\n        if (angle > 1) {\n          angle = 1;\n        } else if (angle < -1) {\n          angle = -1;\n        }\n        angle = math.acos(angle);\n        if (angle < 1e-5)\n          continue;\n        if (ik.minAngle !== void 0 && angle < ik.minAngle) {\n          angle = ik.minAngle;\n        }\n        if (ik.maxAngle !== void 0 && angle > ik.maxAngle) {\n          angle = ik.maxAngle;\n        }\n        _axis.crossVectors(_effectorVec, _targetVec);\n        _axis.normalize();\n        _q.setFromAxisAngle(_axis, angle);\n        link.quaternion.multiply(_q);\n        if (limitation !== void 0) {\n          let c = link.quaternion.w;\n          if (c > 1)\n            c = 1;\n          const c2 = math.sqrt(1 - c * c);\n          link.quaternion.set(limitation.x * c2, limitation.y * c2, limitation.z * c2, c);\n        }\n        if (rotationMin !== void 0) {\n          link.rotation.setFromVector3(_vector.setFromEuler(link.rotation).max(rotationMin));\n        }\n        if (rotationMax !== void 0) {\n          link.rotation.setFromVector3(_vector.setFromEuler(link.rotation).min(rotationMax));\n        }\n        link.updateMatrixWorld(true);\n        rotated = true;\n      }\n      if (!rotated)\n        break;\n    }\n    return this;\n  }\n  /**\n   * Creates Helper\n   *\n   * @return {CCDIKHelper}\n   */\n  createHelper() {\n    return new CCDIKHelper(this.mesh, this.iks);\n  }\n  // private methods\n  _valid() {\n    const iks = this.iks;\n    const bones = this.mesh.skeleton.bones;\n    for (let i = 0, il = iks.length; i < il; i++) {\n      const ik = iks[i];\n      const effector = bones[ik.effector];\n      const links = ik.links;\n      let link0, link1;\n      link0 = effector;\n      for (let j = 0, jl = links.length; j < jl; j++) {\n        link1 = bones[links[j].index];\n        if (link0.parent !== link1) {\n          console.warn(\"THREE.CCDIKSolver: bone \" + link0.name + \" is not the child of bone \" + link1.name);\n        }\n        link0 = link1;\n      }\n    }\n  }\n}\nfunction getPosition(bone, matrixWorldInv) {\n  return _vector.setFromMatrixPosition(bone.matrixWorld).applyMatrix4(matrixWorldInv);\n}\nfunction setPositionOfBoneToAttributeArray(array, index, bone, matrixWorldInv) {\n  const v = getPosition(bone, matrixWorldInv);\n  array[index * 3 + 0] = v.x;\n  array[index * 3 + 1] = v.y;\n  array[index * 3 + 2] = v.z;\n}\nclass CCDIKHelper extends Object3D {\n  constructor(mesh, iks = [], sphereSize = 0.25) {\n    super();\n    this.root = mesh;\n    this.iks = iks;\n    this.matrix.copy(mesh.matrixWorld);\n    this.matrixAutoUpdate = false;\n    this.sphereGeometry = new SphereGeometry(sphereSize, 16, 8);\n    this.targetSphereMaterial = new MeshBasicMaterial({\n      color: new Color(16746632),\n      depthTest: false,\n      depthWrite: false,\n      transparent: true\n    });\n    this.effectorSphereMaterial = new MeshBasicMaterial({\n      color: new Color(8978312),\n      depthTest: false,\n      depthWrite: false,\n      transparent: true\n    });\n    this.linkSphereMaterial = new MeshBasicMaterial({\n      color: new Color(8947967),\n      depthTest: false,\n      depthWrite: false,\n      transparent: true\n    });\n    this.lineMaterial = new LineBasicMaterial({\n      color: new Color(16711680),\n      depthTest: false,\n      depthWrite: false,\n      transparent: true\n    });\n    this._init();\n  }\n  /**\n   * Updates IK bones visualization.\n   */\n  updateMatrixWorld(force) {\n    const mesh = this.root;\n    if (this.visible) {\n      let offset = 0;\n      const iks = this.iks;\n      const bones = mesh.skeleton.bones;\n      _matrix.copy(mesh.matrixWorld).invert();\n      for (let i = 0, il = iks.length; i < il; i++) {\n        const ik = iks[i];\n        const targetBone = bones[ik.target];\n        const effectorBone = bones[ik.effector];\n        const targetMesh = this.children[offset++];\n        const effectorMesh = this.children[offset++];\n        targetMesh.position.copy(getPosition(targetBone, _matrix));\n        effectorMesh.position.copy(getPosition(effectorBone, _matrix));\n        for (let j = 0, jl = ik.links.length; j < jl; j++) {\n          const link = ik.links[j];\n          const linkBone = bones[link.index];\n          const linkMesh = this.children[offset++];\n          linkMesh.position.copy(getPosition(linkBone, _matrix));\n        }\n        const line = this.children[offset++];\n        const array = line.geometry.attributes.position.array;\n        setPositionOfBoneToAttributeArray(array, 0, targetBone, _matrix);\n        setPositionOfBoneToAttributeArray(array, 1, effectorBone, _matrix);\n        for (let j = 0, jl = ik.links.length; j < jl; j++) {\n          const link = ik.links[j];\n          const linkBone = bones[link.index];\n          setPositionOfBoneToAttributeArray(array, j + 2, linkBone, _matrix);\n        }\n        line.geometry.attributes.position.needsUpdate = true;\n      }\n    }\n    this.matrix.copy(mesh.matrixWorld);\n    super.updateMatrixWorld(force);\n  }\n  /**\n   * Frees the GPU-related resources allocated by this instance. Call this method whenever this instance is no longer used in your app.\n   */\n  dispose() {\n    this.sphereGeometry.dispose();\n    this.targetSphereMaterial.dispose();\n    this.effectorSphereMaterial.dispose();\n    this.linkSphereMaterial.dispose();\n    this.lineMaterial.dispose();\n    const children = this.children;\n    for (let i = 0; i < children.length; i++) {\n      const child = children[i];\n      if (child.isLine)\n        child.geometry.dispose();\n    }\n  }\n  // private method\n  _init() {\n    const scope = this;\n    const iks = this.iks;\n    function createLineGeometry(ik) {\n      const geometry = new BufferGeometry();\n      const vertices = new Float32Array((2 + ik.links.length) * 3);\n      geometry.setAttribute(\"position\", new BufferAttribute(vertices, 3));\n      return geometry;\n    }\n    function createTargetMesh() {\n      return new Mesh(scope.sphereGeometry, scope.targetSphereMaterial);\n    }\n    function createEffectorMesh() {\n      return new Mesh(scope.sphereGeometry, scope.effectorSphereMaterial);\n    }\n    function createLinkMesh() {\n      return new Mesh(scope.sphereGeometry, scope.linkSphereMaterial);\n    }\n    function createLine(ik) {\n      return new Line(createLineGeometry(ik), scope.lineMaterial);\n    }\n    for (let i = 0, il = iks.length; i < il; i++) {\n      const ik = iks[i];\n      this.add(createTargetMesh());\n      this.add(createEffectorMesh());\n      for (let j = 0, jl = ik.links.length; j < jl; j++) {\n        this.add(createLinkMesh());\n      }\n      this.add(createLine(ik));\n    }\n  }\n}\nexport {\n  CCDIKHelper,\n  CCDIKSolver\n};\n//# sourceMappingURL=CCDIKSolver.js.map\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 9983, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9989, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/animation/MMDPhysics.js"],"sourcesContent":["import { Vector3, Matrix4, Quaternion, Euler, Bone, Object3D, MeshBasicMaterial, Color, Mesh, BoxGeometry, SphereGeometry } from \"three\";\nimport { CapsuleGeometry } from \"../_polyfill/CapsuleGeometry.js\";\nclass MMDPhysics {\n  /**\n   * @param {THREE.SkinnedMesh} mesh\n   * @param {Array<Object>} rigidBodyParams\n   * @param {Array<Object>} (optional) constraintParams\n   * @param {Object} params - (optional)\n   * @param {Number} params.unitStep - Default is 1 / 65.\n   * @param {Integer} params.maxStepNum - Default is 3.\n   * @param {Vector3} params.gravity - Default is ( 0, - 9.8 * 10, 0 )\n   */\n  constructor(mesh, rigidBodyParams, constraintParams = [], params = {}) {\n    if (typeof Ammo === \"undefined\") {\n      throw new Error(\"THREE.MMDPhysics: Import ammo.js https://github.com/kripken/ammo.js\");\n    }\n    this.manager = new ResourceManager();\n    this.mesh = mesh;\n    this.unitStep = params.unitStep !== void 0 ? params.unitStep : 1 / 65;\n    this.maxStepNum = params.maxStepNum !== void 0 ? params.maxStepNum : 3;\n    this.gravity = new Vector3(0, -9.8 * 10, 0);\n    if (params.gravity !== void 0)\n      this.gravity.copy(params.gravity);\n    this.world = params.world !== void 0 ? params.world : null;\n    this.bodies = [];\n    this.constraints = [];\n    this._init(mesh, rigidBodyParams, constraintParams);\n  }\n  /**\n   * Advances Physics calculation and updates bones.\n   *\n   * @param {Number} delta - time in second\n   * @return {MMDPhysics}\n   */\n  update(delta) {\n    const manager = this.manager;\n    const mesh = this.mesh;\n    let isNonDefaultScale = false;\n    const position = manager.allocThreeVector3();\n    const quaternion = manager.allocThreeQuaternion();\n    const scale = manager.allocThreeVector3();\n    mesh.matrixWorld.decompose(position, quaternion, scale);\n    if (scale.x !== 1 || scale.y !== 1 || scale.z !== 1) {\n      isNonDefaultScale = true;\n    }\n    let parent;\n    if (isNonDefaultScale) {\n      parent = mesh.parent;\n      if (parent !== null)\n        mesh.parent = null;\n      scale.copy(this.mesh.scale);\n      mesh.scale.set(1, 1, 1);\n      mesh.updateMatrixWorld(true);\n    }\n    this._updateRigidBodies();\n    this._stepSimulation(delta);\n    this._updateBones();\n    if (isNonDefaultScale) {\n      if (parent !== null)\n        mesh.parent = parent;\n      mesh.scale.copy(scale);\n    }\n    manager.freeThreeVector3(scale);\n    manager.freeThreeQuaternion(quaternion);\n    manager.freeThreeVector3(position);\n    return this;\n  }\n  /**\n   * Resets rigid bodies transorm to current bone's.\n   *\n   * @return {MMDPhysics}\n   */\n  reset() {\n    for (let i = 0, il = this.bodies.length; i < il; i++) {\n      this.bodies[i].reset();\n    }\n    return this;\n  }\n  /**\n   * Warm ups Rigid bodies. Calculates cycles steps.\n   *\n   * @param {Integer} cycles\n   * @return {MMDPhysics}\n   */\n  warmup(cycles) {\n    for (let i = 0; i < cycles; i++) {\n      this.update(1 / 60);\n    }\n    return this;\n  }\n  /**\n   * Sets gravity.\n   *\n   * @param {Vector3} gravity\n   * @return {MMDPhysicsHelper}\n   */\n  setGravity(gravity) {\n    this.world.setGravity(new Ammo.btVector3(gravity.x, gravity.y, gravity.z));\n    this.gravity.copy(gravity);\n    return this;\n  }\n  /**\n   * Creates MMDPhysicsHelper\n   *\n   * @return {MMDPhysicsHelper}\n   */\n  createHelper() {\n    return new MMDPhysicsHelper(this.mesh, this);\n  }\n  // private methods\n  _init(mesh, rigidBodyParams, constraintParams) {\n    const manager = this.manager;\n    const parent = mesh.parent;\n    if (parent !== null)\n      mesh.parent = null;\n    const currentPosition = manager.allocThreeVector3();\n    const currentQuaternion = manager.allocThreeQuaternion();\n    const currentScale = manager.allocThreeVector3();\n    currentPosition.copy(mesh.position);\n    currentQuaternion.copy(mesh.quaternion);\n    currentScale.copy(mesh.scale);\n    mesh.position.set(0, 0, 0);\n    mesh.quaternion.set(0, 0, 0, 1);\n    mesh.scale.set(1, 1, 1);\n    mesh.updateMatrixWorld(true);\n    if (this.world === null) {\n      this.world = this._createWorld();\n      this.setGravity(this.gravity);\n    }\n    this._initRigidBodies(rigidBodyParams);\n    this._initConstraints(constraintParams);\n    if (parent !== null)\n      mesh.parent = parent;\n    mesh.position.copy(currentPosition);\n    mesh.quaternion.copy(currentQuaternion);\n    mesh.scale.copy(currentScale);\n    mesh.updateMatrixWorld(true);\n    this.reset();\n    manager.freeThreeVector3(currentPosition);\n    manager.freeThreeQuaternion(currentQuaternion);\n    manager.freeThreeVector3(currentScale);\n  }\n  _createWorld() {\n    const config = new Ammo.btDefaultCollisionConfiguration();\n    const dispatcher = new Ammo.btCollisionDispatcher(config);\n    const cache = new Ammo.btDbvtBroadphase();\n    const solver = new Ammo.btSequentialImpulseConstraintSolver();\n    const world = new Ammo.btDiscreteDynamicsWorld(dispatcher, cache, solver, config);\n    return world;\n  }\n  _initRigidBodies(rigidBodies) {\n    for (let i = 0, il = rigidBodies.length; i < il; i++) {\n      this.bodies.push(new RigidBody(this.mesh, this.world, rigidBodies[i], this.manager));\n    }\n  }\n  _initConstraints(constraints) {\n    for (let i = 0, il = constraints.length; i < il; i++) {\n      const params = constraints[i];\n      const bodyA = this.bodies[params.rigidBodyIndex1];\n      const bodyB = this.bodies[params.rigidBodyIndex2];\n      this.constraints.push(new Constraint(this.mesh, this.world, bodyA, bodyB, params, this.manager));\n    }\n  }\n  _stepSimulation(delta) {\n    const unitStep = this.unitStep;\n    let stepTime = delta;\n    let maxStepNum = (delta / unitStep | 0) + 1;\n    if (stepTime < unitStep) {\n      stepTime = unitStep;\n      maxStepNum = 1;\n    }\n    if (maxStepNum > this.maxStepNum) {\n      maxStepNum = this.maxStepNum;\n    }\n    this.world.stepSimulation(stepTime, maxStepNum, unitStep);\n  }\n  _updateRigidBodies() {\n    for (let i = 0, il = this.bodies.length; i < il; i++) {\n      this.bodies[i].updateFromBone();\n    }\n  }\n  _updateBones() {\n    for (let i = 0, il = this.bodies.length; i < il; i++) {\n      this.bodies[i].updateBone();\n    }\n  }\n}\nclass ResourceManager {\n  constructor() {\n    this.threeVector3s = [];\n    this.threeMatrix4s = [];\n    this.threeQuaternions = [];\n    this.threeEulers = [];\n    this.transforms = [];\n    this.quaternions = [];\n    this.vector3s = [];\n  }\n  allocThreeVector3() {\n    return this.threeVector3s.length > 0 ? this.threeVector3s.pop() : new Vector3();\n  }\n  freeThreeVector3(v) {\n    this.threeVector3s.push(v);\n  }\n  allocThreeMatrix4() {\n    return this.threeMatrix4s.length > 0 ? this.threeMatrix4s.pop() : new Matrix4();\n  }\n  freeThreeMatrix4(m) {\n    this.threeMatrix4s.push(m);\n  }\n  allocThreeQuaternion() {\n    return this.threeQuaternions.length > 0 ? this.threeQuaternions.pop() : new Quaternion();\n  }\n  freeThreeQuaternion(q) {\n    this.threeQuaternions.push(q);\n  }\n  allocThreeEuler() {\n    return this.threeEulers.length > 0 ? this.threeEulers.pop() : new Euler();\n  }\n  freeThreeEuler(e) {\n    this.threeEulers.push(e);\n  }\n  allocTransform() {\n    return this.transforms.length > 0 ? this.transforms.pop() : new Ammo.btTransform();\n  }\n  freeTransform(t) {\n    this.transforms.push(t);\n  }\n  allocQuaternion() {\n    return this.quaternions.length > 0 ? this.quaternions.pop() : new Ammo.btQuaternion();\n  }\n  freeQuaternion(q) {\n    this.quaternions.push(q);\n  }\n  allocVector3() {\n    return this.vector3s.length > 0 ? this.vector3s.pop() : new Ammo.btVector3();\n  }\n  freeVector3(v) {\n    this.vector3s.push(v);\n  }\n  setIdentity(t) {\n    t.setIdentity();\n  }\n  getBasis(t) {\n    var q = this.allocQuaternion();\n    t.getBasis().getRotation(q);\n    return q;\n  }\n  getBasisAsMatrix3(t) {\n    var q = this.getBasis(t);\n    var m = this.quaternionToMatrix3(q);\n    this.freeQuaternion(q);\n    return m;\n  }\n  getOrigin(t) {\n    return t.getOrigin();\n  }\n  setOrigin(t, v) {\n    t.getOrigin().setValue(v.x(), v.y(), v.z());\n  }\n  copyOrigin(t1, t2) {\n    var o = t2.getOrigin();\n    this.setOrigin(t1, o);\n  }\n  setBasis(t, q) {\n    t.setRotation(q);\n  }\n  setBasisFromMatrix3(t, m) {\n    var q = this.matrix3ToQuaternion(m);\n    this.setBasis(t, q);\n    this.freeQuaternion(q);\n  }\n  setOriginFromArray3(t, a) {\n    t.getOrigin().setValue(a[0], a[1], a[2]);\n  }\n  setOriginFromThreeVector3(t, v) {\n    t.getOrigin().setValue(v.x, v.y, v.z);\n  }\n  setBasisFromArray3(t, a) {\n    var thQ = this.allocThreeQuaternion();\n    var thE = this.allocThreeEuler();\n    thE.set(a[0], a[1], a[2]);\n    this.setBasisFromThreeQuaternion(t, thQ.setFromEuler(thE));\n    this.freeThreeEuler(thE);\n    this.freeThreeQuaternion(thQ);\n  }\n  setBasisFromThreeQuaternion(t, a) {\n    var q = this.allocQuaternion();\n    q.setX(a.x);\n    q.setY(a.y);\n    q.setZ(a.z);\n    q.setW(a.w);\n    this.setBasis(t, q);\n    this.freeQuaternion(q);\n  }\n  multiplyTransforms(t1, t2) {\n    var t = this.allocTransform();\n    this.setIdentity(t);\n    var m1 = this.getBasisAsMatrix3(t1);\n    var m2 = this.getBasisAsMatrix3(t2);\n    var o1 = this.getOrigin(t1);\n    var o2 = this.getOrigin(t2);\n    var v1 = this.multiplyMatrix3ByVector3(m1, o2);\n    var v2 = this.addVector3(v1, o1);\n    this.setOrigin(t, v2);\n    var m3 = this.multiplyMatrices3(m1, m2);\n    this.setBasisFromMatrix3(t, m3);\n    this.freeVector3(v1);\n    this.freeVector3(v2);\n    return t;\n  }\n  inverseTransform(t) {\n    var t2 = this.allocTransform();\n    var m1 = this.getBasisAsMatrix3(t);\n    var o = this.getOrigin(t);\n    var m2 = this.transposeMatrix3(m1);\n    var v1 = this.negativeVector3(o);\n    var v2 = this.multiplyMatrix3ByVector3(m2, v1);\n    this.setOrigin(t2, v2);\n    this.setBasisFromMatrix3(t2, m2);\n    this.freeVector3(v1);\n    this.freeVector3(v2);\n    return t2;\n  }\n  multiplyMatrices3(m1, m2) {\n    var m3 = [];\n    var v10 = this.rowOfMatrix3(m1, 0);\n    var v11 = this.rowOfMatrix3(m1, 1);\n    var v12 = this.rowOfMatrix3(m1, 2);\n    var v20 = this.columnOfMatrix3(m2, 0);\n    var v21 = this.columnOfMatrix3(m2, 1);\n    var v22 = this.columnOfMatrix3(m2, 2);\n    m3[0] = this.dotVectors3(v10, v20);\n    m3[1] = this.dotVectors3(v10, v21);\n    m3[2] = this.dotVectors3(v10, v22);\n    m3[3] = this.dotVectors3(v11, v20);\n    m3[4] = this.dotVectors3(v11, v21);\n    m3[5] = this.dotVectors3(v11, v22);\n    m3[6] = this.dotVectors3(v12, v20);\n    m3[7] = this.dotVectors3(v12, v21);\n    m3[8] = this.dotVectors3(v12, v22);\n    this.freeVector3(v10);\n    this.freeVector3(v11);\n    this.freeVector3(v12);\n    this.freeVector3(v20);\n    this.freeVector3(v21);\n    this.freeVector3(v22);\n    return m3;\n  }\n  addVector3(v1, v2) {\n    var v = this.allocVector3();\n    v.setValue(v1.x() + v2.x(), v1.y() + v2.y(), v1.z() + v2.z());\n    return v;\n  }\n  dotVectors3(v1, v2) {\n    return v1.x() * v2.x() + v1.y() * v2.y() + v1.z() * v2.z();\n  }\n  rowOfMatrix3(m, i) {\n    var v = this.allocVector3();\n    v.setValue(m[i * 3 + 0], m[i * 3 + 1], m[i * 3 + 2]);\n    return v;\n  }\n  columnOfMatrix3(m, i) {\n    var v = this.allocVector3();\n    v.setValue(m[i + 0], m[i + 3], m[i + 6]);\n    return v;\n  }\n  negativeVector3(v) {\n    var v2 = this.allocVector3();\n    v2.setValue(-v.x(), -v.y(), -v.z());\n    return v2;\n  }\n  multiplyMatrix3ByVector3(m, v) {\n    var v4 = this.allocVector3();\n    var v0 = this.rowOfMatrix3(m, 0);\n    var v1 = this.rowOfMatrix3(m, 1);\n    var v2 = this.rowOfMatrix3(m, 2);\n    var x = this.dotVectors3(v0, v);\n    var y = this.dotVectors3(v1, v);\n    var z = this.dotVectors3(v2, v);\n    v4.setValue(x, y, z);\n    this.freeVector3(v0);\n    this.freeVector3(v1);\n    this.freeVector3(v2);\n    return v4;\n  }\n  transposeMatrix3(m) {\n    var m2 = [];\n    m2[0] = m[0];\n    m2[1] = m[3];\n    m2[2] = m[6];\n    m2[3] = m[1];\n    m2[4] = m[4];\n    m2[5] = m[7];\n    m2[6] = m[2];\n    m2[7] = m[5];\n    m2[8] = m[8];\n    return m2;\n  }\n  quaternionToMatrix3(q) {\n    var m = [];\n    var x = q.x();\n    var y = q.y();\n    var z = q.z();\n    var w = q.w();\n    var xx = x * x;\n    var yy = y * y;\n    var zz = z * z;\n    var xy = x * y;\n    var yz = y * z;\n    var zx = z * x;\n    var xw = x * w;\n    var yw = y * w;\n    var zw = z * w;\n    m[0] = 1 - 2 * (yy + zz);\n    m[1] = 2 * (xy - zw);\n    m[2] = 2 * (zx + yw);\n    m[3] = 2 * (xy + zw);\n    m[4] = 1 - 2 * (zz + xx);\n    m[5] = 2 * (yz - xw);\n    m[6] = 2 * (zx - yw);\n    m[7] = 2 * (yz + xw);\n    m[8] = 1 - 2 * (xx + yy);\n    return m;\n  }\n  matrix3ToQuaternion(m) {\n    var t = m[0] + m[4] + m[8];\n    var s, x, y, z, w;\n    if (t > 0) {\n      s = Math.sqrt(t + 1) * 2;\n      w = 0.25 * s;\n      x = (m[7] - m[5]) / s;\n      y = (m[2] - m[6]) / s;\n      z = (m[3] - m[1]) / s;\n    } else if (m[0] > m[4] && m[0] > m[8]) {\n      s = Math.sqrt(1 + m[0] - m[4] - m[8]) * 2;\n      w = (m[7] - m[5]) / s;\n      x = 0.25 * s;\n      y = (m[1] + m[3]) / s;\n      z = (m[2] + m[6]) / s;\n    } else if (m[4] > m[8]) {\n      s = Math.sqrt(1 + m[4] - m[0] - m[8]) * 2;\n      w = (m[2] - m[6]) / s;\n      x = (m[1] + m[3]) / s;\n      y = 0.25 * s;\n      z = (m[5] + m[7]) / s;\n    } else {\n      s = Math.sqrt(1 + m[8] - m[0] - m[4]) * 2;\n      w = (m[3] - m[1]) / s;\n      x = (m[2] + m[6]) / s;\n      y = (m[5] + m[7]) / s;\n      z = 0.25 * s;\n    }\n    var q = this.allocQuaternion();\n    q.setX(x);\n    q.setY(y);\n    q.setZ(z);\n    q.setW(w);\n    return q;\n  }\n}\nclass RigidBody {\n  constructor(mesh, world, params, manager) {\n    this.mesh = mesh;\n    this.world = world;\n    this.params = params;\n    this.manager = manager;\n    this.body = null;\n    this.bone = null;\n    this.boneOffsetForm = null;\n    this.boneOffsetFormInverse = null;\n    this._init();\n  }\n  /**\n   * Resets rigid body transform to the current bone's.\n   *\n   * @return {RigidBody}\n   */\n  reset() {\n    this._setTransformFromBone();\n    return this;\n  }\n  /**\n   * Updates rigid body's transform from the current bone.\n   *\n   * @return {RidigBody}\n   */\n  updateFromBone() {\n    if (this.params.boneIndex !== -1 && this.params.type === 0) {\n      this._setTransformFromBone();\n    }\n    return this;\n  }\n  /**\n   * Updates bone from the current ridid body's transform.\n   *\n   * @return {RidigBody}\n   */\n  updateBone() {\n    if (this.params.type === 0 || this.params.boneIndex === -1) {\n      return this;\n    }\n    this._updateBoneRotation();\n    if (this.params.type === 1) {\n      this._updateBonePosition();\n    }\n    this.bone.updateMatrixWorld(true);\n    if (this.params.type === 2) {\n      this._setPositionFromBone();\n    }\n    return this;\n  }\n  // private methods\n  _init() {\n    function generateShape(p) {\n      switch (p.shapeType) {\n        case 0:\n          return new Ammo.btSphereShape(p.width);\n        case 1:\n          return new Ammo.btBoxShape(new Ammo.btVector3(p.width, p.height, p.depth));\n        case 2:\n          return new Ammo.btCapsuleShape(p.width, p.height);\n        default:\n          throw new Error(\"unknown shape type \" + p.shapeType);\n      }\n    }\n    const manager = this.manager;\n    const params = this.params;\n    const bones = this.mesh.skeleton.bones;\n    const bone = params.boneIndex === -1 ? new Bone() : bones[params.boneIndex];\n    const shape = generateShape(params);\n    const weight = params.type === 0 ? 0 : params.weight;\n    const localInertia = manager.allocVector3();\n    localInertia.setValue(0, 0, 0);\n    if (weight !== 0) {\n      shape.calculateLocalInertia(weight, localInertia);\n    }\n    const boneOffsetForm = manager.allocTransform();\n    manager.setIdentity(boneOffsetForm);\n    manager.setOriginFromArray3(boneOffsetForm, params.position);\n    manager.setBasisFromArray3(boneOffsetForm, params.rotation);\n    const vector = manager.allocThreeVector3();\n    const boneForm = manager.allocTransform();\n    manager.setIdentity(boneForm);\n    manager.setOriginFromThreeVector3(boneForm, bone.getWorldPosition(vector));\n    const form = manager.multiplyTransforms(boneForm, boneOffsetForm);\n    const state = new Ammo.btDefaultMotionState(form);\n    const info = new Ammo.btRigidBodyConstructionInfo(weight, state, shape, localInertia);\n    info.set_m_friction(params.friction);\n    info.set_m_restitution(params.restitution);\n    const body = new Ammo.btRigidBody(info);\n    if (params.type === 0) {\n      body.setCollisionFlags(body.getCollisionFlags() | 2);\n      body.setActivationState(4);\n    }\n    body.setDamping(params.positionDamping, params.rotationDamping);\n    body.setSleepingThresholds(0, 0);\n    this.world.addRigidBody(body, 1 << params.groupIndex, params.groupTarget);\n    this.body = body;\n    this.bone = bone;\n    this.boneOffsetForm = boneOffsetForm;\n    this.boneOffsetFormInverse = manager.inverseTransform(boneOffsetForm);\n    manager.freeVector3(localInertia);\n    manager.freeTransform(form);\n    manager.freeTransform(boneForm);\n    manager.freeThreeVector3(vector);\n  }\n  _getBoneTransform() {\n    const manager = this.manager;\n    const p = manager.allocThreeVector3();\n    const q = manager.allocThreeQuaternion();\n    const s = manager.allocThreeVector3();\n    this.bone.matrixWorld.decompose(p, q, s);\n    const tr = manager.allocTransform();\n    manager.setOriginFromThreeVector3(tr, p);\n    manager.setBasisFromThreeQuaternion(tr, q);\n    const form = manager.multiplyTransforms(tr, this.boneOffsetForm);\n    manager.freeTransform(tr);\n    manager.freeThreeVector3(s);\n    manager.freeThreeQuaternion(q);\n    manager.freeThreeVector3(p);\n    return form;\n  }\n  _getWorldTransformForBone() {\n    const manager = this.manager;\n    const tr = this.body.getCenterOfMassTransform();\n    return manager.multiplyTransforms(tr, this.boneOffsetFormInverse);\n  }\n  _setTransformFromBone() {\n    const manager = this.manager;\n    const form = this._getBoneTransform();\n    this.body.setCenterOfMassTransform(form);\n    this.body.getMotionState().setWorldTransform(form);\n    manager.freeTransform(form);\n  }\n  _setPositionFromBone() {\n    const manager = this.manager;\n    const form = this._getBoneTransform();\n    const tr = manager.allocTransform();\n    this.body.getMotionState().getWorldTransform(tr);\n    manager.copyOrigin(tr, form);\n    this.body.setCenterOfMassTransform(tr);\n    this.body.getMotionState().setWorldTransform(tr);\n    manager.freeTransform(tr);\n    manager.freeTransform(form);\n  }\n  _updateBoneRotation() {\n    const manager = this.manager;\n    const tr = this._getWorldTransformForBone();\n    const q = manager.getBasis(tr);\n    const thQ = manager.allocThreeQuaternion();\n    const thQ2 = manager.allocThreeQuaternion();\n    const thQ3 = manager.allocThreeQuaternion();\n    thQ.set(q.x(), q.y(), q.z(), q.w());\n    thQ2.setFromRotationMatrix(this.bone.matrixWorld);\n    thQ2.conjugate();\n    thQ2.multiply(thQ);\n    thQ3.setFromRotationMatrix(this.bone.matrix);\n    this.bone.quaternion.copy(thQ2.multiply(thQ3).normalize());\n    manager.freeThreeQuaternion(thQ);\n    manager.freeThreeQuaternion(thQ2);\n    manager.freeThreeQuaternion(thQ3);\n    manager.freeQuaternion(q);\n    manager.freeTransform(tr);\n  }\n  _updateBonePosition() {\n    const manager = this.manager;\n    const tr = this._getWorldTransformForBone();\n    const thV = manager.allocThreeVector3();\n    const o = manager.getOrigin(tr);\n    thV.set(o.x(), o.y(), o.z());\n    if (this.bone.parent) {\n      this.bone.parent.worldToLocal(thV);\n    }\n    this.bone.position.copy(thV);\n    manager.freeThreeVector3(thV);\n    manager.freeTransform(tr);\n  }\n}\nclass Constraint {\n  /**\n   * @param {THREE.SkinnedMesh} mesh\n   * @param {Ammo.btDiscreteDynamicsWorld} world\n   * @param {RigidBody} bodyA\n   * @param {RigidBody} bodyB\n   * @param {Object} params\n   * @param {ResourceManager} manager\n   */\n  constructor(mesh, world, bodyA, bodyB, params, manager) {\n    this.mesh = mesh;\n    this.world = world;\n    this.bodyA = bodyA;\n    this.bodyB = bodyB;\n    this.params = params;\n    this.manager = manager;\n    this.constraint = null;\n    this._init();\n  }\n  // private method\n  _init() {\n    const manager = this.manager;\n    const params = this.params;\n    const bodyA = this.bodyA;\n    const bodyB = this.bodyB;\n    const form = manager.allocTransform();\n    manager.setIdentity(form);\n    manager.setOriginFromArray3(form, params.position);\n    manager.setBasisFromArray3(form, params.rotation);\n    const formA = manager.allocTransform();\n    const formB = manager.allocTransform();\n    bodyA.body.getMotionState().getWorldTransform(formA);\n    bodyB.body.getMotionState().getWorldTransform(formB);\n    const formInverseA = manager.inverseTransform(formA);\n    const formInverseB = manager.inverseTransform(formB);\n    const formA2 = manager.multiplyTransforms(formInverseA, form);\n    const formB2 = manager.multiplyTransforms(formInverseB, form);\n    const constraint = new Ammo.btGeneric6DofSpringConstraint(bodyA.body, bodyB.body, formA2, formB2, true);\n    const lll = manager.allocVector3();\n    const lul = manager.allocVector3();\n    const all = manager.allocVector3();\n    const aul = manager.allocVector3();\n    lll.setValue(params.translationLimitation1[0], params.translationLimitation1[1], params.translationLimitation1[2]);\n    lul.setValue(params.translationLimitation2[0], params.translationLimitation2[1], params.translationLimitation2[2]);\n    all.setValue(params.rotationLimitation1[0], params.rotationLimitation1[1], params.rotationLimitation1[2]);\n    aul.setValue(params.rotationLimitation2[0], params.rotationLimitation2[1], params.rotationLimitation2[2]);\n    constraint.setLinearLowerLimit(lll);\n    constraint.setLinearUpperLimit(lul);\n    constraint.setAngularLowerLimit(all);\n    constraint.setAngularUpperLimit(aul);\n    for (let i = 0; i < 3; i++) {\n      if (params.springPosition[i] !== 0) {\n        constraint.enableSpring(i, true);\n        constraint.setStiffness(i, params.springPosition[i]);\n      }\n    }\n    for (let i = 0; i < 3; i++) {\n      if (params.springRotation[i] !== 0) {\n        constraint.enableSpring(i + 3, true);\n        constraint.setStiffness(i + 3, params.springRotation[i]);\n      }\n    }\n    if (constraint.setParam !== void 0) {\n      for (let i = 0; i < 6; i++) {\n        constraint.setParam(2, 0.475, i);\n      }\n    }\n    this.world.addConstraint(constraint, true);\n    this.constraint = constraint;\n    manager.freeTransform(form);\n    manager.freeTransform(formA);\n    manager.freeTransform(formB);\n    manager.freeTransform(formInverseA);\n    manager.freeTransform(formInverseB);\n    manager.freeTransform(formA2);\n    manager.freeTransform(formB2);\n    manager.freeVector3(lll);\n    manager.freeVector3(lul);\n    manager.freeVector3(all);\n    manager.freeVector3(aul);\n  }\n}\nconst _position = /* @__PURE__ */ new Vector3();\nconst _quaternion = /* @__PURE__ */ new Quaternion();\nconst _scale = /* @__PURE__ */ new Vector3();\nconst _matrixWorldInv = /* @__PURE__ */ new Matrix4();\nclass MMDPhysicsHelper extends Object3D {\n  /**\n   * Visualize Rigid bodies\n   *\n   * @param {THREE.SkinnedMesh} mesh\n   * @param {Physics} physics\n   */\n  constructor(mesh, physics) {\n    super();\n    this.root = mesh;\n    this.physics = physics;\n    this.matrix.copy(mesh.matrixWorld);\n    this.matrixAutoUpdate = false;\n    this.materials = [];\n    this.materials.push(\n      new MeshBasicMaterial({\n        color: new Color(16746632),\n        wireframe: true,\n        depthTest: false,\n        depthWrite: false,\n        opacity: 0.25,\n        transparent: true\n      })\n    );\n    this.materials.push(\n      new MeshBasicMaterial({\n        color: new Color(8978312),\n        wireframe: true,\n        depthTest: false,\n        depthWrite: false,\n        opacity: 0.25,\n        transparent: true\n      })\n    );\n    this.materials.push(\n      new MeshBasicMaterial({\n        color: new Color(8947967),\n        wireframe: true,\n        depthTest: false,\n        depthWrite: false,\n        opacity: 0.25,\n        transparent: true\n      })\n    );\n    this._init();\n  }\n  /**\n   * Frees the GPU-related resources allocated by this instance. Call this method whenever this instance is no longer used in your app.\n   */\n  dispose() {\n    const materials = this.materials;\n    const children = this.children;\n    for (let i = 0; i < materials.length; i++) {\n      materials[i].dispose();\n    }\n    for (let i = 0; i < children.length; i++) {\n      const child = children[i];\n      if (child.isMesh)\n        child.geometry.dispose();\n    }\n  }\n  /**\n   * Updates Rigid Bodies visualization.\n   */\n  updateMatrixWorld(force) {\n    var mesh = this.root;\n    if (this.visible) {\n      var bodies = this.physics.bodies;\n      _matrixWorldInv.copy(mesh.matrixWorld).decompose(_position, _quaternion, _scale).compose(_position, _quaternion, _scale.set(1, 1, 1)).invert();\n      for (var i = 0, il = bodies.length; i < il; i++) {\n        var body = bodies[i].body;\n        var child = this.children[i];\n        var tr = body.getCenterOfMassTransform();\n        var origin = tr.getOrigin();\n        var rotation = tr.getRotation();\n        child.position.set(origin.x(), origin.y(), origin.z()).applyMatrix4(_matrixWorldInv);\n        child.quaternion.setFromRotationMatrix(_matrixWorldInv).multiply(_quaternion.set(rotation.x(), rotation.y(), rotation.z(), rotation.w()));\n      }\n    }\n    this.matrix.copy(mesh.matrixWorld).decompose(_position, _quaternion, _scale).compose(_position, _quaternion, _scale.set(1, 1, 1));\n    super.updateMatrixWorld(force);\n  }\n  // private method\n  _init() {\n    var bodies = this.physics.bodies;\n    function createGeometry(param2) {\n      switch (param2.shapeType) {\n        case 0:\n          return new SphereGeometry(param2.width, 16, 8);\n        case 1:\n          return new BoxGeometry(param2.width * 2, param2.height * 2, param2.depth * 2, 8, 8, 8);\n        case 2:\n          return new CapsuleGeometry(param2.width, param2.height, 8, 16);\n        default:\n          return null;\n      }\n    }\n    for (var i = 0, il = bodies.length; i < il; i++) {\n      var param = bodies[i].params;\n      this.add(new Mesh(createGeometry(param), this.materials[param.type]));\n    }\n  }\n}\nexport {\n  MMDPhysics\n};\n//# sourceMappingURL=MMDPhysics.js.map\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 10798, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10804, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/animation/MMDAnimationHelper.js"],"sourcesContent":["import { Object3D, Vector3, Quaternion, AnimationMixer } from \"three\";\nimport { CCDIKSolver } from \"./CCDIKSolver.js\";\nimport { MMDPhysics } from \"./MMDPhysics.js\";\nclass MMDAnimationHelper {\n  /**\n   * @param {Object} params - (optional)\n   * @param {boolean} params.sync - Whether animation durations of added objects are synched. Default is true.\n   * @param {Number} params.afterglow - Default is 0.0.\n   * @param {boolean} params.resetPhysicsOnLoop - Default is true.\n   */\n  constructor(params = {}) {\n    this.meshes = [];\n    this.camera = null;\n    this.cameraTarget = new Object3D();\n    this.cameraTarget.name = \"target\";\n    this.audio = null;\n    this.audioManager = null;\n    this.objects = /* @__PURE__ */ new WeakMap();\n    this.configuration = {\n      sync: params.sync !== void 0 ? params.sync : true,\n      afterglow: params.afterglow !== void 0 ? params.afterglow : 0,\n      resetPhysicsOnLoop: params.resetPhysicsOnLoop !== void 0 ? params.resetPhysicsOnLoop : true,\n      pmxAnimation: params.pmxAnimation !== void 0 ? params.pmxAnimation : false\n    };\n    this.enabled = {\n      animation: true,\n      ik: true,\n      grant: true,\n      physics: true,\n      cameraAnimation: true\n    };\n    this.onBeforePhysics = function() {\n    };\n    this.sharedPhysics = false;\n    this.masterPhysics = null;\n  }\n  /**\n   * Adds an Three.js Object to helper and setups animation.\n   * The anmation durations of added objects are synched\n   * if this.configuration.sync is true.\n   *\n   * @param {THREE.SkinnedMesh|THREE.Camera|THREE.Audio} object\n   * @param {Object} params - (optional)\n   * @param {THREE.AnimationClip|Array<THREE.AnimationClip>} params.animation - Only for THREE.SkinnedMesh and THREE.Camera. Default is undefined.\n   * @param {boolean} params.physics - Only for THREE.SkinnedMesh. Default is true.\n   * @param {Integer} params.warmup - Only for THREE.SkinnedMesh and physics is true. Default is 60.\n   * @param {Number} params.unitStep - Only for THREE.SkinnedMesh and physics is true. Default is 1 / 65.\n   * @param {Integer} params.maxStepNum - Only for THREE.SkinnedMesh and physics is true. Default is 3.\n   * @param {Vector3} params.gravity - Only for THREE.SkinnedMesh and physics is true. Default ( 0, - 9.8 * 10, 0 ).\n   * @param {Number} params.delayTime - Only for THREE.Audio. Default is 0.0.\n   * @return {MMDAnimationHelper}\n   */\n  add(object, params = {}) {\n    if (object.isSkinnedMesh) {\n      this._addMesh(object, params);\n    } else if (object.isCamera) {\n      this._setupCamera(object, params);\n    } else if (object.type === \"Audio\") {\n      this._setupAudio(object, params);\n    } else {\n      throw new Error(\n        \"THREE.MMDAnimationHelper.add: accepts only THREE.SkinnedMesh or THREE.Camera or THREE.Audio instance.\"\n      );\n    }\n    if (this.configuration.sync)\n      this._syncDuration();\n    return this;\n  }\n  /**\n   * Removes an Three.js Object from helper.\n   *\n   * @param {THREE.SkinnedMesh|THREE.Camera|THREE.Audio} object\n   * @return {MMDAnimationHelper}\n   */\n  remove(object) {\n    if (object.isSkinnedMesh) {\n      this._removeMesh(object);\n    } else if (object.isCamera) {\n      this._clearCamera(object);\n    } else if (object.type === \"Audio\") {\n      this._clearAudio(object);\n    } else {\n      throw new Error(\n        \"THREE.MMDAnimationHelper.remove: accepts only THREE.SkinnedMesh or THREE.Camera or THREE.Audio instance.\"\n      );\n    }\n    if (this.configuration.sync)\n      this._syncDuration();\n    return this;\n  }\n  /**\n   * Updates the animation.\n   *\n   * @param {Number} delta\n   * @return {MMDAnimationHelper}\n   */\n  update(delta) {\n    if (this.audioManager !== null)\n      this.audioManager.control(delta);\n    for (let i = 0; i < this.meshes.length; i++) {\n      this._animateMesh(this.meshes[i], delta);\n    }\n    if (this.sharedPhysics)\n      this._updateSharedPhysics(delta);\n    if (this.camera !== null)\n      this._animateCamera(this.camera, delta);\n    return this;\n  }\n  /**\n   * Changes the pose of SkinnedMesh as VPD specifies.\n   *\n   * @param {THREE.SkinnedMesh} mesh\n   * @param {Object} vpd - VPD content parsed MMDParser\n   * @param {Object} params - (optional)\n   * @param {boolean} params.resetPose - Default is true.\n   * @param {boolean} params.ik - Default is true.\n   * @param {boolean} params.grant - Default is true.\n   * @return {MMDAnimationHelper}\n   */\n  pose(mesh, vpd, params = {}) {\n    if (params.resetPose !== false)\n      mesh.pose();\n    const bones = mesh.skeleton.bones;\n    const boneParams = vpd.bones;\n    const boneNameDictionary = {};\n    for (let i = 0, il = bones.length; i < il; i++) {\n      boneNameDictionary[bones[i].name] = i;\n    }\n    const vector = new Vector3();\n    const quaternion = new Quaternion();\n    for (let i = 0, il = boneParams.length; i < il; i++) {\n      const boneParam = boneParams[i];\n      const boneIndex = boneNameDictionary[boneParam.name];\n      if (boneIndex === void 0)\n        continue;\n      const bone = bones[boneIndex];\n      bone.position.add(vector.fromArray(boneParam.translation));\n      bone.quaternion.multiply(quaternion.fromArray(boneParam.quaternion));\n    }\n    mesh.updateMatrixWorld(true);\n    if (this.configuration.pmxAnimation && mesh.geometry.userData.MMD && mesh.geometry.userData.MMD.format === \"pmx\") {\n      const sortedBonesData = this._sortBoneDataArray(mesh.geometry.userData.MMD.bones.slice());\n      const ikSolver = params.ik !== false ? this._createCCDIKSolver(mesh) : null;\n      const grantSolver = params.grant !== false ? this.createGrantSolver(mesh) : null;\n      this._animatePMXMesh(mesh, sortedBonesData, ikSolver, grantSolver);\n    } else {\n      if (params.ik !== false) {\n        this._createCCDIKSolver(mesh).update();\n      }\n      if (params.grant !== false) {\n        this.createGrantSolver(mesh).update();\n      }\n    }\n    return this;\n  }\n  /**\n   * Enabes/Disables an animation feature.\n   *\n   * @param {string} key\n   * @param {boolean} enabled\n   * @return {MMDAnimationHelper}\n   */\n  enable(key, enabled) {\n    if (this.enabled[key] === void 0) {\n      throw new Error(\"THREE.MMDAnimationHelper.enable: unknown key \" + key);\n    }\n    this.enabled[key] = enabled;\n    if (key === \"physics\") {\n      for (let i = 0, il = this.meshes.length; i < il; i++) {\n        this._optimizeIK(this.meshes[i], enabled);\n      }\n    }\n    return this;\n  }\n  /**\n   * Creates an GrantSolver instance.\n   *\n   * @param {THREE.SkinnedMesh} mesh\n   * @return {GrantSolver}\n   */\n  createGrantSolver(mesh) {\n    return new GrantSolver(mesh, mesh.geometry.userData.MMD.grants);\n  }\n  // private methods\n  _addMesh(mesh, params) {\n    if (this.meshes.indexOf(mesh) >= 0) {\n      throw new Error(\"THREE.MMDAnimationHelper._addMesh: SkinnedMesh '\" + mesh.name + \"' has already been added.\");\n    }\n    this.meshes.push(mesh);\n    this.objects.set(mesh, { looped: false });\n    this._setupMeshAnimation(mesh, params.animation);\n    if (params.physics !== false) {\n      this._setupMeshPhysics(mesh, params);\n    }\n    return this;\n  }\n  _setupCamera(camera, params) {\n    if (this.camera === camera) {\n      throw new Error(\"THREE.MMDAnimationHelper._setupCamera: Camera '\" + camera.name + \"' has already been set.\");\n    }\n    if (this.camera)\n      this.clearCamera(this.camera);\n    this.camera = camera;\n    camera.add(this.cameraTarget);\n    this.objects.set(camera, {});\n    if (params.animation !== void 0) {\n      this._setupCameraAnimation(camera, params.animation);\n    }\n    return this;\n  }\n  _setupAudio(audio, params) {\n    if (this.audio === audio) {\n      throw new Error(\"THREE.MMDAnimationHelper._setupAudio: Audio '\" + audio.name + \"' has already been set.\");\n    }\n    if (this.audio)\n      this.clearAudio(this.audio);\n    this.audio = audio;\n    this.audioManager = new AudioManager(audio, params);\n    this.objects.set(this.audioManager, {\n      duration: this.audioManager.duration\n    });\n    return this;\n  }\n  _removeMesh(mesh) {\n    let found = false;\n    let writeIndex = 0;\n    for (let i = 0, il = this.meshes.length; i < il; i++) {\n      if (this.meshes[i] === mesh) {\n        this.objects.delete(mesh);\n        found = true;\n        continue;\n      }\n      this.meshes[writeIndex++] = this.meshes[i];\n    }\n    if (!found) {\n      throw new Error(\n        \"THREE.MMDAnimationHelper._removeMesh: SkinnedMesh '\" + mesh.name + \"' has not been added yet.\"\n      );\n    }\n    this.meshes.length = writeIndex;\n    return this;\n  }\n  _clearCamera(camera) {\n    if (camera !== this.camera) {\n      throw new Error(\"THREE.MMDAnimationHelper._clearCamera: Camera '\" + camera.name + \"' has not been set yet.\");\n    }\n    this.camera.remove(this.cameraTarget);\n    this.objects.delete(this.camera);\n    this.camera = null;\n    return this;\n  }\n  _clearAudio(audio) {\n    if (audio !== this.audio) {\n      throw new Error(\"THREE.MMDAnimationHelper._clearAudio: Audio '\" + audio.name + \"' has not been set yet.\");\n    }\n    this.objects.delete(this.audioManager);\n    this.audio = null;\n    this.audioManager = null;\n    return this;\n  }\n  _setupMeshAnimation(mesh, animation) {\n    const objects = this.objects.get(mesh);\n    if (animation !== void 0) {\n      const animations = Array.isArray(animation) ? animation : [animation];\n      objects.mixer = new AnimationMixer(mesh);\n      for (let i = 0, il = animations.length; i < il; i++) {\n        objects.mixer.clipAction(animations[i]).play();\n      }\n      objects.mixer.addEventListener(\"loop\", function(event) {\n        const tracks = event.action._clip.tracks;\n        if (tracks.length > 0 && tracks[0].name.slice(0, 6) !== \".bones\")\n          return;\n        objects.looped = true;\n      });\n    }\n    objects.ikSolver = this._createCCDIKSolver(mesh);\n    objects.grantSolver = this.createGrantSolver(mesh);\n    return this;\n  }\n  _setupCameraAnimation(camera, animation) {\n    const animations = Array.isArray(animation) ? animation : [animation];\n    const objects = this.objects.get(camera);\n    objects.mixer = new AnimationMixer(camera);\n    for (let i = 0, il = animations.length; i < il; i++) {\n      objects.mixer.clipAction(animations[i]).play();\n    }\n  }\n  _setupMeshPhysics(mesh, params) {\n    const objects = this.objects.get(mesh);\n    if (params.world === void 0 && this.sharedPhysics) {\n      const masterPhysics = this._getMasterPhysics();\n      if (masterPhysics !== null)\n        world = masterPhysics.world;\n    }\n    objects.physics = this._createMMDPhysics(mesh, params);\n    if (objects.mixer && params.animationWarmup !== false) {\n      this._animateMesh(mesh, 0);\n      objects.physics.reset();\n    }\n    objects.physics.warmup(params.warmup !== void 0 ? params.warmup : 60);\n    this._optimizeIK(mesh, true);\n  }\n  _animateMesh(mesh, delta) {\n    const objects = this.objects.get(mesh);\n    const mixer = objects.mixer;\n    const ikSolver = objects.ikSolver;\n    const grantSolver = objects.grantSolver;\n    const physics = objects.physics;\n    const looped = objects.looped;\n    if (mixer && this.enabled.animation) {\n      this._restoreBones(mesh);\n      mixer.update(delta);\n      this._saveBones(mesh);\n      if (this.configuration.pmxAnimation && mesh.geometry.userData.MMD && mesh.geometry.userData.MMD.format === \"pmx\") {\n        if (!objects.sortedBonesData)\n          objects.sortedBonesData = this._sortBoneDataArray(mesh.geometry.userData.MMD.bones.slice());\n        this._animatePMXMesh(\n          mesh,\n          objects.sortedBonesData,\n          ikSolver && this.enabled.ik ? ikSolver : null,\n          grantSolver && this.enabled.grant ? grantSolver : null\n        );\n      } else {\n        if (ikSolver && this.enabled.ik) {\n          mesh.updateMatrixWorld(true);\n          ikSolver.update();\n        }\n        if (grantSolver && this.enabled.grant) {\n          grantSolver.update();\n        }\n      }\n    }\n    if (looped === true && this.enabled.physics) {\n      if (physics && this.configuration.resetPhysicsOnLoop)\n        physics.reset();\n      objects.looped = false;\n    }\n    if (physics && this.enabled.physics && !this.sharedPhysics) {\n      this.onBeforePhysics(mesh);\n      physics.update(delta);\n    }\n  }\n  // Sort bones in order by 1. transformationClass and 2. bone index.\n  // In PMX animation system, bone transformations should be processed\n  // in this order.\n  _sortBoneDataArray(boneDataArray) {\n    return boneDataArray.sort(function(a, b) {\n      if (a.transformationClass !== b.transformationClass) {\n        return a.transformationClass - b.transformationClass;\n      } else {\n        return a.index - b.index;\n      }\n    });\n  }\n  // PMX Animation system is a bit too complex and doesn't great match to\n  // Three.js Animation system. This method attempts to simulate it as much as\n  // possible but doesn't perfectly simulate.\n  // This method is more costly than the regular one so\n  // you are recommended to set constructor parameter \"pmxAnimation: true\"\n  // only if your PMX model animation doesn't work well.\n  // If you need better method you would be required to write your own.\n  _animatePMXMesh(mesh, sortedBonesData, ikSolver, grantSolver) {\n    _quaternionIndex = 0;\n    _grantResultMap.clear();\n    for (let i = 0, il = sortedBonesData.length; i < il; i++) {\n      updateOne(mesh, sortedBonesData[i].index, ikSolver, grantSolver);\n    }\n    mesh.updateMatrixWorld(true);\n    return this;\n  }\n  _animateCamera(camera, delta) {\n    const mixer = this.objects.get(camera).mixer;\n    if (mixer && this.enabled.cameraAnimation) {\n      mixer.update(delta);\n      camera.updateProjectionMatrix();\n      camera.up.set(0, 1, 0);\n      camera.up.applyQuaternion(camera.quaternion);\n      camera.lookAt(this.cameraTarget.position);\n    }\n  }\n  _optimizeIK(mesh, physicsEnabled) {\n    const iks = mesh.geometry.userData.MMD.iks;\n    const bones = mesh.geometry.userData.MMD.bones;\n    for (let i = 0, il = iks.length; i < il; i++) {\n      const ik = iks[i];\n      const links = ik.links;\n      for (let j = 0, jl = links.length; j < jl; j++) {\n        const link = links[j];\n        if (physicsEnabled === true) {\n          link.enabled = bones[link.index].rigidBodyType > 0 ? false : true;\n        } else {\n          link.enabled = true;\n        }\n      }\n    }\n  }\n  _createCCDIKSolver(mesh) {\n    if (CCDIKSolver === void 0) {\n      throw new Error(\"THREE.MMDAnimationHelper: Import CCDIKSolver.\");\n    }\n    return new CCDIKSolver(mesh, mesh.geometry.userData.MMD.iks);\n  }\n  _createMMDPhysics(mesh, params) {\n    if (MMDPhysics === void 0) {\n      throw new Error(\"THREE.MMDPhysics: Import MMDPhysics.\");\n    }\n    return new MMDPhysics(mesh, mesh.geometry.userData.MMD.rigidBodies, mesh.geometry.userData.MMD.constraints, params);\n  }\n  /*\n   * Detects the longest duration and then sets it to them to sync.\n   * TODO: Not to access private properties ( ._actions and ._clip )\n   */\n  _syncDuration() {\n    let max = 0;\n    const objects = this.objects;\n    const meshes = this.meshes;\n    const camera = this.camera;\n    const audioManager = this.audioManager;\n    for (let i = 0, il = meshes.length; i < il; i++) {\n      const mixer = this.objects.get(meshes[i]).mixer;\n      if (mixer === void 0)\n        continue;\n      for (let j = 0; j < mixer._actions.length; j++) {\n        const clip = mixer._actions[j]._clip;\n        if (!objects.has(clip)) {\n          objects.set(clip, {\n            duration: clip.duration\n          });\n        }\n        max = Math.max(max, objects.get(clip).duration);\n      }\n    }\n    if (camera !== null) {\n      const mixer = this.objects.get(camera).mixer;\n      if (mixer !== void 0) {\n        for (let i = 0, il = mixer._actions.length; i < il; i++) {\n          const clip = mixer._actions[i]._clip;\n          if (!objects.has(clip)) {\n            objects.set(clip, {\n              duration: clip.duration\n            });\n          }\n          max = Math.max(max, objects.get(clip).duration);\n        }\n      }\n    }\n    if (audioManager !== null) {\n      max = Math.max(max, objects.get(audioManager).duration);\n    }\n    max += this.configuration.afterglow;\n    for (let i = 0, il = this.meshes.length; i < il; i++) {\n      const mixer = this.objects.get(this.meshes[i]).mixer;\n      if (mixer === void 0)\n        continue;\n      for (let j = 0, jl = mixer._actions.length; j < jl; j++) {\n        mixer._actions[j]._clip.duration = max;\n      }\n    }\n    if (camera !== null) {\n      const mixer = this.objects.get(camera).mixer;\n      if (mixer !== void 0) {\n        for (let i = 0, il = mixer._actions.length; i < il; i++) {\n          mixer._actions[i]._clip.duration = max;\n        }\n      }\n    }\n    if (audioManager !== null) {\n      audioManager.duration = max;\n    }\n  }\n  // workaround\n  _updatePropertyMixersBuffer(mesh) {\n    const mixer = this.objects.get(mesh).mixer;\n    const propertyMixers = mixer._bindings;\n    const accuIndex = mixer._accuIndex;\n    for (let i = 0, il = propertyMixers.length; i < il; i++) {\n      const propertyMixer = propertyMixers[i];\n      const buffer = propertyMixer.buffer;\n      const stride = propertyMixer.valueSize;\n      const offset = (accuIndex + 1) * stride;\n      propertyMixer.binding.getValue(buffer, offset);\n    }\n  }\n  /*\n   * Avoiding these two issues by restore/save bones before/after mixer animation.\n   *\n   * 1. PropertyMixer used by AnimationMixer holds cache value in .buffer.\n   *    Calculating IK, Grant, and Physics after mixer animation can break\n   *    the cache coherency.\n   *\n   * 2. Applying Grant two or more times without reset the posing breaks model.\n   */\n  _saveBones(mesh) {\n    const objects = this.objects.get(mesh);\n    const bones = mesh.skeleton.bones;\n    let backupBones = objects.backupBones;\n    if (backupBones === void 0) {\n      backupBones = new Float32Array(bones.length * 7);\n      objects.backupBones = backupBones;\n    }\n    for (let i = 0, il = bones.length; i < il; i++) {\n      const bone = bones[i];\n      bone.position.toArray(backupBones, i * 7);\n      bone.quaternion.toArray(backupBones, i * 7 + 3);\n    }\n  }\n  _restoreBones(mesh) {\n    const objects = this.objects.get(mesh);\n    const backupBones = objects.backupBones;\n    if (backupBones === void 0)\n      return;\n    const bones = mesh.skeleton.bones;\n    for (let i = 0, il = bones.length; i < il; i++) {\n      const bone = bones[i];\n      bone.position.fromArray(backupBones, i * 7);\n      bone.quaternion.fromArray(backupBones, i * 7 + 3);\n    }\n  }\n  // experimental\n  _getMasterPhysics() {\n    if (this.masterPhysics !== null)\n      return this.masterPhysics;\n    for (let i = 0, il = this.meshes.length; i < il; i++) {\n      const physics = this.meshes[i].physics;\n      if (physics !== void 0 && physics !== null) {\n        this.masterPhysics = physics;\n        return this.masterPhysics;\n      }\n    }\n    return null;\n  }\n  _updateSharedPhysics(delta) {\n    if (this.meshes.length === 0 || !this.enabled.physics || !this.sharedPhysics)\n      return;\n    const physics = this._getMasterPhysics();\n    if (physics === null)\n      return;\n    for (let i = 0, il = this.meshes.length; i < il; i++) {\n      const p = this.meshes[i].physics;\n      if (p !== null && p !== void 0) {\n        p.updateRigidBodies();\n      }\n    }\n    physics.stepSimulation(delta);\n    for (let i = 0, il = this.meshes.length; i < il; i++) {\n      const p = this.meshes[i].physics;\n      if (p !== null && p !== void 0) {\n        p.updateBones();\n      }\n    }\n  }\n}\nconst _quaternions = [];\nlet _quaternionIndex = 0;\nfunction getQuaternion() {\n  if (_quaternionIndex >= _quaternions.length) {\n    _quaternions.push(new Quaternion());\n  }\n  return _quaternions[_quaternionIndex++];\n}\nconst _grantResultMap = /* @__PURE__ */ new Map();\nfunction updateOne(mesh, boneIndex, ikSolver, grantSolver) {\n  const bones = mesh.skeleton.bones;\n  const bonesData = mesh.geometry.userData.MMD.bones;\n  const boneData = bonesData[boneIndex];\n  const bone = bones[boneIndex];\n  if (_grantResultMap.has(boneIndex))\n    return;\n  const quaternion = getQuaternion();\n  _grantResultMap.set(boneIndex, quaternion.copy(bone.quaternion));\n  if (grantSolver && boneData.grant && !boneData.grant.isLocal && boneData.grant.affectRotation) {\n    const parentIndex = boneData.grant.parentIndex;\n    const ratio = boneData.grant.ratio;\n    if (!_grantResultMap.has(parentIndex)) {\n      updateOne(mesh, parentIndex, ikSolver, grantSolver);\n    }\n    grantSolver.addGrantRotation(bone, _grantResultMap.get(parentIndex), ratio);\n  }\n  if (ikSolver && boneData.ik) {\n    mesh.updateMatrixWorld(true);\n    ikSolver.updateOne(boneData.ik);\n    const links = boneData.ik.links;\n    for (let i = 0, il = links.length; i < il; i++) {\n      const link = links[i];\n      if (link.enabled === false)\n        continue;\n      const linkIndex = link.index;\n      if (_grantResultMap.has(linkIndex)) {\n        _grantResultMap.set(linkIndex, _grantResultMap.get(linkIndex).copy(bones[linkIndex].quaternion));\n      }\n    }\n  }\n  quaternion.copy(bone.quaternion);\n}\nclass AudioManager {\n  /**\n   * @param {THREE.Audio} audio\n   * @param {Object} params - (optional)\n   * @param {Nuumber} params.delayTime\n   */\n  constructor(audio, params = {}) {\n    this.audio = audio;\n    this.elapsedTime = 0;\n    this.currentTime = 0;\n    this.delayTime = params.delayTime !== void 0 ? params.delayTime : 0;\n    this.audioDuration = this.audio.buffer.duration;\n    this.duration = this.audioDuration + this.delayTime;\n  }\n  /**\n   * @param {Number} delta\n   * @return {AudioManager}\n   */\n  control(delta) {\n    this.elapsed += delta;\n    this.currentTime += delta;\n    if (this._shouldStopAudio())\n      this.audio.stop();\n    if (this._shouldStartAudio())\n      this.audio.play();\n    return this;\n  }\n  // private methods\n  _shouldStartAudio() {\n    if (this.audio.isPlaying)\n      return false;\n    while (this.currentTime >= this.duration) {\n      this.currentTime -= this.duration;\n    }\n    if (this.currentTime < this.delayTime)\n      return false;\n    if (this.currentTime - this.delayTime > this.audioDuration)\n      return false;\n    return true;\n  }\n  _shouldStopAudio() {\n    return this.audio.isPlaying && this.currentTime >= this.duration;\n  }\n}\nconst _q = /* @__PURE__ */ new Quaternion();\nclass GrantSolver {\n  constructor(mesh, grants = []) {\n    this.mesh = mesh;\n    this.grants = grants;\n  }\n  /**\n   * Solve all the grant bones\n   * @return {GrantSolver}\n   */\n  update() {\n    const grants = this.grants;\n    for (let i = 0, il = grants.length; i < il; i++) {\n      this.updateOne(grants[i]);\n    }\n    return this;\n  }\n  /**\n   * Solve a grant bone\n   * @param {Object} grant - grant parameter\n   * @return {GrantSolver}\n   */\n  updateOne(grant) {\n    const bones = this.mesh.skeleton.bones;\n    const bone = bones[grant.index];\n    const parentBone = bones[grant.parentIndex];\n    if (grant.isLocal) {\n      if (grant.affectPosition)\n        ;\n      if (grant.affectRotation)\n        ;\n    } else {\n      if (grant.affectPosition)\n        ;\n      if (grant.affectRotation) {\n        this.addGrantRotation(bone, parentBone.quaternion, grant.ratio);\n      }\n    }\n    return this;\n  }\n  addGrantRotation(bone, q, ratio) {\n    _q.set(0, 0, 0, 1);\n    _q.slerp(q, ratio);\n    bone.quaternion.multiply(_q);\n    return this;\n  }\n}\nexport {\n  MMDAnimationHelper\n};\n//# sourceMappingURL=MMDAnimationHelper.js.map\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 11449, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 11455, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/cameras/CinematicCamera.js"],"sourcesContent":["import { PerspectiveCamera, ShaderMaterial, Scene, OrthographicCamera, WebGLRenderTarget, UniformsUtils, Mesh, PlaneGeometry } from \"three\";\nimport { BokehDepthShader, BokehShader2 } from \"../shaders/BokehShader2.js\";\nclass CinematicCamera extends PerspectiveCamera {\n  constructor(fov, aspect, near, far) {\n    super(fov, aspect, near, far);\n    this.type = \"CinematicCamera\";\n    this.postprocessing = { enabled: true };\n    this.shaderSettings = {\n      rings: 3,\n      samples: 4\n    };\n    const depthShader = BokehDepthShader;\n    this.materialDepth = new ShaderMaterial({\n      uniforms: depthShader.uniforms,\n      vertexShader: depthShader.vertexShader,\n      fragmentShader: depthShader.fragmentShader\n    });\n    this.materialDepth.uniforms[\"mNear\"].value = near;\n    this.materialDepth.uniforms[\"mFar\"].value = far;\n    this.setLens();\n    this.initPostProcessing();\n  }\n  // providing fnumber and coc(Circle of Confusion) as extra arguments\n  setLens(focalLength, filmGauge, fNumber, coc) {\n    if (focalLength === void 0)\n      focalLength = 35;\n    if (filmGauge !== void 0)\n      this.filmGauge = filmGauge;\n    this.setFocalLength(focalLength);\n    if (fNumber === void 0)\n      fNumber = 8;\n    if (coc === void 0)\n      coc = 0.019;\n    this.fNumber = fNumber;\n    this.coc = coc;\n    this.aperture = focalLength / this.fNumber;\n    this.hyperFocal = focalLength * focalLength / (this.aperture * this.coc);\n  }\n  linearize(depth) {\n    const zfar = this.far;\n    const znear = this.near;\n    return -zfar * znear / (depth * (zfar - znear) - zfar);\n  }\n  smoothstep(near, far, depth) {\n    const x = this.saturate((depth - near) / (far - near));\n    return x * x * (3 - 2 * x);\n  }\n  saturate(x) {\n    return Math.max(0, Math.min(1, x));\n  }\n  // function for focusing at a distance from the camera\n  focusAt(focusDistance) {\n    if (focusDistance === void 0)\n      focusDistance = 20;\n    const focalLength = this.getFocalLength();\n    this.focus = focusDistance;\n    this.nearPoint = this.hyperFocal * this.focus / (this.hyperFocal + (this.focus - focalLength));\n    this.farPoint = this.hyperFocal * this.focus / (this.hyperFocal - (this.focus - focalLength));\n    this.depthOfField = this.farPoint - this.nearPoint;\n    if (this.depthOfField < 0)\n      this.depthOfField = 0;\n    this.sdistance = this.smoothstep(this.near, this.far, this.focus);\n    this.ldistance = this.linearize(1 - this.sdistance);\n    this.postprocessing.bokeh_uniforms[\"focalDepth\"].value = this.ldistance;\n  }\n  initPostProcessing() {\n    if (this.postprocessing.enabled) {\n      this.postprocessing.scene = new Scene();\n      this.postprocessing.camera = new OrthographicCamera(\n        window.innerWidth / -2,\n        window.innerWidth / 2,\n        window.innerHeight / 2,\n        window.innerHeight / -2,\n        -1e4,\n        1e4\n      );\n      this.postprocessing.scene.add(this.postprocessing.camera);\n      this.postprocessing.rtTextureDepth = new WebGLRenderTarget(window.innerWidth, window.innerHeight);\n      this.postprocessing.rtTextureColor = new WebGLRenderTarget(window.innerWidth, window.innerHeight);\n      const bokeh_shader = BokehShader2;\n      this.postprocessing.bokeh_uniforms = UniformsUtils.clone(bokeh_shader.uniforms);\n      this.postprocessing.bokeh_uniforms[\"tColor\"].value = this.postprocessing.rtTextureColor.texture;\n      this.postprocessing.bokeh_uniforms[\"tDepth\"].value = this.postprocessing.rtTextureDepth.texture;\n      this.postprocessing.bokeh_uniforms[\"manualdof\"].value = 0;\n      this.postprocessing.bokeh_uniforms[\"shaderFocus\"].value = 0;\n      this.postprocessing.bokeh_uniforms[\"fstop\"].value = 2.8;\n      this.postprocessing.bokeh_uniforms[\"showFocus\"].value = 1;\n      this.postprocessing.bokeh_uniforms[\"focalDepth\"].value = 0.1;\n      this.postprocessing.bokeh_uniforms[\"znear\"].value = this.near;\n      this.postprocessing.bokeh_uniforms[\"zfar\"].value = this.near;\n      this.postprocessing.bokeh_uniforms[\"textureWidth\"].value = window.innerWidth;\n      this.postprocessing.bokeh_uniforms[\"textureHeight\"].value = window.innerHeight;\n      this.postprocessing.materialBokeh = new ShaderMaterial({\n        uniforms: this.postprocessing.bokeh_uniforms,\n        vertexShader: bokeh_shader.vertexShader,\n        fragmentShader: bokeh_shader.fragmentShader,\n        defines: {\n          RINGS: this.shaderSettings.rings,\n          SAMPLES: this.shaderSettings.samples,\n          DEPTH_PACKING: 1\n        }\n      });\n      this.postprocessing.quad = new Mesh(\n        new PlaneGeometry(window.innerWidth, window.innerHeight),\n        this.postprocessing.materialBokeh\n      );\n      this.postprocessing.quad.position.z = -500;\n      this.postprocessing.scene.add(this.postprocessing.quad);\n    }\n  }\n  renderCinematic(scene, renderer) {\n    if (this.postprocessing.enabled) {\n      const currentRenderTarget = renderer.getRenderTarget();\n      renderer.clear();\n      scene.overrideMaterial = null;\n      renderer.setRenderTarget(this.postprocessing.rtTextureColor);\n      renderer.clear();\n      renderer.render(scene, this);\n      scene.overrideMaterial = this.materialDepth;\n      renderer.setRenderTarget(this.postprocessing.rtTextureDepth);\n      renderer.clear();\n      renderer.render(scene, this);\n      renderer.setRenderTarget(null);\n      renderer.render(this.postprocessing.scene, this.postprocessing.camera);\n      renderer.setRenderTarget(currentRenderTarget);\n    }\n  }\n}\nexport {\n  CinematicCamera\n};\n//# sourceMappingURL=CinematicCamera.js.map\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 11576, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 11582, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/webxr/ARButton.js"],"sourcesContent":["const ARButton = {\n  createButton(renderer, sessionInit = {}) {\n    const button = document.createElement(\"button\");\n    function showStartAR() {\n      if (sessionInit.domOverlay === void 0) {\n        const overlay = document.createElement(\"div\");\n        overlay.style.display = \"none\";\n        document.body.appendChild(overlay);\n        const svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n        svg.setAttribute(\"width\", \"38px\");\n        svg.setAttribute(\"height\", \"38px\");\n        svg.style.position = \"absolute\";\n        svg.style.right = \"20px\";\n        svg.style.top = \"20px\";\n        svg.addEventListener(\"click\", function() {\n          currentSession == null ? void 0 : currentSession.end();\n        });\n        overlay.appendChild(svg);\n        const path = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n        path.setAttribute(\"d\", \"M 12,12 L 28,28 M 28,12 12,28\");\n        path.setAttribute(\"stroke\", \"#fff\");\n        path.setAttribute(\"stroke-width\", \"2px\");\n        svg.appendChild(path);\n        if (sessionInit.optionalFeatures === void 0) {\n          sessionInit.optionalFeatures = [];\n        }\n        sessionInit.optionalFeatures.push(\"dom-overlay\");\n        sessionInit.domOverlay = { root: overlay };\n      }\n      let currentSession = null;\n      async function onSessionStarted(session) {\n        session.addEventListener(\"end\", onSessionEnded);\n        renderer.xr.setReferenceSpaceType(\"local\");\n        await renderer.xr.setSession(session);\n        button.textContent = \"STOP AR\";\n        sessionInit.domOverlay.root.style.display = \"\";\n        currentSession = session;\n      }\n      function onSessionEnded() {\n        currentSession.removeEventListener(\"end\", onSessionEnded);\n        button.textContent = \"START AR\";\n        sessionInit.domOverlay.root.style.display = \"none\";\n        currentSession = null;\n      }\n      button.style.display = \"\";\n      button.style.cursor = \"pointer\";\n      button.style.left = \"calc(50% - 50px)\";\n      button.style.width = \"100px\";\n      button.textContent = \"START AR\";\n      button.onmouseenter = () => {\n        button.style.opacity = \"1.0\";\n      };\n      button.onmouseleave = () => {\n        button.style.opacity = \"0.5\";\n      };\n      button.onclick = () => {\n        if (currentSession === null) {\n          navigator.xr.requestSession(\"immersive-ar\", sessionInit).then(onSessionStarted);\n        } else {\n          currentSession.end();\n        }\n      };\n    }\n    function disableButton() {\n      button.style.display = \"\";\n      button.style.cursor = \"auto\";\n      button.style.left = \"calc(50% - 75px)\";\n      button.style.width = \"150px\";\n      button.onmouseenter = null;\n      button.onmouseleave = null;\n      button.onclick = null;\n    }\n    function showARNotSupported() {\n      disableButton();\n      button.textContent = \"AR NOT SUPPORTED\";\n    }\n    function stylizeElement(element) {\n      element.style.position = \"absolute\";\n      element.style.bottom = \"20px\";\n      element.style.padding = \"12px 6px\";\n      element.style.border = \"1px solid #fff\";\n      element.style.borderRadius = \"4px\";\n      element.style.background = \"rgba(0,0,0,0.1)\";\n      element.style.color = \"#fff\";\n      element.style.font = \"normal 13px sans-serif\";\n      element.style.textAlign = \"center\";\n      element.style.opacity = \"0.5\";\n      element.style.outline = \"none\";\n      element.style.zIndex = \"999\";\n    }\n    if (\"xr\" in navigator) {\n      button.id = \"ARButton\";\n      button.style.display = \"none\";\n      stylizeElement(button);\n      navigator.xr.isSessionSupported(\"immersive-ar\").then(function(supported) {\n        supported ? showStartAR() : showARNotSupported();\n      }).catch(showARNotSupported);\n      return button;\n    } else {\n      const message = document.createElement(\"a\");\n      if (window.isSecureContext === false) {\n        message.href = document.location.href.replace(/^http:/, \"https:\");\n        message.innerHTML = \"WEBXR NEEDS HTTPS\";\n      } else {\n        message.href = \"https://immersiveweb.dev/\";\n        message.innerHTML = \"WEBXR NOT AVAILABLE\";\n      }\n      message.style.left = \"calc(50% - 90px)\";\n      message.style.width = \"180px\";\n      message.style.textDecoration = \"none\";\n      stylizeElement(message);\n      return message;\n    }\n  }\n};\nexport {\n  ARButton\n};\n//# sourceMappingURL=ARButton.js.map\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 11704, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 11710, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/webxr/OculusHandModel.js"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nimport { Object3D, Sphere, Box3 } from \"three\";\nimport { XRHandMeshModel } from \"./XRHandMeshModel.js\";\nconst TOUCH_RADIUS = 0.01;\nconst POINTING_JOINT = \"index-finger-tip\";\nclass OculusHandModel extends Object3D {\n  constructor(controller, leftModelPath, rightModelPath) {\n    super();\n    __publicField(this, \"controller\");\n    __publicField(this, \"motionController\");\n    __publicField(this, \"envMap\");\n    __publicField(this, \"mesh\");\n    __publicField(this, \"xrInputSource\");\n    this.controller = controller;\n    this.motionController = null;\n    this.envMap = null;\n    this.mesh = null;\n    this.xrInputSource = null;\n    controller.addEventListener(\"connected\", (event) => {\n      const xrInputSource = event.data;\n      if (xrInputSource.hand && !this.motionController) {\n        this.xrInputSource = xrInputSource;\n        this.motionController = new XRHandMeshModel(\n          this,\n          controller,\n          void 0,\n          xrInputSource.handedness,\n          xrInputSource.handedness === \"left\" ? leftModelPath : rightModelPath\n        );\n      }\n    });\n    controller.addEventListener(\"disconnected\", () => {\n      this.dispose();\n    });\n  }\n  updateMatrixWorld(force) {\n    super.updateMatrixWorld(force);\n    if (this.motionController) {\n      this.motionController.updateMesh();\n    }\n  }\n  getPointerPosition() {\n    const indexFingerTip = this.controller.joints[POINTING_JOINT];\n    if (indexFingerTip) {\n      return indexFingerTip.position;\n    } else {\n      return null;\n    }\n  }\n  intersectBoxObject(boxObject) {\n    const pointerPosition = this.getPointerPosition();\n    if (pointerPosition) {\n      const indexSphere = new Sphere(pointerPosition, TOUCH_RADIUS);\n      const box = new Box3().setFromObject(boxObject);\n      return indexSphere.intersectsBox(box);\n    } else {\n      return false;\n    }\n  }\n  checkButton(button) {\n    if (this.intersectBoxObject(button)) {\n      button.onPress();\n    } else {\n      button.onClear();\n    }\n    if (button.isPressed()) {\n      button.whilePressed();\n    }\n  }\n  dispose() {\n    this.clear();\n    this.motionController = null;\n  }\n}\nexport {\n  OculusHandModel\n};\n//# sourceMappingURL=OculusHandModel.js.map\n"],"names":[],"mappings":";;;;;;;;AAMA;AANA,IAAI,YAAY,OAAO,cAAc;AACrC,IAAI,kBAAkB,CAAC,KAAK,KAAK,QAAU,OAAO,MAAM,UAAU,KAAK,KAAK;QAAE,YAAY;QAAM,cAAc;QAAM,UAAU;QAAM;IAAM,KAAK,GAAG,CAAC,IAAI,GAAG;AAC1J,IAAI,gBAAgB,CAAC,KAAK,KAAK;IAC7B,gBAAgB,KAAK,OAAO,QAAQ,WAAW,MAAM,KAAK,KAAK;IAC/D,OAAO;AACT;;;AAGA,MAAM,eAAe;AACrB,MAAM,iBAAiB;AACvB,MAAM,wBAAwB,kJAAA,CAAA,WAAQ;IACpC,YAAY,UAAU,EAAE,aAAa,EAAE,cAAc,CAAE;QACrD,KAAK;QACL,cAAc,IAAI,EAAE;QACpB,cAAc,IAAI,EAAE;QACpB,cAAc,IAAI,EAAE;QACpB,cAAc,IAAI,EAAE;QACpB,cAAc,IAAI,EAAE;QACpB,IAAI,CAAC,UAAU,GAAG;QAClB,IAAI,CAAC,gBAAgB,GAAG;QACxB,IAAI,CAAC,MAAM,GAAG;QACd,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,aAAa,GAAG;QACrB,WAAW,gBAAgB,CAAC,aAAa,CAAC;YACxC,MAAM,gBAAgB,MAAM,IAAI;YAChC,IAAI,cAAc,IAAI,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE;gBAChD,IAAI,CAAC,aAAa,GAAG;gBACrB,IAAI,CAAC,gBAAgB,GAAG,IAAI,gBAC1B,IAAI,EACJ,YACA,KAAK,GACL,cAAc,UAAU,EACxB,cAAc,UAAU,KAAK,SAAS,gBAAgB;YAE1D;QACF;QACA,WAAW,gBAAgB,CAAC,gBAAgB;YAC1C,IAAI,CAAC,OAAO;QACd;IACF;IACA,kBAAkB,KAAK,EAAE;QACvB,KAAK,CAAC,kBAAkB;QACxB,IAAI,IAAI,CAAC,gBAAgB,EAAE;YACzB,IAAI,CAAC,gBAAgB,CAAC,UAAU;QAClC;IACF;IACA,qBAAqB;QACnB,MAAM,iBAAiB,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,eAAe;QAC7D,IAAI,gBAAgB;YAClB,OAAO,eAAe,QAAQ;QAChC,OAAO;YACL,OAAO;QACT;IACF;IACA,mBAAmB,SAAS,EAAE;QAC5B,MAAM,kBAAkB,IAAI,CAAC,kBAAkB;QAC/C,IAAI,iBAAiB;YACnB,MAAM,cAAc,IAAI,kJAAA,CAAA,SAAM,CAAC,iBAAiB;YAChD,MAAM,MAAM,IAAI,kJAAA,CAAA,OAAI,GAAG,aAAa,CAAC;YACrC,OAAO,YAAY,aAAa,CAAC;QACnC,OAAO;YACL,OAAO;QACT;IACF;IACA,YAAY,MAAM,EAAE;QAClB,IAAI,IAAI,CAAC,kBAAkB,CAAC,SAAS;YACnC,OAAO,OAAO;QAChB,OAAO;YACL,OAAO,OAAO;QAChB;QACA,IAAI,OAAO,SAAS,IAAI;YACtB,OAAO,YAAY;QACrB;IACF;IACA,UAAU;QACR,IAAI,CAAC,KAAK;QACV,IAAI,CAAC,gBAAgB,GAAG;IAC1B;AACF;;CAIA,2CAA2C","ignoreList":[0]}},
    {"offset": {"line": 11799, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 11805, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/webxr/OculusHandPointerModel.js"],"sourcesContent":["import * as THREE from \"three\";\nconst PINCH_MAX = 0.05;\nconst PINCH_THRESHOLD = 0.02;\nconst PINCH_MIN = 0.01;\nconst POINTER_ADVANCE_MAX = 0.02;\nconst POINTER_OPACITY_MAX = 1;\nconst POINTER_OPACITY_MIN = 0.4;\nconst POINTER_FRONT_RADIUS = 2e-3;\nconst POINTER_REAR_RADIUS = 0.01;\nconst POINTER_REAR_RADIUS_MIN = 3e-3;\nconst POINTER_LENGTH = 0.035;\nconst POINTER_SEGMENTS = 16;\nconst POINTER_RINGS = 12;\nconst POINTER_HEMISPHERE_ANGLE = 110;\nconst YAXIS = /* @__PURE__ */ new THREE.Vector3(0, 1, 0);\nconst ZAXIS = /* @__PURE__ */ new THREE.Vector3(0, 0, 1);\nconst CURSOR_RADIUS = 0.02;\nconst CURSOR_MAX_DISTANCE = 1.5;\nclass OculusHandPointerModel extends THREE.Object3D {\n  constructor(hand, controller) {\n    super();\n    this.hand = hand;\n    this.controller = controller;\n    this.motionController = null;\n    this.envMap = null;\n    this.mesh = null;\n    this.pointerGeometry = null;\n    this.pointerMesh = null;\n    this.pointerObject = null;\n    this.pinched = false;\n    this.attached = false;\n    this.cursorObject = null;\n    this.raycaster = null;\n    this._onConnected = this._onConnected.bind(this);\n    this._onDisconnected = this._onDisconnected.bind(this);\n    this.hand.addEventListener(\"connected\", this._onConnected);\n    this.hand.addEventListener(\"disconnected\", this._onDisconnected);\n  }\n  _onConnected(event) {\n    const xrInputSource = event.data;\n    if (xrInputSource.hand) {\n      this.visible = true;\n      this.xrInputSource = xrInputSource;\n      this.createPointer();\n    }\n  }\n  _onDisconnected() {\n    var _a, _b;\n    this.visible = false;\n    this.xrInputSource = null;\n    (_a = this.pointerGeometry) == null ? void 0 : _a.dispose();\n    (_b = this.pointerMesh) == null ? void 0 : _b.material.dispose();\n    this.clear();\n  }\n  _drawVerticesRing(vertices, baseVector, ringIndex) {\n    const segmentVector = baseVector.clone();\n    for (var i = 0; i < POINTER_SEGMENTS; i++) {\n      segmentVector.applyAxisAngle(ZAXIS, Math.PI * 2 / POINTER_SEGMENTS);\n      const vid = ringIndex * POINTER_SEGMENTS + i;\n      vertices[3 * vid] = segmentVector.x;\n      vertices[3 * vid + 1] = segmentVector.y;\n      vertices[3 * vid + 2] = segmentVector.z;\n    }\n  }\n  _updatePointerVertices(rearRadius) {\n    const vertices = this.pointerGeometry.attributes.position.array;\n    const frontFaceBase = new THREE.Vector3(POINTER_FRONT_RADIUS, 0, -1 * (POINTER_LENGTH - rearRadius));\n    this._drawVerticesRing(vertices, frontFaceBase, 0);\n    const rearBase = new THREE.Vector3(\n      Math.sin(Math.PI * POINTER_HEMISPHERE_ANGLE / 180) * rearRadius,\n      Math.cos(Math.PI * POINTER_HEMISPHERE_ANGLE / 180) * rearRadius,\n      0\n    );\n    for (var i = 0; i < POINTER_RINGS; i++) {\n      this._drawVerticesRing(vertices, rearBase, i + 1);\n      rearBase.applyAxisAngle(YAXIS, Math.PI * POINTER_HEMISPHERE_ANGLE / 180 / (POINTER_RINGS * -2));\n    }\n    const frontCenterIndex = POINTER_SEGMENTS * (1 + POINTER_RINGS);\n    const rearCenterIndex = POINTER_SEGMENTS * (1 + POINTER_RINGS) + 1;\n    const frontCenter = new THREE.Vector3(0, 0, -1 * (POINTER_LENGTH - rearRadius));\n    vertices[frontCenterIndex * 3] = frontCenter.x;\n    vertices[frontCenterIndex * 3 + 1] = frontCenter.y;\n    vertices[frontCenterIndex * 3 + 2] = frontCenter.z;\n    const rearCenter = new THREE.Vector3(0, 0, rearRadius);\n    vertices[rearCenterIndex * 3] = rearCenter.x;\n    vertices[rearCenterIndex * 3 + 1] = rearCenter.y;\n    vertices[rearCenterIndex * 3 + 2] = rearCenter.z;\n    this.pointerGeometry.setAttribute(\"position\", new THREE.Float32BufferAttribute(vertices, 3));\n  }\n  createPointer() {\n    var i, j;\n    const vertices = new Array(((POINTER_RINGS + 1) * POINTER_SEGMENTS + 2) * 3).fill(0);\n    const indices = [];\n    this.pointerGeometry = new THREE.BufferGeometry();\n    this.pointerGeometry.setAttribute(\"position\", new THREE.Float32BufferAttribute(vertices, 3));\n    this._updatePointerVertices(POINTER_REAR_RADIUS);\n    for (i = 0; i < POINTER_RINGS; i++) {\n      for (j = 0; j < POINTER_SEGMENTS - 1; j++) {\n        indices.push(i * POINTER_SEGMENTS + j, i * POINTER_SEGMENTS + j + 1, (i + 1) * POINTER_SEGMENTS + j);\n        indices.push(i * POINTER_SEGMENTS + j + 1, (i + 1) * POINTER_SEGMENTS + j + 1, (i + 1) * POINTER_SEGMENTS + j);\n      }\n      indices.push((i + 1) * POINTER_SEGMENTS - 1, i * POINTER_SEGMENTS, (i + 2) * POINTER_SEGMENTS - 1);\n      indices.push(i * POINTER_SEGMENTS, (i + 1) * POINTER_SEGMENTS, (i + 2) * POINTER_SEGMENTS - 1);\n    }\n    const frontCenterIndex = POINTER_SEGMENTS * (1 + POINTER_RINGS);\n    const rearCenterIndex = POINTER_SEGMENTS * (1 + POINTER_RINGS) + 1;\n    for (i = 0; i < POINTER_SEGMENTS - 1; i++) {\n      indices.push(frontCenterIndex, i + 1, i);\n      indices.push(rearCenterIndex, i + POINTER_SEGMENTS * POINTER_RINGS, i + POINTER_SEGMENTS * POINTER_RINGS + 1);\n    }\n    indices.push(frontCenterIndex, 0, POINTER_SEGMENTS - 1);\n    indices.push(rearCenterIndex, POINTER_SEGMENTS * (POINTER_RINGS + 1) - 1, POINTER_SEGMENTS * POINTER_RINGS);\n    const material = new THREE.MeshBasicMaterial();\n    material.transparent = true;\n    material.opacity = POINTER_OPACITY_MIN;\n    this.pointerGeometry.setIndex(indices);\n    this.pointerMesh = new THREE.Mesh(this.pointerGeometry, material);\n    this.pointerMesh.position.set(0, 0, -1 * POINTER_REAR_RADIUS);\n    this.pointerObject = new THREE.Object3D();\n    this.pointerObject.add(this.pointerMesh);\n    this.raycaster = new THREE.Raycaster();\n    const cursorGeometry = new THREE.SphereGeometry(CURSOR_RADIUS, 10, 10);\n    const cursorMaterial = new THREE.MeshBasicMaterial();\n    cursorMaterial.transparent = true;\n    cursorMaterial.opacity = POINTER_OPACITY_MIN;\n    this.cursorObject = new THREE.Mesh(cursorGeometry, cursorMaterial);\n    this.pointerObject.add(this.cursorObject);\n    this.add(this.pointerObject);\n  }\n  _updateRaycaster() {\n    if (this.raycaster) {\n      const pointerMatrix = this.pointerObject.matrixWorld;\n      const tempMatrix = new THREE.Matrix4();\n      tempMatrix.identity().extractRotation(pointerMatrix);\n      this.raycaster.ray.origin.setFromMatrixPosition(pointerMatrix);\n      this.raycaster.ray.direction.set(0, 0, -1).applyMatrix4(tempMatrix);\n    }\n  }\n  _updatePointer() {\n    this.pointerObject.visible = this.controller.visible;\n    const indexTip = this.hand.joints[\"index-finger-tip\"];\n    const thumbTip = this.hand.joints[\"thumb-tip\"];\n    const distance = indexTip.position.distanceTo(thumbTip.position);\n    const position = indexTip.position.clone().add(thumbTip.position).multiplyScalar(0.5);\n    this.pointerObject.position.copy(position);\n    this.pointerObject.quaternion.copy(this.controller.quaternion);\n    this.pinched = distance <= PINCH_THRESHOLD;\n    const pinchScale = (distance - PINCH_MIN) / (PINCH_MAX - PINCH_MIN);\n    const focusScale = (distance - PINCH_MIN) / (PINCH_THRESHOLD - PINCH_MIN);\n    if (pinchScale > 1) {\n      this._updatePointerVertices(POINTER_REAR_RADIUS);\n      this.pointerMesh.position.set(0, 0, -1 * POINTER_REAR_RADIUS);\n      this.pointerMesh.material.opacity = POINTER_OPACITY_MIN;\n    } else if (pinchScale > 0) {\n      const rearRadius = (POINTER_REAR_RADIUS - POINTER_REAR_RADIUS_MIN) * pinchScale + POINTER_REAR_RADIUS_MIN;\n      this._updatePointerVertices(rearRadius);\n      if (focusScale < 1) {\n        this.pointerMesh.position.set(0, 0, -1 * rearRadius - (1 - focusScale) * POINTER_ADVANCE_MAX);\n        this.pointerMesh.material.opacity = POINTER_OPACITY_MIN + (1 - focusScale) * (POINTER_OPACITY_MAX - POINTER_OPACITY_MIN);\n      } else {\n        this.pointerMesh.position.set(0, 0, -1 * rearRadius);\n        this.pointerMesh.material.opacity = POINTER_OPACITY_MIN;\n      }\n    } else {\n      this._updatePointerVertices(POINTER_REAR_RADIUS_MIN);\n      this.pointerMesh.position.set(0, 0, -1 * POINTER_REAR_RADIUS_MIN - POINTER_ADVANCE_MAX);\n      this.pointerMesh.material.opacity = POINTER_OPACITY_MAX;\n    }\n    this.cursorObject.material.opacity = this.pointerMesh.material.opacity;\n  }\n  updateMatrixWorld(force) {\n    super.updateMatrixWorld(force);\n    if (this.pointerGeometry) {\n      this._updatePointer();\n      this._updateRaycaster();\n    }\n  }\n  isPinched() {\n    return this.pinched;\n  }\n  setAttached(attached) {\n    this.attached = attached;\n  }\n  isAttached() {\n    return this.attached;\n  }\n  intersectObject(object, recursive = true) {\n    if (this.raycaster) {\n      return this.raycaster.intersectObject(object, recursive);\n    }\n  }\n  intersectObjects(objects, recursive = true) {\n    if (this.raycaster) {\n      return this.raycaster.intersectObjects(objects, recursive);\n    }\n  }\n  checkIntersections(objects, recursive = false) {\n    if (this.raycaster && !this.attached) {\n      const intersections = this.raycaster.intersectObjects(objects, recursive);\n      const direction = new THREE.Vector3(0, 0, -1);\n      if (intersections.length > 0) {\n        const intersection = intersections[0];\n        const distance = intersection.distance;\n        this.cursorObject.position.copy(direction.multiplyScalar(distance));\n      } else {\n        this.cursorObject.position.copy(direction.multiplyScalar(CURSOR_MAX_DISTANCE));\n      }\n    }\n  }\n  setCursor(distance) {\n    const direction = new THREE.Vector3(0, 0, -1);\n    if (this.raycaster && !this.attached) {\n      this.cursorObject.position.copy(direction.multiplyScalar(distance));\n    }\n  }\n  dispose() {\n    this._onDisconnected();\n    this.hand.removeEventListener(\"connected\", this._onConnected);\n    this.hand.removeEventListener(\"disconnected\", this._onDisconnected);\n  }\n}\nexport {\n  OculusHandPointerModel\n};\n//# sourceMappingURL=OculusHandPointerModel.js.map\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,YAAY;AAClB,MAAM,kBAAkB;AACxB,MAAM,YAAY;AAClB,MAAM,sBAAsB;AAC5B,MAAM,sBAAsB;AAC5B,MAAM,sBAAsB;AAC5B,MAAM,uBAAuB;AAC7B,MAAM,sBAAsB;AAC5B,MAAM,0BAA0B;AAChC,MAAM,iBAAiB;AACvB,MAAM,mBAAmB;AACzB,MAAM,gBAAgB;AACtB,MAAM,2BAA2B;AACjC,MAAM,QAAQ,aAAa,GAAG,IAAI,qJAAM,OAAO,CAAC,GAAG,GAAG;AACtD,MAAM,QAAQ,aAAa,GAAG,IAAI,qJAAM,OAAO,CAAC,GAAG,GAAG;AACtD,MAAM,gBAAgB;AACtB,MAAM,sBAAsB;AAC5B,MAAM,+BAA+B,qJAAM,QAAQ;IACjD,YAAY,IAAI,EAAE,UAAU,CAAE;QAC5B,KAAK;QACL,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,UAAU,GAAG;QAClB,IAAI,CAAC,gBAAgB,GAAG;QACxB,IAAI,CAAC,MAAM,GAAG;QACd,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,eAAe,GAAG;QACvB,IAAI,CAAC,WAAW,GAAG;QACnB,IAAI,CAAC,aAAa,GAAG;QACrB,IAAI,CAAC,OAAO,GAAG;QACf,IAAI,CAAC,QAAQ,GAAG;QAChB,IAAI,CAAC,YAAY,GAAG;QACpB,IAAI,CAAC,SAAS,GAAG;QACjB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI;QAC/C,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI;QACrD,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,aAAa,IAAI,CAAC,YAAY;QACzD,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,IAAI,CAAC,eAAe;IACjE;IACA,aAAa,KAAK,EAAE;QAClB,MAAM,gBAAgB,MAAM,IAAI;QAChC,IAAI,cAAc,IAAI,EAAE;YACtB,IAAI,CAAC,OAAO,GAAG;YACf,IAAI,CAAC,aAAa,GAAG;YACrB,IAAI,CAAC,aAAa;QACpB;IACF;IACA,kBAAkB;QAChB,IAAI,IAAI;QACR,IAAI,CAAC,OAAO,GAAG;QACf,IAAI,CAAC,aAAa,GAAG;QACrB,CAAC,KAAK,IAAI,CAAC,eAAe,KAAK,OAAO,KAAK,IAAI,GAAG,OAAO;QACzD,CAAC,KAAK,IAAI,CAAC,WAAW,KAAK,OAAO,KAAK,IAAI,GAAG,QAAQ,CAAC,OAAO;QAC9D,IAAI,CAAC,KAAK;IACZ;IACA,kBAAkB,QAAQ,EAAE,UAAU,EAAE,SAAS,EAAE;QACjD,MAAM,gBAAgB,WAAW,KAAK;QACtC,IAAK,IAAI,IAAI,GAAG,IAAI,kBAAkB,IAAK;YACzC,cAAc,cAAc,CAAC,OAAO,KAAK,EAAE,GAAG,IAAI;YAClD,MAAM,MAAM,YAAY,mBAAmB;YAC3C,QAAQ,CAAC,IAAI,IAAI,GAAG,cAAc,CAAC;YACnC,QAAQ,CAAC,IAAI,MAAM,EAAE,GAAG,cAAc,CAAC;YACvC,QAAQ,CAAC,IAAI,MAAM,EAAE,GAAG,cAAc,CAAC;QACzC;IACF;IACA,uBAAuB,UAAU,EAAE;QACjC,MAAM,WAAW,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK;QAC/D,MAAM,gBAAgB,IAAI,qJAAM,OAAO,CAAC,sBAAsB,GAAG,CAAC,IAAI,CAAC,iBAAiB,UAAU;QAClG,IAAI,CAAC,iBAAiB,CAAC,UAAU,eAAe;QAChD,MAAM,WAAW,IAAI,qJAAM,OAAO,CAChC,KAAK,GAAG,CAAC,KAAK,EAAE,GAAG,2BAA2B,OAAO,YACrD,KAAK,GAAG,CAAC,KAAK,EAAE,GAAG,2BAA2B,OAAO,YACrD;QAEF,IAAK,IAAI,IAAI,GAAG,IAAI,eAAe,IAAK;YACtC,IAAI,CAAC,iBAAiB,CAAC,UAAU,UAAU,IAAI;YAC/C,SAAS,cAAc,CAAC,OAAO,KAAK,EAAE,GAAG,2BAA2B,MAAM,CAAC,gBAAgB,CAAC,CAAC;QAC/F;QACA,MAAM,mBAAmB,mBAAmB,CAAC,IAAI,aAAa;QAC9D,MAAM,kBAAkB,mBAAmB,CAAC,IAAI,aAAa,IAAI;QACjE,MAAM,cAAc,IAAI,qJAAM,OAAO,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,iBAAiB,UAAU;QAC7E,QAAQ,CAAC,mBAAmB,EAAE,GAAG,YAAY,CAAC;QAC9C,QAAQ,CAAC,mBAAmB,IAAI,EAAE,GAAG,YAAY,CAAC;QAClD,QAAQ,CAAC,mBAAmB,IAAI,EAAE,GAAG,YAAY,CAAC;QAClD,MAAM,aAAa,IAAI,qJAAM,OAAO,CAAC,GAAG,GAAG;QAC3C,QAAQ,CAAC,kBAAkB,EAAE,GAAG,WAAW,CAAC;QAC5C,QAAQ,CAAC,kBAAkB,IAAI,EAAE,GAAG,WAAW,CAAC;QAChD,QAAQ,CAAC,kBAAkB,IAAI,EAAE,GAAG,WAAW,CAAC;QAChD,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,YAAY,IAAI,qJAAM,sBAAsB,CAAC,UAAU;IAC3F;IACA,gBAAgB;QACd,IAAI,GAAG;QACP,MAAM,WAAW,IAAI,MAAM,CAAC,CAAC,gBAAgB,CAAC,IAAI,mBAAmB,CAAC,IAAI,GAAG,IAAI,CAAC;QAClF,MAAM,UAAU,EAAE;QAClB,IAAI,CAAC,eAAe,GAAG,IAAI,qJAAM,cAAc;QAC/C,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,YAAY,IAAI,qJAAM,sBAAsB,CAAC,UAAU;QACzF,IAAI,CAAC,sBAAsB,CAAC;QAC5B,IAAK,IAAI,GAAG,IAAI,eAAe,IAAK;YAClC,IAAK,IAAI,GAAG,IAAI,mBAAmB,GAAG,IAAK;gBACzC,QAAQ,IAAI,CAAC,IAAI,mBAAmB,GAAG,IAAI,mBAAmB,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,mBAAmB;gBAClG,QAAQ,IAAI,CAAC,IAAI,mBAAmB,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,mBAAmB,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,mBAAmB;YAC9G;YACA,QAAQ,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,mBAAmB,GAAG,IAAI,kBAAkB,CAAC,IAAI,CAAC,IAAI,mBAAmB;YAChG,QAAQ,IAAI,CAAC,IAAI,kBAAkB,CAAC,IAAI,CAAC,IAAI,kBAAkB,CAAC,IAAI,CAAC,IAAI,mBAAmB;QAC9F;QACA,MAAM,mBAAmB,mBAAmB,CAAC,IAAI,aAAa;QAC9D,MAAM,kBAAkB,mBAAmB,CAAC,IAAI,aAAa,IAAI;QACjE,IAAK,IAAI,GAAG,IAAI,mBAAmB,GAAG,IAAK;YACzC,QAAQ,IAAI,CAAC,kBAAkB,IAAI,GAAG;YACtC,QAAQ,IAAI,CAAC,iBAAiB,IAAI,mBAAmB,eAAe,IAAI,mBAAmB,gBAAgB;QAC7G;QACA,QAAQ,IAAI,CAAC,kBAAkB,GAAG,mBAAmB;QACrD,QAAQ,IAAI,CAAC,iBAAiB,mBAAmB,CAAC,gBAAgB,CAAC,IAAI,GAAG,mBAAmB;QAC7F,MAAM,WAAW,IAAI,qJAAM,iBAAiB;QAC5C,SAAS,WAAW,GAAG;QACvB,SAAS,OAAO,GAAG;QACnB,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC;QAC9B,IAAI,CAAC,WAAW,GAAG,IAAI,qJAAM,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE;QACxD,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,IAAI;QACzC,IAAI,CAAC,aAAa,GAAG,IAAI,qJAAM,QAAQ;QACvC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW;QACvC,IAAI,CAAC,SAAS,GAAG,IAAI,qJAAM,SAAS;QACpC,MAAM,iBAAiB,IAAI,qJAAM,cAAc,CAAC,eAAe,IAAI;QACnE,MAAM,iBAAiB,IAAI,qJAAM,iBAAiB;QAClD,eAAe,WAAW,GAAG;QAC7B,eAAe,OAAO,GAAG;QACzB,IAAI,CAAC,YAAY,GAAG,IAAI,qJAAM,IAAI,CAAC,gBAAgB;QACnD,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY;QACxC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa;IAC7B;IACA,mBAAmB;QACjB,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,MAAM,gBAAgB,IAAI,CAAC,aAAa,CAAC,WAAW;YACpD,MAAM,aAAa,IAAI,qJAAM,OAAO;YACpC,WAAW,QAAQ,GAAG,eAAe,CAAC;YACtC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,qBAAqB,CAAC;YAChD,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,YAAY,CAAC;QAC1D;IACF;IACA,iBAAiB;QACf,IAAI,CAAC,aAAa,CAAC,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO;QACpD,MAAM,WAAW,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,mBAAmB;QACrD,MAAM,WAAW,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY;QAC9C,MAAM,WAAW,SAAS,QAAQ,CAAC,UAAU,CAAC,SAAS,QAAQ;QAC/D,MAAM,WAAW,SAAS,QAAQ,CAAC,KAAK,GAAG,GAAG,CAAC,SAAS,QAAQ,EAAE,cAAc,CAAC;QACjF,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC;QACjC,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU;QAC7D,IAAI,CAAC,OAAO,GAAG,YAAY;QAC3B,MAAM,aAAa,CAAC,WAAW,SAAS,IAAI,CAAC,YAAY,SAAS;QAClE,MAAM,aAAa,CAAC,WAAW,SAAS,IAAI,CAAC,kBAAkB,SAAS;QACxE,IAAI,aAAa,GAAG;YAClB,IAAI,CAAC,sBAAsB,CAAC;YAC5B,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,IAAI;YACzC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,OAAO,GAAG;QACtC,OAAO,IAAI,aAAa,GAAG;YACzB,MAAM,aAAa,CAAC,sBAAsB,uBAAuB,IAAI,aAAa;YAClF,IAAI,CAAC,sBAAsB,CAAC;YAC5B,IAAI,aAAa,GAAG;gBAClB,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,IAAI,aAAa,CAAC,IAAI,UAAU,IAAI;gBACzE,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,OAAO,GAAG,sBAAsB,CAAC,IAAI,UAAU,IAAI,CAAC,sBAAsB,mBAAmB;YACzH,OAAO;gBACL,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,IAAI;gBACzC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,OAAO,GAAG;YACtC;QACF,OAAO;YACL,IAAI,CAAC,sBAAsB,CAAC;YAC5B,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,IAAI,0BAA0B;YACnE,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,OAAO,GAAG;QACtC;QACA,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,OAAO;IACxE;IACA,kBAAkB,KAAK,EAAE;QACvB,KAAK,CAAC,kBAAkB;QACxB,IAAI,IAAI,CAAC,eAAe,EAAE;YACxB,IAAI,CAAC,cAAc;YACnB,IAAI,CAAC,gBAAgB;QACvB;IACF;IACA,YAAY;QACV,OAAO,IAAI,CAAC,OAAO;IACrB;IACA,YAAY,QAAQ,EAAE;QACpB,IAAI,CAAC,QAAQ,GAAG;IAClB;IACA,aAAa;QACX,OAAO,IAAI,CAAC,QAAQ;IACtB;IACA,gBAAgB,MAAM,EAAE,YAAY,IAAI,EAAE;QACxC,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,OAAO,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,QAAQ;QAChD;IACF;IACA,iBAAiB,OAAO,EAAE,YAAY,IAAI,EAAE;QAC1C,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,OAAO,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,SAAS;QAClD;IACF;IACA,mBAAmB,OAAO,EAAE,YAAY,KAAK,EAAE;QAC7C,IAAI,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YACpC,MAAM,gBAAgB,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,SAAS;YAC/D,MAAM,YAAY,IAAI,qJAAM,OAAO,CAAC,GAAG,GAAG,CAAC;YAC3C,IAAI,cAAc,MAAM,GAAG,GAAG;gBAC5B,MAAM,eAAe,aAAa,CAAC,EAAE;gBACrC,MAAM,WAAW,aAAa,QAAQ;gBACtC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,cAAc,CAAC;YAC3D,OAAO;gBACL,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,cAAc,CAAC;YAC3D;QACF;IACF;IACA,UAAU,QAAQ,EAAE;QAClB,MAAM,YAAY,IAAI,qJAAM,OAAO,CAAC,GAAG,GAAG,CAAC;QAC3C,IAAI,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YACpC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,cAAc,CAAC;QAC3D;IACF;IACA,UAAU;QACR,IAAI,CAAC,eAAe;QACpB,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,aAAa,IAAI,CAAC,YAAY;QAC5D,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,gBAAgB,IAAI,CAAC,eAAe;IACpE;AACF;;CAIA,kDAAkD","ignoreList":[0]}},
    {"offset": {"line": 12028, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12034, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/csm/CSMFrustum.js"],"sourcesContent":["import { Vector3, Matrix4 } from \"three\";\nconst inverseProjectionMatrix = /* @__PURE__ */ new Matrix4();\nclass CSMFrustum {\n  constructor(data) {\n    data = data || {};\n    this.vertices = {\n      near: [new Vector3(), new Vector3(), new Vector3(), new Vector3()],\n      far: [new Vector3(), new Vector3(), new Vector3(), new Vector3()]\n    };\n    if (data.projectionMatrix !== void 0) {\n      this.setFromProjectionMatrix(data.projectionMatrix, data.maxFar || 1e4);\n    }\n  }\n  setFromProjectionMatrix(projectionMatrix, maxFar) {\n    const isOrthographic = projectionMatrix.elements[2 * 4 + 3] === 0;\n    inverseProjectionMatrix.copy(projectionMatrix).invert();\n    this.vertices.near[0].set(1, 1, -1);\n    this.vertices.near[1].set(1, -1, -1);\n    this.vertices.near[2].set(-1, -1, -1);\n    this.vertices.near[3].set(-1, 1, -1);\n    this.vertices.near.forEach(function(v) {\n      v.applyMatrix4(inverseProjectionMatrix);\n    });\n    this.vertices.far[0].set(1, 1, 1);\n    this.vertices.far[1].set(1, -1, 1);\n    this.vertices.far[2].set(-1, -1, 1);\n    this.vertices.far[3].set(-1, 1, 1);\n    this.vertices.far.forEach(function(v) {\n      v.applyMatrix4(inverseProjectionMatrix);\n      const absZ = Math.abs(v.z);\n      if (isOrthographic) {\n        v.z *= Math.min(maxFar / absZ, 1);\n      } else {\n        v.multiplyScalar(Math.min(maxFar / absZ, 1));\n      }\n    });\n    return this.vertices;\n  }\n  split(breaks, target) {\n    while (breaks.length > target.length) {\n      target.push(new CSMFrustum());\n    }\n    target.length = breaks.length;\n    for (let i = 0; i < breaks.length; i++) {\n      const cascade = target[i];\n      if (i === 0) {\n        for (let j = 0; j < 4; j++) {\n          cascade.vertices.near[j].copy(this.vertices.near[j]);\n        }\n      } else {\n        for (let j = 0; j < 4; j++) {\n          cascade.vertices.near[j].lerpVectors(this.vertices.near[j], this.vertices.far[j], breaks[i - 1]);\n        }\n      }\n      if (i === breaks.length - 1) {\n        for (let j = 0; j < 4; j++) {\n          cascade.vertices.far[j].copy(this.vertices.far[j]);\n        }\n      } else {\n        for (let j = 0; j < 4; j++) {\n          cascade.vertices.far[j].lerpVectors(this.vertices.near[j], this.vertices.far[j], breaks[i]);\n        }\n      }\n    }\n  }\n  toSpace(cameraMatrix, target) {\n    for (let i = 0; i < 4; i++) {\n      target.vertices.near[i].copy(this.vertices.near[i]).applyMatrix4(cameraMatrix);\n      target.vertices.far[i].copy(this.vertices.far[i]).applyMatrix4(cameraMatrix);\n    }\n  }\n}\nexport {\n  CSMFrustum\n};\n//# sourceMappingURL=CSMFrustum.js.map\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 12122, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12128, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/csm/CSMShader.js"],"sourcesContent":["import { ShaderChunk } from \"three\";\nconst CSMShader = {\n  lights_fragment_begin: (\n    /* glsl */\n    `\nGeometricContext geometry;\n\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n\n#ifdef CLEARCOAT\n\n\tgeometry.clearcoatNormal = clearcoatNormal;\n\n#endif\n\nIncidentLight directLight;\n\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\n\t\tpointLight = pointLights[ i ];\n\n\t\tgetPointLightInfo( pointLight, geometry, directLight );\n\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\n\t\tspotLight = spotLights[ i ];\n\n\t\tgetSpotLightInfo( spotLight, geometry, directLight );\n\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n#if ( NUM_DIR_LIGHTS > 0) && defined( RE_Direct ) && defined( USE_CSM ) && defined( CSM_CASCADES )\n\n\tDirectionalLight directionalLight;\n\tfloat linearDepth = (vViewPosition.z) / (shadowFar - cameraNear);\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\n\t#if defined( USE_SHADOWMAP ) && defined( CSM_FADE )\n\tvec2 cascade;\n\tfloat cascadeCenter;\n\tfloat closestEdge;\n\tfloat margin;\n\tfloat csmx;\n\tfloat csmy;\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\n\n\t  \t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\t\t// NOTE: Depth gets larger away from the camera.\n\t\t\t// cascade.x is closer, cascade.y is further\n\t\t\tcascade = CSM_cascades[ i ];\n\t\t\tcascadeCenter = ( cascade.x + cascade.y ) / 2.0;\n\t\t\tclosestEdge = linearDepth < cascadeCenter ? cascade.x : cascade.y;\n\t\t\tmargin = 0.25 * pow( closestEdge, 2.0 );\n\t\t\tcsmx = cascade.x - margin / 2.0;\n\t\t\tcsmy = cascade.y + margin / 2.0;\n\t\t\tif( linearDepth >= csmx && ( linearDepth < csmy || UNROLLED_LOOP_INDEX == CSM_CASCADES - 1 ) ) {\n\n\t\t\t\tfloat dist = min( linearDepth - csmx, csmy - linearDepth );\n\t\t\t\tfloat ratio = clamp( dist / margin, 0.0, 1.0 );\n\n\t\t\t\tvec3 prevColor = directLight.color;\n\t\t\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\t\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\n\t\t\t\tbool shouldFadeLastCascade = UNROLLED_LOOP_INDEX == CSM_CASCADES - 1 && linearDepth > cascadeCenter;\n\t\t\t\tdirectLight.color = mix( prevColor, directLight.color, shouldFadeLastCascade ? ratio : 1.0 );\n\n\t\t\t\tReflectedLight prevLight = reflectedLight;\n\t\t\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\n\t\t\t\tbool shouldBlend = UNROLLED_LOOP_INDEX != CSM_CASCADES - 1 || UNROLLED_LOOP_INDEX == CSM_CASCADES - 1 && linearDepth < cascadeCenter;\n\t\t\t\tfloat blendRatio = shouldBlend ? ratio : 1.0;\n\n\t\t\t\treflectedLight.directDiffuse = mix( prevLight.directDiffuse, reflectedLight.directDiffuse, blendRatio );\n\t\t\t\treflectedLight.directSpecular = mix( prevLight.directSpecular, reflectedLight.directSpecular, blendRatio );\n\t\t\t\treflectedLight.indirectDiffuse = mix( prevLight.indirectDiffuse, reflectedLight.indirectDiffuse, blendRatio );\n\t\t\t\treflectedLight.indirectSpecular = mix( prevLight.indirectSpecular, reflectedLight.indirectSpecular, blendRatio );\n\n\t\t\t}\n\t  \t#endif\n\n\t}\n\t#pragma unroll_loop_end\n\t#else\n\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\n\t\t\tdirectionalLight = directionalLights[ i ];\n\t\t\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\n\n\t\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\n\t\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\t\tif(linearDepth >= CSM_cascades[UNROLLED_LOOP_INDEX].x && linearDepth < CSM_cascades[UNROLLED_LOOP_INDEX].y) directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\n\t\t\tif(linearDepth >= CSM_cascades[UNROLLED_LOOP_INDEX].x && (linearDepth < CSM_cascades[UNROLLED_LOOP_INDEX].y || UNROLLED_LOOP_INDEX == CSM_CASCADES - 1)) RE_Direct( directLight, geometry, material, reflectedLight );\n\n\t\t\t#endif\n\n\t\t}\n\t\t#pragma unroll_loop_end\n\n\t#endif\n\n\t#if ( NUM_DIR_LIGHTS > NUM_DIR_LIGHT_SHADOWS)\n\t\t// compute the lights not casting shadows (if any)\n\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = NUM_DIR_LIGHT_SHADOWS; i < NUM_DIR_LIGHTS; i ++ ) {\n\n\t\t\tdirectionalLight = directionalLights[ i ];\n\n\t\t\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\n\n\t\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\n\t\t}\n\t\t#pragma unroll_loop_end\n\n\t#endif\n\n#endif\n\n\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct ) && !defined( USE_CSM ) && !defined( CSM_CASCADES )\n\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\n\t\tdirectionalLight = directionalLights[ i ];\n\n\t\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\n\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\n\tRectAreaLight rectAreaLight;\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n#if defined( RE_IndirectDiffuse )\n\n\tvec3 iblIrradiance = vec3( 0.0 );\n\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\n\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n\n\t\t}\n\t\t#pragma unroll_loop_end\n\n\t#endif\n\n#endif\n\n#if defined( RE_IndirectSpecular )\n\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n\n#endif\n`\n  ),\n  getlights_pars_begin() {\n    return (\n      /* glsl */\n      `\n\t\t\t#if defined( USE_CSM ) && defined( CSM_CASCADES )\n\t\t\tuniform vec2 CSM_cascades[CSM_CASCADES];\n\t\t\tuniform float cameraNear;\n\t\t\tuniform float shadowFar;\n\t\t\t#endif\n\n\t\t\t${ShaderChunk.lights_pars_begin}\n\t\t`\n    );\n  }\n};\nexport {\n  CSMShader\n};\n//# sourceMappingURL=CSMShader.js.map\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,YAAY;IAChB,uBACE,QAAQ,GACR,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6OL,CAAC;IAEC;QACE,OACE,QAAQ,GACR,CAAC;;;;;;;GAOJ,EAAE,oKAAA,CAAA,cAAW,CAAC,iBAAiB,CAAC;EACjC,CAAC;IAED;AACF;;CAIA,qCAAqC","ignoreList":[0]}},
    {"offset": {"line": 12386, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12392, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/csm/CSM.js"],"sourcesContent":["import { Vector3, DirectionalLight, MathUtils, ShaderChunk, Vector2, Matrix4, Box3 } from \"three\";\nimport { CSMFrustum } from \"./CSMFrustum.js\";\nimport { CSMShader } from \"./CSMShader.js\";\nconst _cameraToLightMatrix = /* @__PURE__ */ new Matrix4();\nconst _lightSpaceFrustum = /* @__PURE__ */ new CSMFrustum();\nconst _center = /* @__PURE__ */ new Vector3();\nconst _bbox = /* @__PURE__ */ new Box3();\nconst _uniformArray = [];\nconst _logArray = [];\nclass CSM {\n  constructor(data) {\n    data = data || {};\n    this.camera = data.camera;\n    this.parent = data.parent;\n    this.cascades = data.cascades || 3;\n    this.maxFar = data.maxFar || 1e5;\n    this.mode = data.mode || \"practical\";\n    this.shadowMapSize = data.shadowMapSize || 2048;\n    this.shadowBias = data.shadowBias || 1e-6;\n    this.lightDirection = data.lightDirection || new Vector3(1, -1, 1).normalize();\n    this.lightIntensity = data.lightIntensity || 1;\n    this.lightNear = data.lightNear || 1;\n    this.lightFar = data.lightFar || 2e3;\n    this.lightMargin = data.lightMargin || 200;\n    this.customSplitsCallback = data.customSplitsCallback;\n    this.fade = false;\n    this.mainFrustum = new CSMFrustum();\n    this.frustums = [];\n    this.breaks = [];\n    this.lights = [];\n    this.shaders = /* @__PURE__ */ new Map();\n    this.createLights();\n    this.updateFrustums();\n    this.injectInclude();\n  }\n  createLights() {\n    for (let i = 0; i < this.cascades; i++) {\n      const light = new DirectionalLight(16777215, this.lightIntensity);\n      light.castShadow = true;\n      light.shadow.mapSize.width = this.shadowMapSize;\n      light.shadow.mapSize.height = this.shadowMapSize;\n      light.shadow.camera.near = this.lightNear;\n      light.shadow.camera.far = this.lightFar;\n      light.shadow.bias = this.shadowBias;\n      this.parent.add(light);\n      this.parent.add(light.target);\n      this.lights.push(light);\n    }\n  }\n  initCascades() {\n    const camera = this.camera;\n    camera.updateProjectionMatrix();\n    this.mainFrustum.setFromProjectionMatrix(camera.projectionMatrix, this.maxFar);\n    this.mainFrustum.split(this.breaks, this.frustums);\n  }\n  updateShadowBounds() {\n    const frustums = this.frustums;\n    for (let i = 0; i < frustums.length; i++) {\n      const light = this.lights[i];\n      const shadowCam = light.shadow.camera;\n      const frustum = this.frustums[i];\n      const nearVerts = frustum.vertices.near;\n      const farVerts = frustum.vertices.far;\n      const point1 = farVerts[0];\n      let point2;\n      if (point1.distanceTo(farVerts[2]) > point1.distanceTo(nearVerts[2])) {\n        point2 = farVerts[2];\n      } else {\n        point2 = nearVerts[2];\n      }\n      let squaredBBWidth = point1.distanceTo(point2);\n      if (this.fade) {\n        const camera = this.camera;\n        const far = Math.max(camera.far, this.maxFar);\n        const linearDepth = frustum.vertices.far[0].z / (far - camera.near);\n        const margin = 0.25 * Math.pow(linearDepth, 2) * (far - camera.near);\n        squaredBBWidth += margin;\n      }\n      shadowCam.left = -squaredBBWidth / 2;\n      shadowCam.right = squaredBBWidth / 2;\n      shadowCam.top = squaredBBWidth / 2;\n      shadowCam.bottom = -squaredBBWidth / 2;\n      shadowCam.updateProjectionMatrix();\n    }\n  }\n  getBreaks() {\n    const camera = this.camera;\n    const far = Math.min(camera.far, this.maxFar);\n    this.breaks.length = 0;\n    switch (this.mode) {\n      case \"uniform\":\n        uniformSplit(this.cascades, camera.near, far, this.breaks);\n        break;\n      case \"logarithmic\":\n        logarithmicSplit(this.cascades, camera.near, far, this.breaks);\n        break;\n      case \"practical\":\n        practicalSplit(this.cascades, camera.near, far, 0.5, this.breaks);\n        break;\n      case \"custom\":\n        if (this.customSplitsCallback === void 0)\n          console.error(\"CSM: Custom split scheme callback not defined.\");\n        this.customSplitsCallback(this.cascades, camera.near, far, this.breaks);\n        break;\n    }\n    function uniformSplit(amount, near, far2, target) {\n      for (let i = 1; i < amount; i++) {\n        target.push((near + (far2 - near) * i / amount) / far2);\n      }\n      target.push(1);\n    }\n    function logarithmicSplit(amount, near, far2, target) {\n      for (let i = 1; i < amount; i++) {\n        target.push(near * (far2 / near) ** (i / amount) / far2);\n      }\n      target.push(1);\n    }\n    function practicalSplit(amount, near, far2, lambda, target) {\n      _uniformArray.length = 0;\n      _logArray.length = 0;\n      logarithmicSplit(amount, near, far2, _logArray);\n      uniformSplit(amount, near, far2, _uniformArray);\n      for (let i = 1; i < amount; i++) {\n        target.push(MathUtils.lerp(_uniformArray[i - 1], _logArray[i - 1], lambda));\n      }\n      target.push(1);\n    }\n  }\n  update() {\n    const camera = this.camera;\n    const frustums = this.frustums;\n    for (let i = 0; i < frustums.length; i++) {\n      const light = this.lights[i];\n      const shadowCam = light.shadow.camera;\n      const texelWidth = (shadowCam.right - shadowCam.left) / this.shadowMapSize;\n      const texelHeight = (shadowCam.top - shadowCam.bottom) / this.shadowMapSize;\n      light.shadow.camera.updateMatrixWorld(true);\n      _cameraToLightMatrix.multiplyMatrices(light.shadow.camera.matrixWorldInverse, camera.matrixWorld);\n      frustums[i].toSpace(_cameraToLightMatrix, _lightSpaceFrustum);\n      const nearVerts = _lightSpaceFrustum.vertices.near;\n      const farVerts = _lightSpaceFrustum.vertices.far;\n      _bbox.makeEmpty();\n      for (let j = 0; j < 4; j++) {\n        _bbox.expandByPoint(nearVerts[j]);\n        _bbox.expandByPoint(farVerts[j]);\n      }\n      _bbox.getCenter(_center);\n      _center.z = _bbox.max.z + this.lightMargin;\n      _center.x = Math.floor(_center.x / texelWidth) * texelWidth;\n      _center.y = Math.floor(_center.y / texelHeight) * texelHeight;\n      _center.applyMatrix4(light.shadow.camera.matrixWorld);\n      light.position.copy(_center);\n      light.target.position.copy(_center);\n      light.target.position.x += this.lightDirection.x;\n      light.target.position.y += this.lightDirection.y;\n      light.target.position.z += this.lightDirection.z;\n    }\n  }\n  injectInclude() {\n    ShaderChunk.lights_fragment_begin = CSMShader.lights_fragment_begin;\n    ShaderChunk.lights_pars_begin = CSMShader.lights_pars_begin;\n  }\n  setupMaterial(material) {\n    material.defines = material.defines || {};\n    material.defines.USE_CSM = 1;\n    material.defines.CSM_CASCADES = this.cascades;\n    if (this.fade) {\n      material.defines.CSM_FADE = \"\";\n    }\n    const breaksVec2 = [];\n    const scope = this;\n    const shaders = this.shaders;\n    material.onBeforeCompile = function(shader) {\n      const far = Math.min(scope.camera.far, scope.maxFar);\n      scope.getExtendedBreaks(breaksVec2);\n      shader.uniforms.CSM_cascades = { value: breaksVec2 };\n      shader.uniforms.cameraNear = { value: scope.camera.near };\n      shader.uniforms.shadowFar = { value: far };\n      shaders.set(material, shader);\n    };\n    shaders.set(material, null);\n  }\n  updateUniforms() {\n    const far = Math.min(this.camera.far, this.maxFar);\n    const shaders = this.shaders;\n    shaders.forEach(function(shader, material) {\n      if (shader !== null) {\n        const uniforms = shader.uniforms;\n        this.getExtendedBreaks(uniforms.CSM_cascades.value);\n        uniforms.cameraNear.value = this.camera.near;\n        uniforms.shadowFar.value = far;\n      }\n      if (!this.fade && \"CSM_FADE\" in material.defines) {\n        delete material.defines.CSM_FADE;\n        material.needsUpdate = true;\n      } else if (this.fade && !(\"CSM_FADE\" in material.defines)) {\n        material.defines.CSM_FADE = \"\";\n        material.needsUpdate = true;\n      }\n    }, this);\n  }\n  getExtendedBreaks(target) {\n    while (target.length < this.breaks.length) {\n      target.push(new Vector2());\n    }\n    target.length = this.breaks.length;\n    for (let i = 0; i < this.cascades; i++) {\n      const amount = this.breaks[i];\n      const prev = this.breaks[i - 1] || 0;\n      target[i].x = prev;\n      target[i].y = amount;\n    }\n  }\n  updateFrustums() {\n    this.getBreaks();\n    this.initCascades();\n    this.updateShadowBounds();\n    this.updateUniforms();\n  }\n  remove() {\n    for (let i = 0; i < this.lights.length; i++) {\n      this.parent.remove(this.lights[i]);\n    }\n  }\n  dispose() {\n    const shaders = this.shaders;\n    shaders.forEach(function(shader, material) {\n      delete material.onBeforeCompile;\n      delete material.defines.USE_CSM;\n      delete material.defines.CSM_CASCADES;\n      delete material.defines.CSM_FADE;\n      if (shader !== null) {\n        delete shader.uniforms.CSM_cascades;\n        delete shader.uniforms.cameraNear;\n        delete shader.uniforms.shadowFar;\n      }\n      material.needsUpdate = true;\n    });\n    shaders.clear();\n  }\n}\nexport {\n  CSM\n};\n//# sourceMappingURL=CSM.js.map\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 12647, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12653, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/csm/CSMHelper.js"],"sourcesContent":["import { Group, BufferGeometry, BufferAttribute, LineSegments, LineBasicMaterial, Box3Helper, Box3, MeshBasicMaterial, DoubleSide, Mesh, PlaneGeometry } from \"three\";\nclass CSMHelper extends Group {\n  constructor(csm) {\n    super();\n    this.csm = csm;\n    this.displayFrustum = true;\n    this.displayPlanes = true;\n    this.displayShadowBounds = true;\n    const indices = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]);\n    const positions = new Float32Array(24);\n    const frustumGeometry = new BufferGeometry();\n    frustumGeometry.setIndex(new BufferAttribute(indices, 1));\n    frustumGeometry.setAttribute(\"position\", new BufferAttribute(positions, 3, false));\n    const frustumLines = new LineSegments(frustumGeometry, new LineBasicMaterial());\n    this.add(frustumLines);\n    this.frustumLines = frustumLines;\n    this.cascadeLines = [];\n    this.cascadePlanes = [];\n    this.shadowLines = [];\n  }\n  updateVisibility() {\n    const displayFrustum = this.displayFrustum;\n    const displayPlanes = this.displayPlanes;\n    const displayShadowBounds = this.displayShadowBounds;\n    const frustumLines = this.frustumLines;\n    const cascadeLines = this.cascadeLines;\n    const cascadePlanes = this.cascadePlanes;\n    const shadowLines = this.shadowLines;\n    for (let i = 0, l = cascadeLines.length; i < l; i++) {\n      const cascadeLine = cascadeLines[i];\n      const cascadePlane = cascadePlanes[i];\n      const shadowLineGroup = shadowLines[i];\n      cascadeLine.visible = displayFrustum;\n      cascadePlane.visible = displayFrustum && displayPlanes;\n      shadowLineGroup.visible = displayShadowBounds;\n    }\n    frustumLines.visible = displayFrustum;\n  }\n  update() {\n    const csm = this.csm;\n    const camera = csm.camera;\n    const cascades = csm.cascades;\n    const mainFrustum = csm.mainFrustum;\n    const frustums = csm.frustums;\n    const lights = csm.lights;\n    const frustumLines = this.frustumLines;\n    const frustumLinePositions = frustumLines.geometry.getAttribute(\"position\");\n    const cascadeLines = this.cascadeLines;\n    const cascadePlanes = this.cascadePlanes;\n    const shadowLines = this.shadowLines;\n    this.position.copy(camera.position);\n    this.quaternion.copy(camera.quaternion);\n    this.scale.copy(camera.scale);\n    this.updateMatrixWorld(true);\n    while (cascadeLines.length > cascades) {\n      this.remove(cascadeLines.pop());\n      this.remove(cascadePlanes.pop());\n      this.remove(shadowLines.pop());\n    }\n    while (cascadeLines.length < cascades) {\n      const cascadeLine = new Box3Helper(new Box3(), 16777215);\n      const planeMat = new MeshBasicMaterial({ transparent: true, opacity: 0.1, depthWrite: false, side: DoubleSide });\n      const cascadePlane = new Mesh(new PlaneGeometry(), planeMat);\n      const shadowLineGroup = new Group();\n      const shadowLine = new Box3Helper(new Box3(), 16776960);\n      shadowLineGroup.add(shadowLine);\n      this.add(cascadeLine);\n      this.add(cascadePlane);\n      this.add(shadowLineGroup);\n      cascadeLines.push(cascadeLine);\n      cascadePlanes.push(cascadePlane);\n      shadowLines.push(shadowLineGroup);\n    }\n    for (let i = 0; i < cascades; i++) {\n      const frustum = frustums[i];\n      const light = lights[i];\n      const shadowCam = light.shadow.camera;\n      const farVerts2 = frustum.vertices.far;\n      const cascadeLine = cascadeLines[i];\n      const cascadePlane = cascadePlanes[i];\n      const shadowLineGroup = shadowLines[i];\n      const shadowLine = shadowLineGroup.children[0];\n      cascadeLine.box.min.copy(farVerts2[2]);\n      cascadeLine.box.max.copy(farVerts2[0]);\n      cascadeLine.box.max.z += 1e-4;\n      cascadePlane.position.addVectors(farVerts2[0], farVerts2[2]);\n      cascadePlane.position.multiplyScalar(0.5);\n      cascadePlane.scale.subVectors(farVerts2[0], farVerts2[2]);\n      cascadePlane.scale.z = 1e-4;\n      this.remove(shadowLineGroup);\n      shadowLineGroup.position.copy(shadowCam.position);\n      shadowLineGroup.quaternion.copy(shadowCam.quaternion);\n      shadowLineGroup.scale.copy(shadowCam.scale);\n      shadowLineGroup.updateMatrixWorld(true);\n      this.attach(shadowLineGroup);\n      shadowLine.box.min.set(shadowCam.bottom, shadowCam.left, -shadowCam.far);\n      shadowLine.box.max.set(shadowCam.top, shadowCam.right, -shadowCam.near);\n    }\n    const nearVerts = mainFrustum.vertices.near;\n    const farVerts = mainFrustum.vertices.far;\n    frustumLinePositions.setXYZ(0, farVerts[0].x, farVerts[0].y, farVerts[0].z);\n    frustumLinePositions.setXYZ(1, farVerts[3].x, farVerts[3].y, farVerts[3].z);\n    frustumLinePositions.setXYZ(2, farVerts[2].x, farVerts[2].y, farVerts[2].z);\n    frustumLinePositions.setXYZ(3, farVerts[1].x, farVerts[1].y, farVerts[1].z);\n    frustumLinePositions.setXYZ(4, nearVerts[0].x, nearVerts[0].y, nearVerts[0].z);\n    frustumLinePositions.setXYZ(5, nearVerts[3].x, nearVerts[3].y, nearVerts[3].z);\n    frustumLinePositions.setXYZ(6, nearVerts[2].x, nearVerts[2].y, nearVerts[2].z);\n    frustumLinePositions.setXYZ(7, nearVerts[1].x, nearVerts[1].y, nearVerts[1].z);\n    frustumLinePositions.needsUpdate = true;\n  }\n}\nexport {\n  CSMHelper\n};\n//# sourceMappingURL=CSMHelper.js.map\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 12800, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12806, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/interactive/HTMLMesh.js"],"sourcesContent":["import { Mesh, PlaneGeometry, MeshBasicMaterial, CanvasTexture, LinearFilter, Color } from \"three\";\nclass HTMLMesh extends Mesh {\n  constructor(dom) {\n    const texture = new HTMLTexture(dom);\n    const geometry = new PlaneGeometry(texture.image.width * 1e-3, texture.image.height * 1e-3);\n    const material = new MeshBasicMaterial({ map: texture, toneMapped: false, transparent: true });\n    super(geometry, material);\n    function onEvent(event) {\n      material.map.dispatchDOMEvent(event);\n    }\n    this.addEventListener(\"mousedown\", onEvent);\n    this.addEventListener(\"mousemove\", onEvent);\n    this.addEventListener(\"mouseup\", onEvent);\n    this.addEventListener(\"click\", onEvent);\n    this.dispose = function() {\n      geometry.dispose();\n      material.dispose();\n      material.map.dispose();\n      canvases.delete(dom);\n      this.removeEventListener(\"mousedown\", onEvent);\n      this.removeEventListener(\"mousemove\", onEvent);\n      this.removeEventListener(\"mouseup\", onEvent);\n      this.removeEventListener(\"click\", onEvent);\n    };\n  }\n}\nclass HTMLTexture extends CanvasTexture {\n  constructor(dom) {\n    super(html2canvas(dom));\n    this.dom = dom;\n    this.anisotropy = 16;\n    if (\"colorSpace\" in this)\n      this.colorSpace = \"srgb\";\n    else\n      this.encoding = 3001;\n    this.minFilter = LinearFilter;\n    this.magFilter = LinearFilter;\n    const observer = new MutationObserver(() => {\n      if (!this.scheduleUpdate) {\n        this.scheduleUpdate = setTimeout(() => this.update(), 16);\n      }\n    });\n    const config = { attributes: true, childList: true, subtree: true, characterData: true };\n    observer.observe(dom, config);\n    this.observer = observer;\n  }\n  dispatchDOMEvent(event) {\n    if (event.data) {\n      htmlevent(this.dom, event.type, event.data.x, event.data.y);\n    }\n  }\n  update() {\n    this.image = html2canvas(this.dom);\n    this.needsUpdate = true;\n    this.scheduleUpdate = null;\n  }\n  dispose() {\n    if (this.observer) {\n      this.observer.disconnect();\n    }\n    this.scheduleUpdate = clearTimeout(this.scheduleUpdate);\n    super.dispose();\n  }\n}\nconst canvases = /* @__PURE__ */ new WeakMap();\nfunction html2canvas(element) {\n  const range = document.createRange();\n  const color = new Color();\n  function Clipper(context2) {\n    const clips = [];\n    let isClipping = false;\n    function doClip() {\n      if (isClipping) {\n        isClipping = false;\n        context2.restore();\n      }\n      if (clips.length === 0)\n        return;\n      let minX = -Infinity, minY = -Infinity;\n      let maxX = Infinity, maxY = Infinity;\n      for (let i = 0; i < clips.length; i++) {\n        const clip = clips[i];\n        minX = Math.max(minX, clip.x);\n        minY = Math.max(minY, clip.y);\n        maxX = Math.min(maxX, clip.x + clip.width);\n        maxY = Math.min(maxY, clip.y + clip.height);\n      }\n      context2.save();\n      context2.beginPath();\n      context2.rect(minX, minY, maxX - minX, maxY - minY);\n      context2.clip();\n      isClipping = true;\n    }\n    return {\n      add: function(clip) {\n        clips.push(clip);\n        doClip();\n      },\n      remove: function() {\n        clips.pop();\n        doClip();\n      }\n    };\n  }\n  function drawText(style, x, y, string) {\n    if (string !== \"\") {\n      if (style.textTransform === \"uppercase\") {\n        string = string.toUpperCase();\n      }\n      context.font = style.fontWeight + \" \" + style.fontSize + \" \" + style.fontFamily;\n      context.textBaseline = \"top\";\n      context.fillStyle = style.color;\n      context.fillText(string, x, y + parseFloat(style.fontSize) * 0.1);\n    }\n  }\n  function buildRectPath(x, y, w, h, r) {\n    if (w < 2 * r)\n      r = w / 2;\n    if (h < 2 * r)\n      r = h / 2;\n    context.beginPath();\n    context.moveTo(x + r, y);\n    context.arcTo(x + w, y, x + w, y + h, r);\n    context.arcTo(x + w, y + h, x, y + h, r);\n    context.arcTo(x, y + h, x, y, r);\n    context.arcTo(x, y, x + w, y, r);\n    context.closePath();\n  }\n  function drawBorder(style, which, x, y, width, height) {\n    const borderWidth = style[which + \"Width\"];\n    const borderStyle = style[which + \"Style\"];\n    const borderColor = style[which + \"Color\"];\n    if (borderWidth !== \"0px\" && borderStyle !== \"none\" && borderColor !== \"transparent\" && borderColor !== \"rgba(0, 0, 0, 0)\") {\n      context.strokeStyle = borderColor;\n      context.lineWidth = parseFloat(borderWidth);\n      context.beginPath();\n      context.moveTo(x, y);\n      context.lineTo(x + width, y + height);\n      context.stroke();\n    }\n  }\n  function drawElement(element2, style) {\n    let x = 0, y = 0, width = 0, height = 0;\n    if (element2.nodeType === Node.TEXT_NODE) {\n      range.selectNode(element2);\n      const rect = range.getBoundingClientRect();\n      x = rect.left - offset.left - 0.5;\n      y = rect.top - offset.top - 0.5;\n      width = rect.width;\n      height = rect.height;\n      drawText(style, x, y, element2.nodeValue.trim());\n    } else if (element2.nodeType === Node.COMMENT_NODE) {\n      return;\n    } else if (element2 instanceof HTMLCanvasElement) {\n      if (element2.style.display === \"none\")\n        return;\n      context.save();\n      const dpr = window.devicePixelRatio;\n      context.scale(1 / dpr, 1 / dpr);\n      context.drawImage(element2, 0, 0);\n      context.restore();\n    } else {\n      if (element2.style.display === \"none\")\n        return;\n      const rect = element2.getBoundingClientRect();\n      x = rect.left - offset.left - 0.5;\n      y = rect.top - offset.top - 0.5;\n      width = rect.width;\n      height = rect.height;\n      style = window.getComputedStyle(element2);\n      buildRectPath(x, y, width, height, parseFloat(style.borderRadius));\n      const backgroundColor = style.backgroundColor;\n      if (backgroundColor !== \"transparent\" && backgroundColor !== \"rgba(0, 0, 0, 0)\") {\n        context.fillStyle = backgroundColor;\n        context.fill();\n      }\n      const borders = [\"borderTop\", \"borderLeft\", \"borderBottom\", \"borderRight\"];\n      let match = true;\n      let prevBorder = null;\n      for (const border of borders) {\n        if (prevBorder !== null) {\n          match = style[border + \"Width\"] === style[prevBorder + \"Width\"] && style[border + \"Color\"] === style[prevBorder + \"Color\"] && style[border + \"Style\"] === style[prevBorder + \"Style\"];\n        }\n        if (match === false)\n          break;\n        prevBorder = border;\n      }\n      if (match === true) {\n        const width2 = parseFloat(style.borderTopWidth);\n        if (style.borderTopWidth !== \"0px\" && style.borderTopStyle !== \"none\" && style.borderTopColor !== \"transparent\" && style.borderTopColor !== \"rgba(0, 0, 0, 0)\") {\n          context.strokeStyle = style.borderTopColor;\n          context.lineWidth = width2;\n          context.stroke();\n        }\n      } else {\n        drawBorder(style, \"borderTop\", x, y, width, 0);\n        drawBorder(style, \"borderLeft\", x, y, 0, height);\n        drawBorder(style, \"borderBottom\", x, y + height, width, 0);\n        drawBorder(style, \"borderRight\", x + width, y, 0, height);\n      }\n      if (element2 instanceof HTMLInputElement) {\n        let accentColor = style.accentColor;\n        if (accentColor === void 0 || accentColor === \"auto\")\n          accentColor = style.color;\n        color.set(accentColor);\n        const luminance = Math.sqrt(0.299 * color.r ** 2 + 0.587 * color.g ** 2 + 0.114 * color.b ** 2);\n        const accentTextColor = luminance < 0.5 ? \"white\" : \"#111111\";\n        if (element2.type === \"radio\") {\n          buildRectPath(x, y, width, height, height);\n          context.fillStyle = \"white\";\n          context.strokeStyle = accentColor;\n          context.lineWidth = 1;\n          context.fill();\n          context.stroke();\n          if (element2.checked) {\n            buildRectPath(x + 2, y + 2, width - 4, height - 4, height);\n            context.fillStyle = accentColor;\n            context.strokeStyle = accentTextColor;\n            context.lineWidth = 2;\n            context.fill();\n            context.stroke();\n          }\n        }\n        if (element2.type === \"checkbox\") {\n          buildRectPath(x, y, width, height, 2);\n          context.fillStyle = element2.checked ? accentColor : \"white\";\n          context.strokeStyle = element2.checked ? accentTextColor : accentColor;\n          context.lineWidth = 1;\n          context.stroke();\n          context.fill();\n          if (element2.checked) {\n            const currentTextAlign = context.textAlign;\n            context.textAlign = \"center\";\n            const properties = {\n              color: accentTextColor,\n              fontFamily: style.fontFamily,\n              fontSize: height + \"px\",\n              fontWeight: \"bold\"\n            };\n            drawText(properties, x + width / 2, y, \"✔\");\n            context.textAlign = currentTextAlign;\n          }\n        }\n        if (element2.type === \"range\") {\n          const [min, max, value] = [\"min\", \"max\", \"value\"].map((property) => parseFloat(element2[property]));\n          const position = (value - min) / (max - min) * (width - height);\n          buildRectPath(x, y + height / 4, width, height / 2, height / 4);\n          context.fillStyle = accentTextColor;\n          context.strokeStyle = accentColor;\n          context.lineWidth = 1;\n          context.fill();\n          context.stroke();\n          buildRectPath(x, y + height / 4, position + height / 2, height / 2, height / 4);\n          context.fillStyle = accentColor;\n          context.fill();\n          buildRectPath(x + position, y, height, height, height / 2);\n          context.fillStyle = accentColor;\n          context.fill();\n        }\n        if (element2.type === \"color\" || element2.type === \"text\" || element2.type === \"number\") {\n          clipper.add({ x, y, width, height });\n          drawText(style, x + parseInt(style.paddingLeft), y + parseInt(style.paddingTop), element2.value);\n          clipper.remove();\n        }\n      }\n    }\n    const isClipping = style.overflow === \"auto\" || style.overflow === \"hidden\";\n    if (isClipping)\n      clipper.add({ x, y, width, height });\n    for (let i = 0; i < element2.childNodes.length; i++) {\n      drawElement(element2.childNodes[i], style);\n    }\n    if (isClipping)\n      clipper.remove();\n  }\n  const offset = element.getBoundingClientRect();\n  let canvas = canvases.get(element);\n  if (canvas === void 0) {\n    canvas = document.createElement(\"canvas\");\n    canvas.width = offset.width;\n    canvas.height = offset.height;\n    canvases.set(element, canvas);\n  }\n  const context = canvas.getContext(\n    \"2d\"\n    /*, { alpha: false }*/\n  );\n  const clipper = new Clipper(context);\n  drawElement(element);\n  return canvas;\n}\nfunction htmlevent(element, event, x, y) {\n  const mouseEventInit = {\n    clientX: x * element.offsetWidth + element.offsetLeft,\n    clientY: y * element.offsetHeight + element.offsetTop,\n    view: element.ownerDocument.defaultView\n  };\n  window.dispatchEvent(new MouseEvent(event, mouseEventInit));\n  const rect = element.getBoundingClientRect();\n  x = x * rect.width + rect.left;\n  y = y * rect.height + rect.top;\n  function traverse(element2) {\n    if (element2.nodeType !== Node.TEXT_NODE && element2.nodeType !== Node.COMMENT_NODE) {\n      const rect2 = element2.getBoundingClientRect();\n      if (x > rect2.left && x < rect2.right && y > rect2.top && y < rect2.bottom) {\n        element2.dispatchEvent(new MouseEvent(event, mouseEventInit));\n        if (element2 instanceof HTMLInputElement && element2.type === \"range\" && (event === \"mousedown\" || event === \"click\")) {\n          const [min, max] = [\"min\", \"max\"].map((property) => parseFloat(element2[property]));\n          const width = rect2.width;\n          const offsetX = x - rect2.x;\n          const proportion = offsetX / width;\n          element2.value = min + (max - min) * proportion;\n          element2.dispatchEvent(new InputEvent(\"input\", { bubbles: true }));\n        }\n      }\n      for (let i = 0; i < element2.childNodes.length; i++) {\n        traverse(element2.childNodes[i]);\n      }\n    }\n  }\n  traverse(element);\n}\nexport {\n  HTMLMesh\n};\n//# sourceMappingURL=HTMLMesh.js.map\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 13153, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13159, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/interactive/InteractiveGroup.js"],"sourcesContent":["import { Group, Raycaster, Matrix4, Vector2 } from \"three\";\nconst _pointer = /* @__PURE__ */ new Vector2();\nconst _event = { type: \"\", data: _pointer };\nclass InteractiveGroup extends Group {\n  constructor(renderer, camera) {\n    super();\n    const scope = this;\n    const raycaster = new Raycaster();\n    const tempMatrix = new Matrix4();\n    const element = renderer.domElement;\n    function onPointerEvent(event) {\n      event.stopPropagation();\n      _pointer.x = event.clientX / element.clientWidth * 2 - 1;\n      _pointer.y = -(event.clientY / element.clientHeight) * 2 + 1;\n      raycaster.setFromCamera(_pointer, camera);\n      const intersects = raycaster.intersectObjects(scope.children, false);\n      if (intersects.length > 0) {\n        const intersection = intersects[0];\n        const object = intersection.object;\n        const uv = intersection.uv;\n        _event.type = event.type;\n        _event.data.set(uv.x, 1 - uv.y);\n        object.dispatchEvent(_event);\n      }\n    }\n    element.addEventListener(\"pointerdown\", onPointerEvent);\n    element.addEventListener(\"pointerup\", onPointerEvent);\n    element.addEventListener(\"pointermove\", onPointerEvent);\n    element.addEventListener(\"mousedown\", onPointerEvent);\n    element.addEventListener(\"mouseup\", onPointerEvent);\n    element.addEventListener(\"mousemove\", onPointerEvent);\n    element.addEventListener(\"click\", onPointerEvent);\n    const events = {\n      move: \"mousemove\",\n      select: \"click\",\n      selectstart: \"mousedown\",\n      selectend: \"mouseup\"\n    };\n    function onXRControllerEvent(event) {\n      const controller = event.target;\n      tempMatrix.identity().extractRotation(controller.matrixWorld);\n      raycaster.ray.origin.setFromMatrixPosition(controller.matrixWorld);\n      raycaster.ray.direction.set(0, 0, -1).applyMatrix4(tempMatrix);\n      const intersections = raycaster.intersectObjects(scope.children, false);\n      if (intersections.length > 0) {\n        const intersection = intersections[0];\n        const object = intersection.object;\n        const uv = intersection.uv;\n        _event.type = events[event.type];\n        _event.data.set(uv.x, 1 - uv.y);\n        object.dispatchEvent(_event);\n      }\n    }\n    const controller1 = renderer.xr.getController(0);\n    controller1.addEventListener(\"move\", onXRControllerEvent);\n    controller1.addEventListener(\"select\", onXRControllerEvent);\n    controller1.addEventListener(\"selectstart\", onXRControllerEvent);\n    controller1.addEventListener(\"selectend\", onXRControllerEvent);\n    const controller2 = renderer.xr.getController(1);\n    controller2.addEventListener(\"move\", onXRControllerEvent);\n    controller2.addEventListener(\"select\", onXRControllerEvent);\n    controller2.addEventListener(\"selectstart\", onXRControllerEvent);\n    controller2.addEventListener(\"selectend\", onXRControllerEvent);\n  }\n}\nexport {\n  InteractiveGroup\n};\n//# sourceMappingURL=InteractiveGroup.js.map\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,WAAW,aAAa,GAAG,IAAI,kJAAA,CAAA,UAAO;AAC5C,MAAM,SAAS;IAAE,MAAM;IAAI,MAAM;AAAS;AAC1C,MAAM,yBAAyB,kJAAA,CAAA,QAAK;IAClC,YAAY,QAAQ,EAAE,MAAM,CAAE;QAC5B,KAAK;QACL,MAAM,QAAQ,IAAI;QAClB,MAAM,YAAY,IAAI,kJAAA,CAAA,YAAS;QAC/B,MAAM,aAAa,IAAI,kJAAA,CAAA,UAAO;QAC9B,MAAM,UAAU,SAAS,UAAU;QACnC,SAAS,eAAe,KAAK;YAC3B,MAAM,eAAe;YACrB,SAAS,CAAC,GAAG,MAAM,OAAO,GAAG,QAAQ,WAAW,GAAG,IAAI;YACvD,SAAS,CAAC,GAAG,CAAC,CAAC,MAAM,OAAO,GAAG,QAAQ,YAAY,IAAI,IAAI;YAC3D,UAAU,aAAa,CAAC,UAAU;YAClC,MAAM,aAAa,UAAU,gBAAgB,CAAC,MAAM,QAAQ,EAAE;YAC9D,IAAI,WAAW,MAAM,GAAG,GAAG;gBACzB,MAAM,eAAe,UAAU,CAAC,EAAE;gBAClC,MAAM,SAAS,aAAa,MAAM;gBAClC,MAAM,KAAK,aAAa,EAAE;gBAC1B,OAAO,IAAI,GAAG,MAAM,IAAI;gBACxB,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC;gBAC9B,OAAO,aAAa,CAAC;YACvB;QACF;QACA,QAAQ,gBAAgB,CAAC,eAAe;QACxC,QAAQ,gBAAgB,CAAC,aAAa;QACtC,QAAQ,gBAAgB,CAAC,eAAe;QACxC,QAAQ,gBAAgB,CAAC,aAAa;QACtC,QAAQ,gBAAgB,CAAC,WAAW;QACpC,QAAQ,gBAAgB,CAAC,aAAa;QACtC,QAAQ,gBAAgB,CAAC,SAAS;QAClC,MAAM,SAAS;YACb,MAAM;YACN,QAAQ;YACR,aAAa;YACb,WAAW;QACb;QACA,SAAS,oBAAoB,KAAK;YAChC,MAAM,aAAa,MAAM,MAAM;YAC/B,WAAW,QAAQ,GAAG,eAAe,CAAC,WAAW,WAAW;YAC5D,UAAU,GAAG,CAAC,MAAM,CAAC,qBAAqB,CAAC,WAAW,WAAW;YACjE,UAAU,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,YAAY,CAAC;YACnD,MAAM,gBAAgB,UAAU,gBAAgB,CAAC,MAAM,QAAQ,EAAE;YACjE,IAAI,cAAc,MAAM,GAAG,GAAG;gBAC5B,MAAM,eAAe,aAAa,CAAC,EAAE;gBACrC,MAAM,SAAS,aAAa,MAAM;gBAClC,MAAM,KAAK,aAAa,EAAE;gBAC1B,OAAO,IAAI,GAAG,MAAM,CAAC,MAAM,IAAI,CAAC;gBAChC,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC;gBAC9B,OAAO,aAAa,CAAC;YACvB;QACF;QACA,MAAM,cAAc,SAAS,EAAE,CAAC,aAAa,CAAC;QAC9C,YAAY,gBAAgB,CAAC,QAAQ;QACrC,YAAY,gBAAgB,CAAC,UAAU;QACvC,YAAY,gBAAgB,CAAC,eAAe;QAC5C,YAAY,gBAAgB,CAAC,aAAa;QAC1C,MAAM,cAAc,SAAS,EAAE,CAAC,aAAa,CAAC;QAC9C,YAAY,gBAAgB,CAAC,QAAQ;QACrC,YAAY,gBAAgB,CAAC,UAAU;QACvC,YAAY,gBAAgB,CAAC,eAAe;QAC5C,YAAY,gBAAgB,CAAC,aAAa;IAC5C;AACF;;CAIA,4CAA4C","ignoreList":[0]}},
    {"offset": {"line": 13233, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13239, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/interactive/SelectionHelper.js"],"sourcesContent":["import { Vector2 } from \"three\";\nclass SelectionHelper {\n  constructor(selectionBox, renderer, cssClassName) {\n    this.element = document.createElement(\"div\");\n    this.element.classList.add(cssClassName);\n    this.element.style.pointerEvents = \"none\";\n    this.renderer = renderer;\n    this.startPoint = new Vector2();\n    this.pointTopLeft = new Vector2();\n    this.pointBottomRight = new Vector2();\n    this.isDown = false;\n    this.renderer.domElement.addEventListener(\"pointerdown\", (event) => {\n      this.isDown = true;\n      this.onSelectStart(event);\n    });\n    this.renderer.domElement.addEventListener(\"pointermove\", (event) => {\n      if (this.isDown) {\n        this.onSelectMove(event);\n      }\n    });\n    this.renderer.domElement.addEventListener(\"pointerup\", (event) => {\n      this.isDown = false;\n      this.onSelectOver(event);\n    });\n  }\n  onSelectStart(event) {\n    this.renderer.domElement.parentElement.appendChild(this.element);\n    this.element.style.left = `${event.clientX}px`;\n    this.element.style.top = `${event.clientY}px`;\n    this.element.style.width = \"0px\";\n    this.element.style.height = \"0px\";\n    this.startPoint.x = event.clientX;\n    this.startPoint.y = event.clientY;\n  }\n  onSelectMove(event) {\n    this.pointBottomRight.x = Math.max(this.startPoint.x, event.clientX);\n    this.pointBottomRight.y = Math.max(this.startPoint.y, event.clientY);\n    this.pointTopLeft.x = Math.min(this.startPoint.x, event.clientX);\n    this.pointTopLeft.y = Math.min(this.startPoint.y, event.clientY);\n    this.element.style.left = `${this.pointTopLeft.x}px`;\n    this.element.style.top = `${this.pointTopLeft.y}px`;\n    this.element.style.width = `${this.pointBottomRight.x - this.pointTopLeft.x}px`;\n    this.element.style.height = `${this.pointBottomRight.y - this.pointTopLeft.y}px`;\n  }\n  onSelectOver() {\n    this.element.parentElement.removeChild(this.element);\n  }\n}\nexport {\n  SelectionHelper\n};\n//# sourceMappingURL=SelectionHelper.js.map\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 13293, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13299, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/interactive/SelectionBox.js"],"sourcesContent":["import { Vector3, Frustum } from \"three\";\nconst frustum = /* @__PURE__ */ new Frustum();\nconst center = /* @__PURE__ */ new Vector3();\nconst tmpPoint = /* @__PURE__ */ new Vector3();\nconst vecNear = /* @__PURE__ */ new Vector3();\nconst vecTopLeft = /* @__PURE__ */ new Vector3();\nconst vecTopRight = /* @__PURE__ */ new Vector3();\nconst vecDownRight = /* @__PURE__ */ new Vector3();\nconst vecDownLeft = /* @__PURE__ */ new Vector3();\nconst vecFarTopLeft = /* @__PURE__ */ new Vector3();\nconst vecFarTopRight = /* @__PURE__ */ new Vector3();\nconst vecFarDownRight = /* @__PURE__ */ new Vector3();\nconst vecFarDownLeft = /* @__PURE__ */ new Vector3();\nconst vectemp1 = /* @__PURE__ */ new Vector3();\nconst vectemp2 = /* @__PURE__ */ new Vector3();\nconst vectemp3 = /* @__PURE__ */ new Vector3();\nclass SelectionBox {\n  constructor(camera, scene, deep) {\n    this.camera = camera;\n    this.scene = scene;\n    this.startPoint = new Vector3();\n    this.endPoint = new Vector3();\n    this.collection = [];\n    this.deep = deep || Number.MAX_VALUE;\n  }\n  select(startPoint, endPoint) {\n    this.startPoint = startPoint || this.startPoint;\n    this.endPoint = endPoint || this.endPoint;\n    this.collection = [];\n    this.updateFrustum(this.startPoint, this.endPoint);\n    this.searchChildInFrustum(frustum, this.scene);\n    return this.collection;\n  }\n  updateFrustum(startPoint, endPoint) {\n    startPoint = startPoint || this.startPoint;\n    endPoint = endPoint || this.endPoint;\n    if (startPoint.x === endPoint.x) {\n      endPoint.x += Number.EPSILON;\n    }\n    if (startPoint.y === endPoint.y) {\n      endPoint.y += Number.EPSILON;\n    }\n    this.camera.updateProjectionMatrix();\n    this.camera.updateMatrixWorld();\n    if (this.camera.isPerspectiveCamera) {\n      tmpPoint.copy(startPoint);\n      tmpPoint.x = Math.min(startPoint.x, endPoint.x);\n      tmpPoint.y = Math.max(startPoint.y, endPoint.y);\n      endPoint.x = Math.max(startPoint.x, endPoint.x);\n      endPoint.y = Math.min(startPoint.y, endPoint.y);\n      vecNear.setFromMatrixPosition(this.camera.matrixWorld);\n      vecTopLeft.copy(tmpPoint);\n      vecTopRight.set(endPoint.x, tmpPoint.y, 0);\n      vecDownRight.copy(endPoint);\n      vecDownLeft.set(tmpPoint.x, endPoint.y, 0);\n      vecTopLeft.unproject(this.camera);\n      vecTopRight.unproject(this.camera);\n      vecDownRight.unproject(this.camera);\n      vecDownLeft.unproject(this.camera);\n      vectemp1.copy(vecTopLeft).sub(vecNear);\n      vectemp2.copy(vecTopRight).sub(vecNear);\n      vectemp3.copy(vecDownRight).sub(vecNear);\n      vectemp1.normalize();\n      vectemp2.normalize();\n      vectemp3.normalize();\n      vectemp1.multiplyScalar(this.deep);\n      vectemp2.multiplyScalar(this.deep);\n      vectemp3.multiplyScalar(this.deep);\n      vectemp1.add(vecNear);\n      vectemp2.add(vecNear);\n      vectemp3.add(vecNear);\n      var planes = frustum.planes;\n      planes[0].setFromCoplanarPoints(vecNear, vecTopLeft, vecTopRight);\n      planes[1].setFromCoplanarPoints(vecNear, vecTopRight, vecDownRight);\n      planes[2].setFromCoplanarPoints(vecDownRight, vecDownLeft, vecNear);\n      planes[3].setFromCoplanarPoints(vecDownLeft, vecTopLeft, vecNear);\n      planes[4].setFromCoplanarPoints(vecTopRight, vecDownRight, vecDownLeft);\n      planes[5].setFromCoplanarPoints(vectemp3, vectemp2, vectemp1);\n      planes[5].normal.multiplyScalar(-1);\n    } else if (this.camera.isOrthographicCamera) {\n      const left = Math.min(startPoint.x, endPoint.x);\n      const top = Math.max(startPoint.y, endPoint.y);\n      const right = Math.max(startPoint.x, endPoint.x);\n      const down = Math.min(startPoint.y, endPoint.y);\n      vecTopLeft.set(left, top, -1);\n      vecTopRight.set(right, top, -1);\n      vecDownRight.set(right, down, -1);\n      vecDownLeft.set(left, down, -1);\n      vecFarTopLeft.set(left, top, 1);\n      vecFarTopRight.set(right, top, 1);\n      vecFarDownRight.set(right, down, 1);\n      vecFarDownLeft.set(left, down, 1);\n      vecTopLeft.unproject(this.camera);\n      vecTopRight.unproject(this.camera);\n      vecDownRight.unproject(this.camera);\n      vecDownLeft.unproject(this.camera);\n      vecFarTopLeft.unproject(this.camera);\n      vecFarTopRight.unproject(this.camera);\n      vecFarDownRight.unproject(this.camera);\n      vecFarDownLeft.unproject(this.camera);\n      var planes = frustum.planes;\n      planes[0].setFromCoplanarPoints(vecTopLeft, vecFarTopLeft, vecFarTopRight);\n      planes[1].setFromCoplanarPoints(vecTopRight, vecFarTopRight, vecFarDownRight);\n      planes[2].setFromCoplanarPoints(vecFarDownRight, vecFarDownLeft, vecDownLeft);\n      planes[3].setFromCoplanarPoints(vecFarDownLeft, vecFarTopLeft, vecTopLeft);\n      planes[4].setFromCoplanarPoints(vecTopRight, vecDownRight, vecDownLeft);\n      planes[5].setFromCoplanarPoints(vecFarDownRight, vecFarTopRight, vecFarTopLeft);\n      planes[5].normal.multiplyScalar(-1);\n    } else {\n      console.error(\"THREE.SelectionBox: Unsupported camera type.\");\n    }\n  }\n  searchChildInFrustum(frustum2, object) {\n    if (object.isMesh || object.isLine || object.isPoints) {\n      if (object.material !== void 0) {\n        if (object.geometry.boundingSphere === null)\n          object.geometry.computeBoundingSphere();\n        center.copy(object.geometry.boundingSphere.center);\n        center.applyMatrix4(object.matrixWorld);\n        if (frustum2.containsPoint(center)) {\n          this.collection.push(object);\n        }\n      }\n    }\n    if (object.children.length > 0) {\n      for (let x = 0; x < object.children.length; x++) {\n        this.searchChildInFrustum(frustum2, object.children[x]);\n      }\n    }\n  }\n}\nexport {\n  SelectionBox\n};\n//# sourceMappingURL=SelectionBox.js.map\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,UAAU,aAAa,GAAG,IAAI,kJAAA,CAAA,UAAO;AAC3C,MAAM,SAAS,aAAa,GAAG,IAAI,kJAAA,CAAA,UAAO;AAC1C,MAAM,WAAW,aAAa,GAAG,IAAI,kJAAA,CAAA,UAAO;AAC5C,MAAM,UAAU,aAAa,GAAG,IAAI,kJAAA,CAAA,UAAO;AAC3C,MAAM,aAAa,aAAa,GAAG,IAAI,kJAAA,CAAA,UAAO;AAC9C,MAAM,cAAc,aAAa,GAAG,IAAI,kJAAA,CAAA,UAAO;AAC/C,MAAM,eAAe,aAAa,GAAG,IAAI,kJAAA,CAAA,UAAO;AAChD,MAAM,cAAc,aAAa,GAAG,IAAI,kJAAA,CAAA,UAAO;AAC/C,MAAM,gBAAgB,aAAa,GAAG,IAAI,kJAAA,CAAA,UAAO;AACjD,MAAM,iBAAiB,aAAa,GAAG,IAAI,kJAAA,CAAA,UAAO;AAClD,MAAM,kBAAkB,aAAa,GAAG,IAAI,kJAAA,CAAA,UAAO;AACnD,MAAM,iBAAiB,aAAa,GAAG,IAAI,kJAAA,CAAA,UAAO;AAClD,MAAM,WAAW,aAAa,GAAG,IAAI,kJAAA,CAAA,UAAO;AAC5C,MAAM,WAAW,aAAa,GAAG,IAAI,kJAAA,CAAA,UAAO;AAC5C,MAAM,WAAW,aAAa,GAAG,IAAI,kJAAA,CAAA,UAAO;AAC5C,MAAM;IACJ,YAAY,MAAM,EAAE,KAAK,EAAE,IAAI,CAAE;QAC/B,IAAI,CAAC,MAAM,GAAG;QACd,IAAI,CAAC,KAAK,GAAG;QACb,IAAI,CAAC,UAAU,GAAG,IAAI,kJAAA,CAAA,UAAO;QAC7B,IAAI,CAAC,QAAQ,GAAG,IAAI,kJAAA,CAAA,UAAO;QAC3B,IAAI,CAAC,UAAU,GAAG,EAAE;QACpB,IAAI,CAAC,IAAI,GAAG,QAAQ,OAAO,SAAS;IACtC;IACA,OAAO,UAAU,EAAE,QAAQ,EAAE;QAC3B,IAAI,CAAC,UAAU,GAAG,cAAc,IAAI,CAAC,UAAU;QAC/C,IAAI,CAAC,QAAQ,GAAG,YAAY,IAAI,CAAC,QAAQ;QACzC,IAAI,CAAC,UAAU,GAAG,EAAE;QACpB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ;QACjD,IAAI,CAAC,oBAAoB,CAAC,SAAS,IAAI,CAAC,KAAK;QAC7C,OAAO,IAAI,CAAC,UAAU;IACxB;IACA,cAAc,UAAU,EAAE,QAAQ,EAAE;QAClC,aAAa,cAAc,IAAI,CAAC,UAAU;QAC1C,WAAW,YAAY,IAAI,CAAC,QAAQ;QACpC,IAAI,WAAW,CAAC,KAAK,SAAS,CAAC,EAAE;YAC/B,SAAS,CAAC,IAAI,OAAO,OAAO;QAC9B;QACA,IAAI,WAAW,CAAC,KAAK,SAAS,CAAC,EAAE;YAC/B,SAAS,CAAC,IAAI,OAAO,OAAO;QAC9B;QACA,IAAI,CAAC,MAAM,CAAC,sBAAsB;QAClC,IAAI,CAAC,MAAM,CAAC,iBAAiB;QAC7B,IAAI,IAAI,CAAC,MAAM,CAAC,mBAAmB,EAAE;YACnC,SAAS,IAAI,CAAC;YACd,SAAS,CAAC,GAAG,KAAK,GAAG,CAAC,WAAW,CAAC,EAAE,SAAS,CAAC;YAC9C,SAAS,CAAC,GAAG,KAAK,GAAG,CAAC,WAAW,CAAC,EAAE,SAAS,CAAC;YAC9C,SAAS,CAAC,GAAG,KAAK,GAAG,CAAC,WAAW,CAAC,EAAE,SAAS,CAAC;YAC9C,SAAS,CAAC,GAAG,KAAK,GAAG,CAAC,WAAW,CAAC,EAAE,SAAS,CAAC;YAC9C,QAAQ,qBAAqB,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW;YACrD,WAAW,IAAI,CAAC;YAChB,YAAY,GAAG,CAAC,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE;YACxC,aAAa,IAAI,CAAC;YAClB,YAAY,GAAG,CAAC,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE;YACxC,WAAW,SAAS,CAAC,IAAI,CAAC,MAAM;YAChC,YAAY,SAAS,CAAC,IAAI,CAAC,MAAM;YACjC,aAAa,SAAS,CAAC,IAAI,CAAC,MAAM;YAClC,YAAY,SAAS,CAAC,IAAI,CAAC,MAAM;YACjC,SAAS,IAAI,CAAC,YAAY,GAAG,CAAC;YAC9B,SAAS,IAAI,CAAC,aAAa,GAAG,CAAC;YAC/B,SAAS,IAAI,CAAC,cAAc,GAAG,CAAC;YAChC,SAAS,SAAS;YAClB,SAAS,SAAS;YAClB,SAAS,SAAS;YAClB,SAAS,cAAc,CAAC,IAAI,CAAC,IAAI;YACjC,SAAS,cAAc,CAAC,IAAI,CAAC,IAAI;YACjC,SAAS,cAAc,CAAC,IAAI,CAAC,IAAI;YACjC,SAAS,GAAG,CAAC;YACb,SAAS,GAAG,CAAC;YACb,SAAS,GAAG,CAAC;YACb,IAAI,SAAS,QAAQ,MAAM;YAC3B,MAAM,CAAC,EAAE,CAAC,qBAAqB,CAAC,SAAS,YAAY;YACrD,MAAM,CAAC,EAAE,CAAC,qBAAqB,CAAC,SAAS,aAAa;YACtD,MAAM,CAAC,EAAE,CAAC,qBAAqB,CAAC,cAAc,aAAa;YAC3D,MAAM,CAAC,EAAE,CAAC,qBAAqB,CAAC,aAAa,YAAY;YACzD,MAAM,CAAC,EAAE,CAAC,qBAAqB,CAAC,aAAa,cAAc;YAC3D,MAAM,CAAC,EAAE,CAAC,qBAAqB,CAAC,UAAU,UAAU;YACpD,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;QACnC,OAAO,IAAI,IAAI,CAAC,MAAM,CAAC,oBAAoB,EAAE;YAC3C,MAAM,OAAO,KAAK,GAAG,CAAC,WAAW,CAAC,EAAE,SAAS,CAAC;YAC9C,MAAM,MAAM,KAAK,GAAG,CAAC,WAAW,CAAC,EAAE,SAAS,CAAC;YAC7C,MAAM,QAAQ,KAAK,GAAG,CAAC,WAAW,CAAC,EAAE,SAAS,CAAC;YAC/C,MAAM,OAAO,KAAK,GAAG,CAAC,WAAW,CAAC,EAAE,SAAS,CAAC;YAC9C,WAAW,GAAG,CAAC,MAAM,KAAK,CAAC;YAC3B,YAAY,GAAG,CAAC,OAAO,KAAK,CAAC;YAC7B,aAAa,GAAG,CAAC,OAAO,MAAM,CAAC;YAC/B,YAAY,GAAG,CAAC,MAAM,MAAM,CAAC;YAC7B,cAAc,GAAG,CAAC,MAAM,KAAK;YAC7B,eAAe,GAAG,CAAC,OAAO,KAAK;YAC/B,gBAAgB,GAAG,CAAC,OAAO,MAAM;YACjC,eAAe,GAAG,CAAC,MAAM,MAAM;YAC/B,WAAW,SAAS,CAAC,IAAI,CAAC,MAAM;YAChC,YAAY,SAAS,CAAC,IAAI,CAAC,MAAM;YACjC,aAAa,SAAS,CAAC,IAAI,CAAC,MAAM;YAClC,YAAY,SAAS,CAAC,IAAI,CAAC,MAAM;YACjC,cAAc,SAAS,CAAC,IAAI,CAAC,MAAM;YACnC,eAAe,SAAS,CAAC,IAAI,CAAC,MAAM;YACpC,gBAAgB,SAAS,CAAC,IAAI,CAAC,MAAM;YACrC,eAAe,SAAS,CAAC,IAAI,CAAC,MAAM;YACpC,IAAI,SAAS,QAAQ,MAAM;YAC3B,MAAM,CAAC,EAAE,CAAC,qBAAqB,CAAC,YAAY,eAAe;YAC3D,MAAM,CAAC,EAAE,CAAC,qBAAqB,CAAC,aAAa,gBAAgB;YAC7D,MAAM,CAAC,EAAE,CAAC,qBAAqB,CAAC,iBAAiB,gBAAgB;YACjE,MAAM,CAAC,EAAE,CAAC,qBAAqB,CAAC,gBAAgB,eAAe;YAC/D,MAAM,CAAC,EAAE,CAAC,qBAAqB,CAAC,aAAa,cAAc;YAC3D,MAAM,CAAC,EAAE,CAAC,qBAAqB,CAAC,iBAAiB,gBAAgB;YACjE,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;QACnC,OAAO;YACL,QAAQ,KAAK,CAAC;QAChB;IACF;IACA,qBAAqB,QAAQ,EAAE,MAAM,EAAE;QACrC,IAAI,OAAO,MAAM,IAAI,OAAO,MAAM,IAAI,OAAO,QAAQ,EAAE;YACrD,IAAI,OAAO,QAAQ,KAAK,KAAK,GAAG;gBAC9B,IAAI,OAAO,QAAQ,CAAC,cAAc,KAAK,MACrC,OAAO,QAAQ,CAAC,qBAAqB;gBACvC,OAAO,IAAI,CAAC,OAAO,QAAQ,CAAC,cAAc,CAAC,MAAM;gBACjD,OAAO,YAAY,CAAC,OAAO,WAAW;gBACtC,IAAI,SAAS,aAAa,CAAC,SAAS;oBAClC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;gBACvB;YACF;QACF;QACA,IAAI,OAAO,QAAQ,CAAC,MAAM,GAAG,GAAG;YAC9B,IAAK,IAAI,IAAI,GAAG,IAAI,OAAO,QAAQ,CAAC,MAAM,EAAE,IAAK;gBAC/C,IAAI,CAAC,oBAAoB,CAAC,UAAU,OAAO,QAAQ,CAAC,EAAE;YACxD;QACF;IACF;AACF;;CAIA,wCAAwC","ignoreList":[0]}},
    {"offset": {"line": 13435, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13441, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/physics/AmmoPhysics.js"],"sourcesContent":["async function AmmoPhysics() {\n  if (\"Ammo\" in window === false) {\n    console.error(\"AmmoPhysics: Couldn't find Ammo.js\");\n    return;\n  }\n  const AmmoLib = await Ammo();\n  const frameRate = 60;\n  const collisionConfiguration = new AmmoLib.btDefaultCollisionConfiguration();\n  const dispatcher = new AmmoLib.btCollisionDispatcher(collisionConfiguration);\n  const broadphase = new AmmoLib.btDbvtBroadphase();\n  const solver = new AmmoLib.btSequentialImpulseConstraintSolver();\n  const world = new AmmoLib.btDiscreteDynamicsWorld(dispatcher, broadphase, solver, collisionConfiguration);\n  world.setGravity(new AmmoLib.btVector3(0, -9.8, 0));\n  const worldTransform = new AmmoLib.btTransform();\n  function getShape(geometry) {\n    const parameters = geometry.parameters;\n    if (geometry.type === \"BoxGeometry\") {\n      const sx = parameters.width !== void 0 ? parameters.width / 2 : 0.5;\n      const sy = parameters.height !== void 0 ? parameters.height / 2 : 0.5;\n      const sz = parameters.depth !== void 0 ? parameters.depth / 2 : 0.5;\n      const shape = new AmmoLib.btBoxShape(new AmmoLib.btVector3(sx, sy, sz));\n      shape.setMargin(0.05);\n      return shape;\n    } else if (geometry.type === \"SphereGeometry\" || geometry.type === \"IcosahedronGeometry\") {\n      const radius = parameters.radius !== void 0 ? parameters.radius : 1;\n      const shape = new AmmoLib.btSphereShape(radius);\n      shape.setMargin(0.05);\n      return shape;\n    }\n    return null;\n  }\n  const meshes = [];\n  const meshMap = /* @__PURE__ */ new WeakMap();\n  function addMesh(mesh, mass = 0) {\n    const shape = getShape(mesh.geometry);\n    if (shape !== null) {\n      if (mesh.isInstancedMesh) {\n        handleInstancedMesh(mesh, mass, shape);\n      } else if (mesh.isMesh) {\n        handleMesh(mesh, mass, shape);\n      }\n    }\n  }\n  function handleMesh(mesh, mass, shape) {\n    const position = mesh.position;\n    const quaternion = mesh.quaternion;\n    const transform = new AmmoLib.btTransform();\n    transform.setIdentity();\n    transform.setOrigin(new AmmoLib.btVector3(position.x, position.y, position.z));\n    transform.setRotation(new AmmoLib.btQuaternion(quaternion.x, quaternion.y, quaternion.z, quaternion.w));\n    const motionState = new AmmoLib.btDefaultMotionState(transform);\n    const localInertia = new AmmoLib.btVector3(0, 0, 0);\n    shape.calculateLocalInertia(mass, localInertia);\n    const rbInfo = new AmmoLib.btRigidBodyConstructionInfo(mass, motionState, shape, localInertia);\n    const body = new AmmoLib.btRigidBody(rbInfo);\n    world.addRigidBody(body);\n    if (mass > 0) {\n      meshes.push(mesh);\n      meshMap.set(mesh, body);\n    }\n  }\n  function handleInstancedMesh(mesh, mass, shape) {\n    const array = mesh.instanceMatrix.array;\n    const bodies = [];\n    for (let i = 0; i < mesh.count; i++) {\n      const index = i * 16;\n      const transform = new AmmoLib.btTransform();\n      transform.setFromOpenGLMatrix(array.slice(index, index + 16));\n      const motionState = new AmmoLib.btDefaultMotionState(transform);\n      const localInertia = new AmmoLib.btVector3(0, 0, 0);\n      shape.calculateLocalInertia(mass, localInertia);\n      const rbInfo = new AmmoLib.btRigidBodyConstructionInfo(mass, motionState, shape, localInertia);\n      const body = new AmmoLib.btRigidBody(rbInfo);\n      world.addRigidBody(body);\n      bodies.push(body);\n    }\n    if (mass > 0) {\n      mesh.instanceMatrix.setUsage(35048);\n      meshes.push(mesh);\n      meshMap.set(mesh, bodies);\n    }\n  }\n  function setMeshPosition(mesh, position, index = 0) {\n    if (mesh.isInstancedMesh) {\n      const bodies = meshMap.get(mesh);\n      const body = bodies[index];\n      body.setAngularVelocity(new AmmoLib.btVector3(0, 0, 0));\n      body.setLinearVelocity(new AmmoLib.btVector3(0, 0, 0));\n      worldTransform.setIdentity();\n      worldTransform.setOrigin(new AmmoLib.btVector3(position.x, position.y, position.z));\n      body.setWorldTransform(worldTransform);\n    } else if (mesh.isMesh) {\n      const body = meshMap.get(mesh);\n      body.setAngularVelocity(new AmmoLib.btVector3(0, 0, 0));\n      body.setLinearVelocity(new AmmoLib.btVector3(0, 0, 0));\n      worldTransform.setIdentity();\n      worldTransform.setOrigin(new AmmoLib.btVector3(position.x, position.y, position.z));\n      body.setWorldTransform(worldTransform);\n    }\n  }\n  let lastTime = 0;\n  function step() {\n    const time = performance.now();\n    if (lastTime > 0) {\n      const delta = (time - lastTime) / 1e3;\n      world.stepSimulation(delta, 10);\n    }\n    lastTime = time;\n    for (let i = 0, l = meshes.length; i < l; i++) {\n      const mesh = meshes[i];\n      if (mesh.isInstancedMesh) {\n        const array = mesh.instanceMatrix.array;\n        const bodies = meshMap.get(mesh);\n        for (let j = 0; j < bodies.length; j++) {\n          const body = bodies[j];\n          const motionState = body.getMotionState();\n          motionState.getWorldTransform(worldTransform);\n          const position = worldTransform.getOrigin();\n          const quaternion = worldTransform.getRotation();\n          compose(position, quaternion, array, j * 16);\n        }\n        mesh.instanceMatrix.needsUpdate = true;\n      } else if (mesh.isMesh) {\n        const body = meshMap.get(mesh);\n        const motionState = body.getMotionState();\n        motionState.getWorldTransform(worldTransform);\n        const position = worldTransform.getOrigin();\n        const quaternion = worldTransform.getRotation();\n        mesh.position.set(position.x(), position.y(), position.z());\n        mesh.quaternion.set(quaternion.x(), quaternion.y(), quaternion.z(), quaternion.w());\n      }\n    }\n  }\n  setInterval(step, 1e3 / frameRate);\n  return {\n    addMesh,\n    setMeshPosition\n    // addCompoundMesh\n  };\n}\nfunction compose(position, quaternion, array, index) {\n  const x = quaternion.x(), y = quaternion.y(), z = quaternion.z(), w = quaternion.w();\n  const x2 = x + x, y2 = y + y, z2 = z + z;\n  const xx = x * x2, xy = x * y2, xz = x * z2;\n  const yy = y * y2, yz = y * z2, zz = z * z2;\n  const wx = w * x2, wy = w * y2, wz = w * z2;\n  array[index + 0] = 1 - (yy + zz);\n  array[index + 1] = xy + wz;\n  array[index + 2] = xz - wy;\n  array[index + 3] = 0;\n  array[index + 4] = xy - wz;\n  array[index + 5] = 1 - (xx + zz);\n  array[index + 6] = yz + wx;\n  array[index + 7] = 0;\n  array[index + 8] = xz + wy;\n  array[index + 9] = yz - wx;\n  array[index + 10] = 1 - (xx + yy);\n  array[index + 11] = 0;\n  array[index + 12] = position.x();\n  array[index + 13] = position.y();\n  array[index + 14] = position.z();\n  array[index + 15] = 1;\n}\nexport {\n  AmmoPhysics\n};\n//# sourceMappingURL=AmmoPhysics.js.map\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 13608, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13614, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/effects/ParallaxBarrierEffect.js"],"sourcesContent":["import { OrthographicCamera, Scene, StereoCamera, WebGLRenderTarget, ShaderMaterial, Mesh, PlaneGeometry, LinearFilter, NearestFilter, RGBAFormat } from \"three\";\nimport { version } from \"../_polyfill/constants.js\";\nclass ParallaxBarrierEffect {\n  constructor(renderer) {\n    const _camera = new OrthographicCamera(-1, 1, 1, -1, 0, 1);\n    const _scene = new Scene();\n    const _stereo = new StereoCamera();\n    const _params = { minFilter: LinearFilter, magFilter: NearestFilter, format: RGBAFormat };\n    const _renderTargetL = new WebGLRenderTarget(512, 512, _params);\n    const _renderTargetR = new WebGLRenderTarget(512, 512, _params);\n    const _material = new ShaderMaterial({\n      uniforms: {\n        mapLeft: { value: _renderTargetL.texture },\n        mapRight: { value: _renderTargetR.texture }\n      },\n      vertexShader: [\n        \"varying vec2 vUv;\",\n        \"void main() {\",\n        \"\tvUv = vec2( uv.x, uv.y );\",\n        \"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n        \"}\"\n      ].join(\"\\n\"),\n      fragmentShader: [\n        \"uniform sampler2D mapLeft;\",\n        \"uniform sampler2D mapRight;\",\n        \"varying vec2 vUv;\",\n        \"void main() {\",\n        \"\tvec2 uv = vUv;\",\n        \"\tif ( ( mod( gl_FragCoord.y, 2.0 ) ) > 1.00 ) {\",\n        \"\t\tgl_FragColor = texture2D( mapLeft, uv );\",\n        \"\t} else {\",\n        \"\t\tgl_FragColor = texture2D( mapRight, uv );\",\n        \"\t}\",\n        \"\t#include <tonemapping_fragment>\",\n        `\t#include <${version >= 154 ? \"colorspace_fragment\" : \"encodings_fragment\"}>`,\n        \"}\"\n      ].join(\"\\n\")\n    });\n    const mesh = new Mesh(new PlaneGeometry(2, 2), _material);\n    _scene.add(mesh);\n    this.setSize = function(width, height) {\n      renderer.setSize(width, height);\n      const pixelRatio = renderer.getPixelRatio();\n      _renderTargetL.setSize(width * pixelRatio, height * pixelRatio);\n      _renderTargetR.setSize(width * pixelRatio, height * pixelRatio);\n    };\n    this.render = function(scene, camera) {\n      if (scene.matrixWorldAutoUpdate === true)\n        scene.updateMatrixWorld();\n      if (camera.parent === null && camera.matrixWorldAutoUpdate === true)\n        camera.updateMatrixWorld();\n      _stereo.update(camera);\n      renderer.setRenderTarget(_renderTargetL);\n      renderer.clear();\n      renderer.render(scene, _stereo.cameraL);\n      renderer.setRenderTarget(_renderTargetR);\n      renderer.clear();\n      renderer.render(scene, _stereo.cameraR);\n      renderer.setRenderTarget(null);\n      renderer.render(_scene, _camera);\n    };\n  }\n}\nexport {\n  ParallaxBarrierEffect\n};\n//# sourceMappingURL=ParallaxBarrierEffect.js.map\n"],"names":[],"mappings":";;;AACA;AADA;;;AAEA,MAAM;IACJ,YAAY,QAAQ,CAAE;QACpB,MAAM,UAAU,IAAI,kJAAA,CAAA,qBAAkB,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG;QACxD,MAAM,SAAS,IAAI,kJAAA,CAAA,QAAK;QACxB,MAAM,UAAU,IAAI,kJAAA,CAAA,eAAY;QAChC,MAAM,UAAU;YAAE,WAAW,kJAAA,CAAA,eAAY;YAAE,WAAW,kJAAA,CAAA,gBAAa;YAAE,QAAQ,kJAAA,CAAA,aAAU;QAAC;QACxF,MAAM,iBAAiB,IAAI,kJAAA,CAAA,oBAAiB,CAAC,KAAK,KAAK;QACvD,MAAM,iBAAiB,IAAI,kJAAA,CAAA,oBAAiB,CAAC,KAAK,KAAK;QACvD,MAAM,YAAY,IAAI,kJAAA,CAAA,iBAAc,CAAC;YACnC,UAAU;gBACR,SAAS;oBAAE,OAAO,eAAe,OAAO;gBAAC;gBACzC,UAAU;oBAAE,OAAO,eAAe,OAAO;gBAAC;YAC5C;YACA,cAAc;gBACZ;gBACA;gBACA;gBACA;gBACA;aACD,CAAC,IAAI,CAAC;YACP,gBAAgB;gBACd;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA,CAAC,WAAW,EAAE,4JAAA,CAAA,UAAO,IAAI,MAAM,wBAAwB,qBAAqB,CAAC,CAAC;gBAC9E;aACD,CAAC,IAAI,CAAC;QACT;QACA,MAAM,OAAO,IAAI,kJAAA,CAAA,OAAI,CAAC,IAAI,kJAAA,CAAA,gBAAa,CAAC,GAAG,IAAI;QAC/C,OAAO,GAAG,CAAC;QACX,IAAI,CAAC,OAAO,GAAG,SAAS,KAAK,EAAE,MAAM;YACnC,SAAS,OAAO,CAAC,OAAO;YACxB,MAAM,aAAa,SAAS,aAAa;YACzC,eAAe,OAAO,CAAC,QAAQ,YAAY,SAAS;YACpD,eAAe,OAAO,CAAC,QAAQ,YAAY,SAAS;QACtD;QACA,IAAI,CAAC,MAAM,GAAG,SAAS,KAAK,EAAE,MAAM;YAClC,IAAI,MAAM,qBAAqB,KAAK,MAClC,MAAM,iBAAiB;YACzB,IAAI,OAAO,MAAM,KAAK,QAAQ,OAAO,qBAAqB,KAAK,MAC7D,OAAO,iBAAiB;YAC1B,QAAQ,MAAM,CAAC;YACf,SAAS,eAAe,CAAC;YACzB,SAAS,KAAK;YACd,SAAS,MAAM,CAAC,OAAO,QAAQ,OAAO;YACtC,SAAS,eAAe,CAAC;YACzB,SAAS,KAAK;YACd,SAAS,MAAM,CAAC,OAAO,QAAQ,OAAO;YACtC,SAAS,eAAe,CAAC;YACzB,SAAS,MAAM,CAAC,QAAQ;QAC1B;IACF;AACF;;CAIA,iDAAiD","ignoreList":[0]}},
    {"offset": {"line": 13690, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13696, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/effects/PeppersGhostEffect.js"],"sourcesContent":["import { PerspectiveCamera, Vector3, Quaternion } from \"three\";\nclass PeppersGhostEffect {\n  constructor(renderer) {\n    const scope = this;\n    scope.cameraDistance = 15;\n    scope.reflectFromAbove = false;\n    let _halfWidth, _width, _height;\n    const _cameraF = new PerspectiveCamera();\n    const _cameraB = new PerspectiveCamera();\n    const _cameraL = new PerspectiveCamera();\n    const _cameraR = new PerspectiveCamera();\n    const _position = new Vector3();\n    const _quaternion = new Quaternion();\n    const _scale = new Vector3();\n    renderer.autoClear = false;\n    this.setSize = function(width, height) {\n      _halfWidth = width / 2;\n      if (width < height) {\n        _width = width / 3;\n        _height = width / 3;\n      } else {\n        _width = height / 3;\n        _height = height / 3;\n      }\n      renderer.setSize(width, height);\n    };\n    this.render = function(scene, camera) {\n      if (scene.matrixWorldAutoUpdate === true)\n        scene.updateMatrixWorld();\n      if (camera.parent === null && camera.matrixWorldAutoUpdate === true)\n        camera.updateMatrixWorld();\n      camera.matrixWorld.decompose(_position, _quaternion, _scale);\n      _cameraF.position.copy(_position);\n      _cameraF.quaternion.copy(_quaternion);\n      _cameraF.translateZ(scope.cameraDistance);\n      _cameraF.lookAt(scene.position);\n      _cameraB.position.copy(_position);\n      _cameraB.quaternion.copy(_quaternion);\n      _cameraB.translateZ(-scope.cameraDistance);\n      _cameraB.lookAt(scene.position);\n      _cameraB.rotation.z += 180 * (Math.PI / 180);\n      _cameraL.position.copy(_position);\n      _cameraL.quaternion.copy(_quaternion);\n      _cameraL.translateX(-scope.cameraDistance);\n      _cameraL.lookAt(scene.position);\n      _cameraL.rotation.x += 90 * (Math.PI / 180);\n      _cameraR.position.copy(_position);\n      _cameraR.quaternion.copy(_quaternion);\n      _cameraR.translateX(scope.cameraDistance);\n      _cameraR.lookAt(scene.position);\n      _cameraR.rotation.x += 90 * (Math.PI / 180);\n      renderer.clear();\n      renderer.setScissorTest(true);\n      renderer.setScissor(_halfWidth - _width / 2, _height * 2, _width, _height);\n      renderer.setViewport(_halfWidth - _width / 2, _height * 2, _width, _height);\n      if (scope.reflectFromAbove) {\n        renderer.render(scene, _cameraB);\n      } else {\n        renderer.render(scene, _cameraF);\n      }\n      renderer.setScissor(_halfWidth - _width / 2, 0, _width, _height);\n      renderer.setViewport(_halfWidth - _width / 2, 0, _width, _height);\n      if (scope.reflectFromAbove) {\n        renderer.render(scene, _cameraF);\n      } else {\n        renderer.render(scene, _cameraB);\n      }\n      renderer.setScissor(_halfWidth - _width / 2 - _width, _height, _width, _height);\n      renderer.setViewport(_halfWidth - _width / 2 - _width, _height, _width, _height);\n      if (scope.reflectFromAbove) {\n        renderer.render(scene, _cameraR);\n      } else {\n        renderer.render(scene, _cameraL);\n      }\n      renderer.setScissor(_halfWidth + _width / 2, _height, _width, _height);\n      renderer.setViewport(_halfWidth + _width / 2, _height, _width, _height);\n      if (scope.reflectFromAbove) {\n        renderer.render(scene, _cameraL);\n      } else {\n        renderer.render(scene, _cameraR);\n      }\n      renderer.setScissorTest(false);\n    };\n  }\n}\nexport {\n  PeppersGhostEffect\n};\n//# sourceMappingURL=PeppersGhostEffect.js.map\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 13785, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13791, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/effects/OutlineEffect.js"],"sourcesContent":["import { Color, ShaderMaterial, UniformsUtils, UniformsLib, BackSide } from \"three\";\nimport { version } from \"../_polyfill/constants.js\";\nclass OutlineEffect {\n  constructor(renderer, parameters = {}) {\n    this.enabled = true;\n    const defaultThickness = parameters.defaultThickness !== void 0 ? parameters.defaultThickness : 3e-3;\n    const defaultColor = new Color().fromArray(\n      parameters.defaultColor !== void 0 ? parameters.defaultColor : [0, 0, 0]\n    );\n    const defaultAlpha = parameters.defaultAlpha !== void 0 ? parameters.defaultAlpha : 1;\n    const defaultKeepAlive = parameters.defaultKeepAlive !== void 0 ? parameters.defaultKeepAlive : false;\n    const cache = {};\n    const removeThresholdCount = 60;\n    const originalMaterials = {};\n    const originalOnBeforeRenders = {};\n    const uniformsOutline = {\n      outlineThickness: { value: defaultThickness },\n      outlineColor: { value: defaultColor },\n      outlineAlpha: { value: defaultAlpha }\n    };\n    const vertexShader = [\n      \"#include <common>\",\n      \"#include <uv_pars_vertex>\",\n      \"#include <displacementmap_pars_vertex>\",\n      \"#include <fog_pars_vertex>\",\n      \"#include <morphtarget_pars_vertex>\",\n      \"#include <skinning_pars_vertex>\",\n      \"#include <logdepthbuf_pars_vertex>\",\n      \"#include <clipping_planes_pars_vertex>\",\n      \"uniform float outlineThickness;\",\n      \"vec4 calculateOutline( vec4 pos, vec3 normal, vec4 skinned ) {\",\n      \"\tfloat thickness = outlineThickness;\",\n      \"\tconst float ratio = 1.0;\",\n      // TODO: support outline thickness ratio for each vertex\n      \"\tvec4 pos2 = projectionMatrix * modelViewMatrix * vec4( skinned.xyz + normal, 1.0 );\",\n      // NOTE: subtract pos2 from pos because BackSide objectNormal is negative\n      \"\tvec4 norm = normalize( pos - pos2 );\",\n      \"\treturn pos + norm * thickness * pos.w * ratio;\",\n      \"}\",\n      \"void main() {\",\n      \"\t#include <uv_vertex>\",\n      \"\t#include <beginnormal_vertex>\",\n      \"\t#include <morphnormal_vertex>\",\n      \"\t#include <skinbase_vertex>\",\n      \"\t#include <skinnormal_vertex>\",\n      \"\t#include <begin_vertex>\",\n      \"\t#include <morphtarget_vertex>\",\n      \"\t#include <skinning_vertex>\",\n      \"\t#include <displacementmap_vertex>\",\n      \"\t#include <project_vertex>\",\n      \"\tvec3 outlineNormal = - objectNormal;\",\n      // the outline material is always rendered with BackSide\n      \"\tgl_Position = calculateOutline( gl_Position, outlineNormal, vec4( transformed, 1.0 ) );\",\n      \"\t#include <logdepthbuf_vertex>\",\n      \"\t#include <clipping_planes_vertex>\",\n      \"\t#include <fog_vertex>\",\n      \"}\"\n    ].join(\"\\n\");\n    const fragmentShader = [\n      \"#include <common>\",\n      \"#include <fog_pars_fragment>\",\n      \"#include <logdepthbuf_pars_fragment>\",\n      \"#include <clipping_planes_pars_fragment>\",\n      \"uniform vec3 outlineColor;\",\n      \"uniform float outlineAlpha;\",\n      \"void main() {\",\n      \"\t#include <clipping_planes_fragment>\",\n      \"\t#include <logdepthbuf_fragment>\",\n      \"\tgl_FragColor = vec4( outlineColor, outlineAlpha );\",\n      \"\t#include <tonemapping_fragment>\",\n      `\t#include <${version >= 154 ? \"colorspace_fragment\" : \"encodings_fragment\"}>`,\n      \"\t#include <fog_fragment>\",\n      \"\t#include <premultiplied_alpha_fragment>\",\n      \"}\"\n    ].join(\"\\n\");\n    function createMaterial() {\n      return new ShaderMaterial({\n        type: \"OutlineEffect\",\n        uniforms: UniformsUtils.merge([UniformsLib[\"fog\"], UniformsLib[\"displacementmap\"], uniformsOutline]),\n        vertexShader,\n        fragmentShader,\n        side: BackSide\n      });\n    }\n    function getOutlineMaterialFromCache(originalMaterial) {\n      let data = cache[originalMaterial.uuid];\n      if (data === void 0) {\n        data = {\n          material: createMaterial(),\n          used: true,\n          keepAlive: defaultKeepAlive,\n          count: 0\n        };\n        cache[originalMaterial.uuid] = data;\n      }\n      data.used = true;\n      return data.material;\n    }\n    function getOutlineMaterial(originalMaterial) {\n      const outlineMaterial = getOutlineMaterialFromCache(originalMaterial);\n      originalMaterials[outlineMaterial.uuid] = originalMaterial;\n      updateOutlineMaterial(outlineMaterial, originalMaterial);\n      return outlineMaterial;\n    }\n    function isCompatible(object) {\n      const geometry = object.geometry;\n      const hasNormals = geometry !== void 0 && geometry.attributes.normal !== void 0;\n      return object.isMesh === true && object.material !== void 0 && hasNormals === true;\n    }\n    function setOutlineMaterial(object) {\n      if (isCompatible(object) === false)\n        return;\n      if (Array.isArray(object.material)) {\n        for (let i = 0, il = object.material.length; i < il; i++) {\n          object.material[i] = getOutlineMaterial(object.material[i]);\n        }\n      } else {\n        object.material = getOutlineMaterial(object.material);\n      }\n      originalOnBeforeRenders[object.uuid] = object.onBeforeRender;\n      object.onBeforeRender = onBeforeRender;\n    }\n    function restoreOriginalMaterial(object) {\n      if (isCompatible(object) === false)\n        return;\n      if (Array.isArray(object.material)) {\n        for (let i = 0, il = object.material.length; i < il; i++) {\n          object.material[i] = originalMaterials[object.material[i].uuid];\n        }\n      } else {\n        object.material = originalMaterials[object.material.uuid];\n      }\n      object.onBeforeRender = originalOnBeforeRenders[object.uuid];\n    }\n    function onBeforeRender(renderer2, scene, camera, geometry, material) {\n      const originalMaterial = originalMaterials[material.uuid];\n      if (originalMaterial === void 0)\n        return;\n      updateUniforms(material, originalMaterial);\n    }\n    function updateUniforms(material, originalMaterial) {\n      const outlineParameters = originalMaterial.userData.outlineParameters;\n      material.uniforms.outlineAlpha.value = originalMaterial.opacity;\n      if (outlineParameters !== void 0) {\n        if (outlineParameters.thickness !== void 0)\n          material.uniforms.outlineThickness.value = outlineParameters.thickness;\n        if (outlineParameters.color !== void 0)\n          material.uniforms.outlineColor.value.fromArray(outlineParameters.color);\n        if (outlineParameters.alpha !== void 0)\n          material.uniforms.outlineAlpha.value = outlineParameters.alpha;\n      }\n      if (originalMaterial.displacementMap) {\n        material.uniforms.displacementMap.value = originalMaterial.displacementMap;\n        material.uniforms.displacementScale.value = originalMaterial.displacementScale;\n        material.uniforms.displacementBias.value = originalMaterial.displacementBias;\n      }\n    }\n    function updateOutlineMaterial(material, originalMaterial) {\n      if (material.name === \"invisible\")\n        return;\n      const outlineParameters = originalMaterial.userData.outlineParameters;\n      material.fog = originalMaterial.fog;\n      material.toneMapped = originalMaterial.toneMapped;\n      material.premultipliedAlpha = originalMaterial.premultipliedAlpha;\n      material.displacementMap = originalMaterial.displacementMap;\n      if (outlineParameters !== void 0) {\n        if (originalMaterial.visible === false) {\n          material.visible = false;\n        } else {\n          material.visible = outlineParameters.visible !== void 0 ? outlineParameters.visible : true;\n        }\n        material.transparent = outlineParameters.alpha !== void 0 && outlineParameters.alpha < 1 ? true : originalMaterial.transparent;\n        if (outlineParameters.keepAlive !== void 0)\n          cache[originalMaterial.uuid].keepAlive = outlineParameters.keepAlive;\n      } else {\n        material.transparent = originalMaterial.transparent;\n        material.visible = originalMaterial.visible;\n      }\n      if (originalMaterial.wireframe === true || originalMaterial.depthTest === false)\n        material.visible = false;\n      if (originalMaterial.clippingPlanes) {\n        material.clipping = true;\n        material.clippingPlanes = originalMaterial.clippingPlanes;\n        material.clipIntersection = originalMaterial.clipIntersection;\n        material.clipShadows = originalMaterial.clipShadows;\n      }\n      material.version = originalMaterial.version;\n    }\n    function cleanupCache() {\n      let keys;\n      keys = Object.keys(originalMaterials);\n      for (let i = 0, il = keys.length; i < il; i++) {\n        originalMaterials[keys[i]] = void 0;\n      }\n      keys = Object.keys(originalOnBeforeRenders);\n      for (let i = 0, il = keys.length; i < il; i++) {\n        originalOnBeforeRenders[keys[i]] = void 0;\n      }\n      keys = Object.keys(cache);\n      for (let i = 0, il = keys.length; i < il; i++) {\n        const key = keys[i];\n        if (cache[key].used === false) {\n          cache[key].count++;\n          if (cache[key].keepAlive === false && cache[key].count > removeThresholdCount) {\n            delete cache[key];\n          }\n        } else {\n          cache[key].used = false;\n          cache[key].count = 0;\n        }\n      }\n    }\n    this.render = function(scene, camera) {\n      if (this.enabled === false) {\n        renderer.render(scene, camera);\n        return;\n      }\n      const currentAutoClear = renderer.autoClear;\n      renderer.autoClear = this.autoClear;\n      renderer.render(scene, camera);\n      renderer.autoClear = currentAutoClear;\n      this.renderOutline(scene, camera);\n    };\n    this.renderOutline = function(scene, camera) {\n      const currentAutoClear = renderer.autoClear;\n      const currentSceneAutoUpdate = scene.matrixWorldAutoUpdate;\n      const currentSceneBackground = scene.background;\n      const currentShadowMapEnabled = renderer.shadowMap.enabled;\n      scene.matrixWorldAutoUpdate = false;\n      scene.background = null;\n      renderer.autoClear = false;\n      renderer.shadowMap.enabled = false;\n      scene.traverse(setOutlineMaterial);\n      renderer.render(scene, camera);\n      scene.traverse(restoreOriginalMaterial);\n      cleanupCache();\n      scene.matrixWorldAutoUpdate = currentSceneAutoUpdate;\n      scene.background = currentSceneBackground;\n      renderer.autoClear = currentAutoClear;\n      renderer.shadowMap.enabled = currentShadowMapEnabled;\n    };\n    this.autoClear = renderer.autoClear;\n    this.domElement = renderer.domElement;\n    this.shadowMap = renderer.shadowMap;\n    this.clear = function(color, depth, stencil) {\n      renderer.clear(color, depth, stencil);\n    };\n    this.getPixelRatio = function() {\n      return renderer.getPixelRatio();\n    };\n    this.setPixelRatio = function(value) {\n      renderer.setPixelRatio(value);\n    };\n    this.getSize = function(target) {\n      return renderer.getSize(target);\n    };\n    this.setSize = function(width, height, updateStyle) {\n      renderer.setSize(width, height, updateStyle);\n    };\n    this.setViewport = function(x, y, width, height) {\n      renderer.setViewport(x, y, width, height);\n    };\n    this.setScissor = function(x, y, width, height) {\n      renderer.setScissor(x, y, width, height);\n    };\n    this.setScissorTest = function(boolean) {\n      renderer.setScissorTest(boolean);\n    };\n    this.setRenderTarget = function(renderTarget) {\n      renderer.setRenderTarget(renderTarget);\n    };\n  }\n}\nexport {\n  OutlineEffect\n};\n//# sourceMappingURL=OutlineEffect.js.map\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 14075, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 14081, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/effects/AnaglyphEffect.js"],"sourcesContent":["import { Matrix3, OrthographicCamera, Scene, StereoCamera, WebGLRenderTarget, ShaderMaterial, Mesh, PlaneGeometry, LinearFilter, NearestFilter, RGBAFormat } from \"three\";\nimport { version } from \"../_polyfill/constants.js\";\nclass AnaglyphEffect {\n  constructor(renderer, width = 512, height = 512) {\n    this.colorMatrixLeft = new Matrix3().fromArray([\n      0.4561,\n      -0.0400822,\n      -0.0152161,\n      0.500484,\n      -0.0378246,\n      -0.0205971,\n      0.176381,\n      -0.0157589,\n      -546856e-8\n    ]);\n    this.colorMatrixRight = new Matrix3().fromArray([\n      -0.0434706,\n      0.378476,\n      -0.0721527,\n      -0.0879388,\n      0.73364,\n      -0.112961,\n      -155529e-8,\n      -0.0184503,\n      1.2264\n    ]);\n    const _camera = new OrthographicCamera(-1, 1, 1, -1, 0, 1);\n    const _scene = new Scene();\n    const _stereo = new StereoCamera();\n    const _params = { minFilter: LinearFilter, magFilter: NearestFilter, format: RGBAFormat };\n    const _renderTargetL = new WebGLRenderTarget(width, height, _params);\n    const _renderTargetR = new WebGLRenderTarget(width, height, _params);\n    const _material = new ShaderMaterial({\n      uniforms: {\n        mapLeft: { value: _renderTargetL.texture },\n        mapRight: { value: _renderTargetR.texture },\n        colorMatrixLeft: { value: this.colorMatrixLeft },\n        colorMatrixRight: { value: this.colorMatrixRight }\n      },\n      vertexShader: [\n        \"varying vec2 vUv;\",\n        \"void main() {\",\n        \"\tvUv = vec2( uv.x, uv.y );\",\n        \"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n        \"}\"\n      ].join(\"\\n\"),\n      fragmentShader: [\n        \"uniform sampler2D mapLeft;\",\n        \"uniform sampler2D mapRight;\",\n        \"varying vec2 vUv;\",\n        \"uniform mat3 colorMatrixLeft;\",\n        \"uniform mat3 colorMatrixRight;\",\n        \"void main() {\",\n        \"\tvec2 uv = vUv;\",\n        \"\tvec4 colorL = texture2D( mapLeft, uv );\",\n        \"\tvec4 colorR = texture2D( mapRight, uv );\",\n        \"\tvec3 color = clamp(\",\n        \"\t\t\tcolorMatrixLeft * colorL.rgb +\",\n        \"\t\t\tcolorMatrixRight * colorR.rgb, 0., 1. );\",\n        \"\tgl_FragColor = vec4(\",\n        \"\t\t\tcolor.r, color.g, color.b,\",\n        \"\t\t\tmax( colorL.a, colorR.a ) );\",\n        \"\t#include <tonemapping_fragment>\",\n        `\t#include <${version >= 154 ? \"colorspace_fragment\" : \"encodings_fragment\"}>`,\n        \"}\"\n      ].join(\"\\n\")\n    });\n    const _mesh = new Mesh(new PlaneGeometry(2, 2), _material);\n    _scene.add(_mesh);\n    this.setSize = function(width2, height2) {\n      renderer.setSize(width2, height2);\n      const pixelRatio = renderer.getPixelRatio();\n      _renderTargetL.setSize(width2 * pixelRatio, height2 * pixelRatio);\n      _renderTargetR.setSize(width2 * pixelRatio, height2 * pixelRatio);\n    };\n    this.render = function(scene, camera) {\n      const currentRenderTarget = renderer.getRenderTarget();\n      if (scene.matrixWorldAutoUpdate === true)\n        scene.updateMatrixWorld();\n      if (camera.parent === null && camera.matrixWorldAutoUpdate === true)\n        camera.updateMatrixWorld();\n      _stereo.update(camera);\n      renderer.setRenderTarget(_renderTargetL);\n      renderer.clear();\n      renderer.render(scene, _stereo.cameraL);\n      renderer.setRenderTarget(_renderTargetR);\n      renderer.clear();\n      renderer.render(scene, _stereo.cameraR);\n      renderer.setRenderTarget(null);\n      renderer.render(_scene, _camera);\n      renderer.setRenderTarget(currentRenderTarget);\n    };\n    this.dispose = function() {\n      _renderTargetL.dispose();\n      _renderTargetR.dispose();\n      _mesh.geometry.dispose();\n      _mesh.material.dispose();\n    };\n  }\n}\nexport {\n  AnaglyphEffect\n};\n//# sourceMappingURL=AnaglyphEffect.js.map\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 14198, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 14204, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/effects/AsciiEffect.js"],"sourcesContent":["class AsciiEffect {\n  constructor(renderer, charSet = \" .:-=+*#%@\", options = {}) {\n    const fResolution = options[\"resolution\"] || 0.15;\n    const iScale = options[\"scale\"] || 1;\n    const bColor = options[\"color\"] || false;\n    const bAlpha = options[\"alpha\"] || false;\n    const bBlock = options[\"block\"] || false;\n    const bInvert = options[\"invert\"] || false;\n    const strResolution = options[\"strResolution\"] || \"low\";\n    let width, height;\n    const domElement = document.createElement(\"div\");\n    domElement.style.cursor = \"default\";\n    const oAscii = document.createElement(\"table\");\n    domElement.appendChild(oAscii);\n    let iWidth, iHeight;\n    let oImg;\n    this.setSize = function(w, h) {\n      width = w;\n      height = h;\n      renderer.setSize(w, h);\n      initAsciiSize();\n    };\n    this.render = function(scene, camera) {\n      renderer.render(scene, camera);\n      asciifyImage(oAscii);\n    };\n    this.domElement = domElement;\n    function initAsciiSize() {\n      iWidth = Math.floor(width * fResolution);\n      iHeight = Math.floor(height * fResolution);\n      oCanvas.width = iWidth;\n      oCanvas.height = iHeight;\n      oImg = renderer.domElement;\n      if (oImg.style.backgroundColor) {\n        oAscii.rows[0].cells[0].style.backgroundColor = oImg.style.backgroundColor;\n        oAscii.rows[0].cells[0].style.color = oImg.style.color;\n      }\n      oAscii.cellSpacing = 0;\n      oAscii.cellPadding = 0;\n      const oStyle = oAscii.style;\n      oStyle.whiteSpace = \"pre\";\n      oStyle.margin = \"0px\";\n      oStyle.padding = \"0px\";\n      oStyle.letterSpacing = fLetterSpacing + \"px\";\n      oStyle.fontFamily = strFont;\n      oStyle.fontSize = fFontSize + \"px\";\n      oStyle.lineHeight = fLineHeight + \"px\";\n      oStyle.textAlign = \"left\";\n      oStyle.textDecoration = \"none\";\n    }\n    const aDefaultCharList = \" .,:;i1tfLCG08@\".split(\"\");\n    const aDefaultColorCharList = \" CGO08@\".split(\"\");\n    const strFont = \"courier new, monospace\";\n    const oCanvasImg = renderer.domElement;\n    const oCanvas = document.createElement(\"canvas\");\n    if (!oCanvas.getContext) {\n      return;\n    }\n    const oCtx = oCanvas.getContext(\"2d\");\n    if (!oCtx.getImageData) {\n      return;\n    }\n    let aCharList = bColor ? aDefaultColorCharList : aDefaultCharList;\n    if (charSet)\n      aCharList = charSet;\n    const fFontSize = 2 / fResolution * iScale;\n    const fLineHeight = 2 / fResolution * iScale;\n    let fLetterSpacing = 0;\n    if (strResolution == \"low\") {\n      switch (iScale) {\n        case 1:\n          fLetterSpacing = -1;\n          break;\n        case 2:\n        case 3:\n          fLetterSpacing = -2.1;\n          break;\n        case 4:\n          fLetterSpacing = -3.1;\n          break;\n        case 5:\n          fLetterSpacing = -4.15;\n          break;\n      }\n    }\n    if (strResolution == \"medium\") {\n      switch (iScale) {\n        case 1:\n          fLetterSpacing = 0;\n          break;\n        case 2:\n          fLetterSpacing = -1;\n          break;\n        case 3:\n          fLetterSpacing = -1.04;\n          break;\n        case 4:\n        case 5:\n          fLetterSpacing = -2.1;\n          break;\n      }\n    }\n    if (strResolution == \"high\") {\n      switch (iScale) {\n        case 1:\n        case 2:\n          fLetterSpacing = 0;\n          break;\n        case 3:\n        case 4:\n        case 5:\n          fLetterSpacing = -1;\n          break;\n      }\n    }\n    function asciifyImage(oAscii2) {\n      oCtx.clearRect(0, 0, iWidth, iHeight);\n      oCtx.drawImage(oCanvasImg, 0, 0, iWidth, iHeight);\n      const oImgData = oCtx.getImageData(0, 0, iWidth, iHeight).data;\n      let strChars = \"\";\n      for (let y = 0; y < iHeight; y += 2) {\n        for (let x = 0; x < iWidth; x++) {\n          const iOffset = (y * iWidth + x) * 4;\n          const iRed = oImgData[iOffset];\n          const iGreen = oImgData[iOffset + 1];\n          const iBlue = oImgData[iOffset + 2];\n          const iAlpha = oImgData[iOffset + 3];\n          let iCharIdx;\n          let fBrightness;\n          fBrightness = (0.3 * iRed + 0.59 * iGreen + 0.11 * iBlue) / 255;\n          if (iAlpha == 0) {\n            fBrightness = 1;\n          }\n          iCharIdx = Math.floor((1 - fBrightness) * (aCharList.length - 1));\n          if (bInvert) {\n            iCharIdx = aCharList.length - iCharIdx - 1;\n          }\n          let strThisChar = aCharList[iCharIdx];\n          if (strThisChar === void 0 || strThisChar == \" \")\n            strThisChar = \"&nbsp;\";\n          if (bColor) {\n            strChars += \"<span style='color:rgb(\" + iRed + \",\" + iGreen + \",\" + iBlue + \");\" + (bBlock ? \"background-color:rgb(\" + iRed + \",\" + iGreen + \",\" + iBlue + \");\" : \"\") + (bAlpha ? \"opacity:\" + iAlpha / 255 + \";\" : \"\") + \"'>\" + strThisChar + \"</span>\";\n          } else {\n            strChars += strThisChar;\n          }\n        }\n        strChars += \"<br/>\";\n      }\n      oAscii2.innerHTML = `<tr><td style=\"display:block;width:${width}px;height:${height}px;overflow:hidden\">${strChars}</td></tr>`;\n    }\n  }\n}\nexport {\n  AsciiEffect\n};\n//# sourceMappingURL=AsciiEffect.js.map\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 14359, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 14365, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/curves/NURBSUtils.js"],"sourcesContent":["import { Vector4, Vector3 } from \"three\";\nfunction findSpan(p, u, U) {\n  const n = U.length - p - 1;\n  if (u >= U[n]) {\n    return n - 1;\n  }\n  if (u <= U[p]) {\n    return p;\n  }\n  let low = p;\n  let high = n;\n  let mid = Math.floor((low + high) / 2);\n  while (u < U[mid] || u >= U[mid + 1]) {\n    if (u < U[mid]) {\n      high = mid;\n    } else {\n      low = mid;\n    }\n    mid = Math.floor((low + high) / 2);\n  }\n  return mid;\n}\nfunction calcBasisFunctions(span, u, p, U) {\n  const N = [];\n  const left = [];\n  const right = [];\n  N[0] = 1;\n  for (let j = 1; j <= p; ++j) {\n    left[j] = u - U[span + 1 - j];\n    right[j] = U[span + j] - u;\n    let saved = 0;\n    for (let r = 0; r < j; ++r) {\n      const rv = right[r + 1];\n      const lv = left[j - r];\n      const temp = N[r] / (rv + lv);\n      N[r] = saved + rv * temp;\n      saved = lv * temp;\n    }\n    N[j] = saved;\n  }\n  return N;\n}\nfunction calcBSplinePoint(p, U, P, u) {\n  const span = findSpan(p, u, U);\n  const N = calcBasisFunctions(span, u, p, U);\n  const C = new Vector4(0, 0, 0, 0);\n  for (let j = 0; j <= p; ++j) {\n    const point = P[span - p + j];\n    const Nj = N[j];\n    const wNj = point.w * Nj;\n    C.x += point.x * wNj;\n    C.y += point.y * wNj;\n    C.z += point.z * wNj;\n    C.w += point.w * Nj;\n  }\n  return C;\n}\nfunction calcBasisFunctionDerivatives(span, u, p, n, U) {\n  const zeroArr = [];\n  for (let i = 0; i <= p; ++i)\n    zeroArr[i] = 0;\n  const ders = [];\n  for (let i = 0; i <= n; ++i)\n    ders[i] = zeroArr.slice(0);\n  const ndu = [];\n  for (let i = 0; i <= p; ++i)\n    ndu[i] = zeroArr.slice(0);\n  ndu[0][0] = 1;\n  const left = zeroArr.slice(0);\n  const right = zeroArr.slice(0);\n  for (let j = 1; j <= p; ++j) {\n    left[j] = u - U[span + 1 - j];\n    right[j] = U[span + j] - u;\n    let saved = 0;\n    for (let r2 = 0; r2 < j; ++r2) {\n      const rv = right[r2 + 1];\n      const lv = left[j - r2];\n      ndu[j][r2] = rv + lv;\n      const temp = ndu[r2][j - 1] / ndu[j][r2];\n      ndu[r2][j] = saved + rv * temp;\n      saved = lv * temp;\n    }\n    ndu[j][j] = saved;\n  }\n  for (let j = 0; j <= p; ++j) {\n    ders[0][j] = ndu[j][p];\n  }\n  for (let r2 = 0; r2 <= p; ++r2) {\n    let s1 = 0;\n    let s2 = 1;\n    const a = [];\n    for (let i = 0; i <= p; ++i) {\n      a[i] = zeroArr.slice(0);\n    }\n    a[0][0] = 1;\n    for (let k = 1; k <= n; ++k) {\n      let d = 0;\n      const rk = r2 - k;\n      const pk = p - k;\n      if (r2 >= k) {\n        a[s2][0] = a[s1][0] / ndu[pk + 1][rk];\n        d = a[s2][0] * ndu[rk][pk];\n      }\n      const j1 = rk >= -1 ? 1 : -rk;\n      const j2 = r2 - 1 <= pk ? k - 1 : p - r2;\n      for (let j3 = j1; j3 <= j2; ++j3) {\n        a[s2][j3] = (a[s1][j3] - a[s1][j3 - 1]) / ndu[pk + 1][rk + j3];\n        d += a[s2][j3] * ndu[rk + j3][pk];\n      }\n      if (r2 <= pk) {\n        a[s2][k] = -a[s1][k - 1] / ndu[pk + 1][r2];\n        d += a[s2][k] * ndu[r2][pk];\n      }\n      ders[k][r2] = d;\n      const j = s1;\n      s1 = s2;\n      s2 = j;\n    }\n  }\n  let r = p;\n  for (let k = 1; k <= n; ++k) {\n    for (let j = 0; j <= p; ++j) {\n      ders[k][j] *= r;\n    }\n    r *= p - k;\n  }\n  return ders;\n}\nfunction calcBSplineDerivatives(p, U, P, u, nd) {\n  const du = nd < p ? nd : p;\n  const CK = [];\n  const span = findSpan(p, u, U);\n  const nders = calcBasisFunctionDerivatives(span, u, p, du, U);\n  const Pw = [];\n  for (let i = 0; i < P.length; ++i) {\n    const point = P[i].clone();\n    const w = point.w;\n    point.x *= w;\n    point.y *= w;\n    point.z *= w;\n    Pw[i] = point;\n  }\n  for (let k = 0; k <= du; ++k) {\n    const point = Pw[span - p].clone().multiplyScalar(nders[k][0]);\n    for (let j = 1; j <= p; ++j) {\n      point.add(Pw[span - p + j].clone().multiplyScalar(nders[k][j]));\n    }\n    CK[k] = point;\n  }\n  for (let k = du + 1; k <= nd + 1; ++k) {\n    CK[k] = new Vector4(0, 0, 0);\n  }\n  return CK;\n}\nfunction calcKoverI(k, i) {\n  let nom = 1;\n  for (let j = 2; j <= k; ++j) {\n    nom *= j;\n  }\n  let denom = 1;\n  for (let j = 2; j <= i; ++j) {\n    denom *= j;\n  }\n  for (let j = 2; j <= k - i; ++j) {\n    denom *= j;\n  }\n  return nom / denom;\n}\nfunction calcRationalCurveDerivatives(Pders) {\n  const nd = Pders.length;\n  const Aders = [];\n  const wders = [];\n  for (let i = 0; i < nd; ++i) {\n    const point = Pders[i];\n    Aders[i] = new Vector3(point.x, point.y, point.z);\n    wders[i] = point.w;\n  }\n  const CK = [];\n  for (let k = 0; k < nd; ++k) {\n    const v = Aders[k].clone();\n    for (let i = 1; i <= k; ++i) {\n      v.sub(CK[k - i].clone().multiplyScalar(calcKoverI(k, i) * wders[i]));\n    }\n    CK[k] = v.divideScalar(wders[0]);\n  }\n  return CK;\n}\nfunction calcNURBSDerivatives(p, U, P, u, nd) {\n  const Pders = calcBSplineDerivatives(p, U, P, u, nd);\n  return calcRationalCurveDerivatives(Pders);\n}\nfunction calcSurfacePoint(p, q, U, V, P, u, v, target) {\n  const uspan = findSpan(p, u, U);\n  const vspan = findSpan(q, v, V);\n  const Nu = calcBasisFunctions(uspan, u, p, U);\n  const Nv = calcBasisFunctions(vspan, v, q, V);\n  const temp = [];\n  for (let l = 0; l <= q; ++l) {\n    temp[l] = new Vector4(0, 0, 0, 0);\n    for (let k = 0; k <= p; ++k) {\n      const point = P[uspan - p + k][vspan - q + l].clone();\n      const w = point.w;\n      point.x *= w;\n      point.y *= w;\n      point.z *= w;\n      temp[l].add(point.multiplyScalar(Nu[k]));\n    }\n  }\n  const Sw = new Vector4(0, 0, 0, 0);\n  for (let l = 0; l <= q; ++l) {\n    Sw.add(temp[l].multiplyScalar(Nv[l]));\n  }\n  Sw.divideScalar(Sw.w);\n  target.set(Sw.x, Sw.y, Sw.z);\n}\nexport {\n  calcBSplineDerivatives,\n  calcBSplinePoint,\n  calcBasisFunctionDerivatives,\n  calcBasisFunctions,\n  calcKoverI,\n  calcNURBSDerivatives,\n  calcRationalCurveDerivatives,\n  calcSurfacePoint,\n  findSpan\n};\n//# sourceMappingURL=NURBSUtils.js.map\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 14591, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 14597, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/curves/NURBSCurve.js"],"sourcesContent":["import { Curve, Vector4, Vector3 } from \"three\";\nimport { calcBSplinePoint, calcNURBSDerivatives } from \"./NURBSUtils.js\";\nclass NURBSCurve extends Curve {\n  constructor(degree, knots, controlPoints, startKnot, endKnot) {\n    super();\n    this.degree = degree;\n    this.knots = knots;\n    this.controlPoints = [];\n    this.startKnot = startKnot || 0;\n    this.endKnot = endKnot || this.knots.length - 1;\n    for (let i = 0; i < controlPoints.length; ++i) {\n      const point = controlPoints[i];\n      this.controlPoints[i] = new Vector4(point.x, point.y, point.z, point.w);\n    }\n  }\n  getPoint(t, optionalTarget) {\n    const point = optionalTarget || new Vector3();\n    const u = this.knots[this.startKnot] + t * (this.knots[this.endKnot] - this.knots[this.startKnot]);\n    const hpoint = calcBSplinePoint(this.degree, this.knots, this.controlPoints, u);\n    if (hpoint.w != 1) {\n      hpoint.divideScalar(hpoint.w);\n    }\n    return point.set(hpoint.x, hpoint.y, hpoint.z);\n  }\n  getTangent(t, optionalTarget) {\n    const tangent = optionalTarget || new Vector3();\n    const u = this.knots[0] + t * (this.knots[this.knots.length - 1] - this.knots[0]);\n    const ders = calcNURBSDerivatives(this.degree, this.knots, this.controlPoints, u, 1);\n    tangent.copy(ders[1]).normalize();\n    return tangent;\n  }\n}\nexport {\n  NURBSCurve\n};\n//# sourceMappingURL=NURBSCurve.js.map\n"],"names":[],"mappings":";;;AACA;AADA;;;AAEA,MAAM,mBAAmB,kJAAA,CAAA,QAAK;IAC5B,YAAY,MAAM,EAAE,KAAK,EAAE,aAAa,EAAE,SAAS,EAAE,OAAO,CAAE;QAC5D,KAAK;QACL,IAAI,CAAC,MAAM,GAAG;QACd,IAAI,CAAC,KAAK,GAAG;QACb,IAAI,CAAC,aAAa,GAAG,EAAE;QACvB,IAAI,CAAC,SAAS,GAAG,aAAa;QAC9B,IAAI,CAAC,OAAO,GAAG,WAAW,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG;QAC9C,IAAK,IAAI,IAAI,GAAG,IAAI,cAAc,MAAM,EAAE,EAAE,EAAG;YAC7C,MAAM,QAAQ,aAAa,CAAC,EAAE;YAC9B,IAAI,CAAC,aAAa,CAAC,EAAE,GAAG,IAAI,kJAAA,CAAA,UAAO,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC,EAAE,MAAM,CAAC,EAAE,MAAM,CAAC;QACxE;IACF;IACA,SAAS,CAAC,EAAE,cAAc,EAAE;QAC1B,MAAM,QAAQ,kBAAkB,IAAI,kJAAA,CAAA,UAAO;QAC3C,MAAM,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC;QACjG,MAAM,SAAS,CAAA,GAAA,0JAAA,CAAA,mBAAgB,AAAD,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,aAAa,EAAE;QAC7E,IAAI,OAAO,CAAC,IAAI,GAAG;YACjB,OAAO,YAAY,CAAC,OAAO,CAAC;QAC9B;QACA,OAAO,MAAM,GAAG,CAAC,OAAO,CAAC,EAAE,OAAO,CAAC,EAAE,OAAO,CAAC;IAC/C;IACA,WAAW,CAAC,EAAE,cAAc,EAAE;QAC5B,MAAM,UAAU,kBAAkB,IAAI,kJAAA,CAAA,UAAO;QAC7C,MAAM,IAAI,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QAChF,MAAM,OAAO,CAAA,GAAA,0JAAA,CAAA,uBAAoB,AAAD,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,aAAa,EAAE,GAAG;QAClF,QAAQ,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,SAAS;QAC/B,OAAO;IACT;AACF;;CAIA,sCAAsC","ignoreList":[0]}},
    {"offset": {"line": 14636, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 14642, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/curves/NURBSSurface.js"],"sourcesContent":["import { Vector4 } from \"three\";\nimport { calcSurfacePoint } from \"./NURBSUtils.js\";\nclass NURBSSurface {\n  constructor(degree1, degree2, knots1, knots2, controlPoints) {\n    this.degree1 = degree1;\n    this.degree2 = degree2;\n    this.knots1 = knots1;\n    this.knots2 = knots2;\n    this.controlPoints = [];\n    const len1 = knots1.length - degree1 - 1;\n    const len2 = knots2.length - degree2 - 1;\n    for (let i = 0; i < len1; ++i) {\n      this.controlPoints[i] = [];\n      for (let j = 0; j < len2; ++j) {\n        const point = controlPoints[i][j];\n        this.controlPoints[i][j] = new Vector4(point.x, point.y, point.z, point.w);\n      }\n    }\n  }\n  getPoint(t1, t2, target) {\n    const u = this.knots1[0] + t1 * (this.knots1[this.knots1.length - 1] - this.knots1[0]);\n    const v = this.knots2[0] + t2 * (this.knots2[this.knots2.length - 1] - this.knots2[0]);\n    calcSurfacePoint(this.degree1, this.degree2, this.knots1, this.knots2, this.controlPoints, u, v, target);\n  }\n}\nexport {\n  NURBSSurface\n};\n//# sourceMappingURL=NURBSSurface.js.map\n"],"names":[],"mappings":";;;AACA;AADA;;;AAEA,MAAM;IACJ,YAAY,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,aAAa,CAAE;QAC3D,IAAI,CAAC,OAAO,GAAG;QACf,IAAI,CAAC,OAAO,GAAG;QACf,IAAI,CAAC,MAAM,GAAG;QACd,IAAI,CAAC,MAAM,GAAG;QACd,IAAI,CAAC,aAAa,GAAG,EAAE;QACvB,MAAM,OAAO,OAAO,MAAM,GAAG,UAAU;QACvC,MAAM,OAAO,OAAO,MAAM,GAAG,UAAU;QACvC,IAAK,IAAI,IAAI,GAAG,IAAI,MAAM,EAAE,EAAG;YAC7B,IAAI,CAAC,aAAa,CAAC,EAAE,GAAG,EAAE;YAC1B,IAAK,IAAI,IAAI,GAAG,IAAI,MAAM,EAAE,EAAG;gBAC7B,MAAM,QAAQ,aAAa,CAAC,EAAE,CAAC,EAAE;gBACjC,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,EAAE,GAAG,IAAI,kJAAA,CAAA,UAAO,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC,EAAE,MAAM,CAAC,EAAE,MAAM,CAAC;YAC3E;QACF;IACF;IACA,SAAS,EAAE,EAAE,EAAE,EAAE,MAAM,EAAE;QACvB,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,EAAE,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE;QACrF,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,EAAE,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE;QACrF,CAAA,GAAA,0JAAA,CAAA,mBAAgB,AAAD,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,aAAa,EAAE,GAAG,GAAG;IACnG;AACF;;CAIA,wCAAwC","ignoreList":[0]}},
    {"offset": {"line": 14674, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 14680, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/curves/CurveExtras.js"],"sourcesContent":["import { Curve, Vector3 } from \"three\";\nclass GrannyKnot extends Curve {\n  getPoint(t, optionalTarget = new Vector3()) {\n    const point = optionalTarget;\n    t = 2 * Math.PI * t;\n    const x = -0.22 * Math.cos(t) - 1.28 * Math.sin(t) - 0.44 * Math.cos(3 * t) - 0.78 * Math.sin(3 * t);\n    const y = -0.1 * Math.cos(2 * t) - 0.27 * Math.sin(2 * t) + 0.38 * Math.cos(4 * t) + 0.46 * Math.sin(4 * t);\n    const z = 0.7 * Math.cos(3 * t) - 0.4 * Math.sin(3 * t);\n    return point.set(x, y, z).multiplyScalar(20);\n  }\n}\nclass HeartCurve extends Curve {\n  constructor(scale = 5) {\n    super();\n    this.scale = scale;\n  }\n  getPoint(t, optionalTarget = new Vector3()) {\n    const point = optionalTarget;\n    t *= 2 * Math.PI;\n    const x = 16 * Math.pow(Math.sin(t), 3);\n    const y = 13 * Math.cos(t) - 5 * Math.cos(2 * t) - 2 * Math.cos(3 * t) - Math.cos(4 * t);\n    const z = 0;\n    return point.set(x, y, z).multiplyScalar(this.scale);\n  }\n}\nclass VivianiCurve extends Curve {\n  constructor(scale = 70) {\n    super();\n    this.scale = scale;\n  }\n  getPoint(t, optionalTarget = new Vector3()) {\n    const point = optionalTarget;\n    t = t * 4 * Math.PI;\n    const a = this.scale / 2;\n    const x = a * (1 + Math.cos(t));\n    const y = a * Math.sin(t);\n    const z = 2 * a * Math.sin(t / 2);\n    return point.set(x, y, z);\n  }\n}\nclass KnotCurve extends Curve {\n  getPoint(t, optionalTarget = new Vector3()) {\n    const point = optionalTarget;\n    t *= 2 * Math.PI;\n    const R = 10;\n    const s = 50;\n    const x = s * Math.sin(t);\n    const y = Math.cos(t) * (R + s * Math.cos(t));\n    const z = Math.sin(t) * (R + s * Math.cos(t));\n    return point.set(x, y, z);\n  }\n}\nclass HelixCurve extends Curve {\n  getPoint(t, optionalTarget = new Vector3()) {\n    const point = optionalTarget;\n    const a = 30;\n    const b = 150;\n    const t2 = 2 * Math.PI * t * b / 30;\n    const x = Math.cos(t2) * a;\n    const y = Math.sin(t2) * a;\n    const z = b * t;\n    return point.set(x, y, z);\n  }\n}\nclass TrefoilKnot extends Curve {\n  constructor(scale = 10) {\n    super();\n    this.scale = scale;\n  }\n  getPoint(t, optionalTarget = new Vector3()) {\n    const point = optionalTarget;\n    t *= Math.PI * 2;\n    const x = (2 + Math.cos(3 * t)) * Math.cos(2 * t);\n    const y = (2 + Math.cos(3 * t)) * Math.sin(2 * t);\n    const z = Math.sin(3 * t);\n    return point.set(x, y, z).multiplyScalar(this.scale);\n  }\n}\nclass TorusKnot extends Curve {\n  constructor(scale = 10) {\n    super();\n    this.scale = scale;\n  }\n  getPoint(t, optionalTarget = new Vector3()) {\n    const point = optionalTarget;\n    const p = 3;\n    const q = 4;\n    t *= Math.PI * 2;\n    const x = (2 + Math.cos(q * t)) * Math.cos(p * t);\n    const y = (2 + Math.cos(q * t)) * Math.sin(p * t);\n    const z = Math.sin(q * t);\n    return point.set(x, y, z).multiplyScalar(this.scale);\n  }\n}\nclass CinquefoilKnot extends Curve {\n  constructor(scale = 10) {\n    super();\n    this.scale = scale;\n  }\n  getPoint(t, optionalTarget = new Vector3()) {\n    const point = optionalTarget;\n    const p = 2;\n    const q = 5;\n    t *= Math.PI * 2;\n    const x = (2 + Math.cos(q * t)) * Math.cos(p * t);\n    const y = (2 + Math.cos(q * t)) * Math.sin(p * t);\n    const z = Math.sin(q * t);\n    return point.set(x, y, z).multiplyScalar(this.scale);\n  }\n}\nclass TrefoilPolynomialKnot extends Curve {\n  constructor(scale = 10) {\n    super();\n    this.scale = scale;\n  }\n  getPoint(t, optionalTarget = new Vector3()) {\n    const point = optionalTarget;\n    t = t * 4 - 2;\n    const x = Math.pow(t, 3) - 3 * t;\n    const y = Math.pow(t, 4) - 4 * t * t;\n    const z = 1 / 5 * Math.pow(t, 5) - 2 * t;\n    return point.set(x, y, z).multiplyScalar(this.scale);\n  }\n}\nfunction scaleTo(x, y, t) {\n  const r = y - x;\n  return t * r + x;\n}\nclass FigureEightPolynomialKnot extends Curve {\n  constructor(scale = 1) {\n    super();\n    this.scale = scale;\n  }\n  getPoint(t, optionalTarget = new Vector3()) {\n    const point = optionalTarget;\n    t = scaleTo(-4, 4, t);\n    const x = 2 / 5 * t * (t * t - 7) * (t * t - 10);\n    const y = Math.pow(t, 4) - 13 * t * t;\n    const z = 1 / 10 * t * (t * t - 4) * (t * t - 9) * (t * t - 12);\n    return point.set(x, y, z).multiplyScalar(this.scale);\n  }\n}\nclass DecoratedTorusKnot4a extends Curve {\n  constructor(scale = 40) {\n    super();\n    this.scale = scale;\n  }\n  getPoint(t, optionalTarget = new Vector3()) {\n    const point = optionalTarget;\n    t *= Math.PI * 2;\n    const x = Math.cos(2 * t) * (1 + 0.6 * (Math.cos(5 * t) + 0.75 * Math.cos(10 * t)));\n    const y = Math.sin(2 * t) * (1 + 0.6 * (Math.cos(5 * t) + 0.75 * Math.cos(10 * t)));\n    const z = 0.35 * Math.sin(5 * t);\n    return point.set(x, y, z).multiplyScalar(this.scale);\n  }\n}\nclass DecoratedTorusKnot4b extends Curve {\n  constructor(scale = 40) {\n    super();\n    this.scale = scale;\n  }\n  getPoint(t, optionalTarget = new Vector3()) {\n    const point = optionalTarget;\n    const fi = t * Math.PI * 2;\n    const x = Math.cos(2 * fi) * (1 + 0.45 * Math.cos(3 * fi) + 0.4 * Math.cos(9 * fi));\n    const y = Math.sin(2 * fi) * (1 + 0.45 * Math.cos(3 * fi) + 0.4 * Math.cos(9 * fi));\n    const z = 0.2 * Math.sin(9 * fi);\n    return point.set(x, y, z).multiplyScalar(this.scale);\n  }\n}\nclass DecoratedTorusKnot5a extends Curve {\n  constructor(scale = 40) {\n    super();\n    this.scale = scale;\n  }\n  getPoint(t, optionalTarget = new Vector3()) {\n    const point = optionalTarget;\n    const fi = t * Math.PI * 2;\n    const x = Math.cos(3 * fi) * (1 + 0.3 * Math.cos(5 * fi) + 0.5 * Math.cos(10 * fi));\n    const y = Math.sin(3 * fi) * (1 + 0.3 * Math.cos(5 * fi) + 0.5 * Math.cos(10 * fi));\n    const z = 0.2 * Math.sin(20 * fi);\n    return point.set(x, y, z).multiplyScalar(this.scale);\n  }\n}\nclass DecoratedTorusKnot5c extends Curve {\n  constructor(scale = 40) {\n    super();\n    this.scale = scale;\n  }\n  getPoint(t, optionalTarget = new Vector3()) {\n    const point = optionalTarget;\n    const fi = t * Math.PI * 2;\n    const x = Math.cos(4 * fi) * (1 + 0.5 * (Math.cos(5 * fi) + 0.4 * Math.cos(20 * fi)));\n    const y = Math.sin(4 * fi) * (1 + 0.5 * (Math.cos(5 * fi) + 0.4 * Math.cos(20 * fi)));\n    const z = 0.35 * Math.sin(15 * fi);\n    return point.set(x, y, z).multiplyScalar(this.scale);\n  }\n}\nexport {\n  CinquefoilKnot,\n  DecoratedTorusKnot4a,\n  DecoratedTorusKnot4b,\n  DecoratedTorusKnot5a,\n  DecoratedTorusKnot5c,\n  FigureEightPolynomialKnot,\n  GrannyKnot,\n  HeartCurve,\n  HelixCurve,\n  KnotCurve,\n  TorusKnot,\n  TrefoilKnot,\n  TrefoilPolynomialKnot,\n  VivianiCurve\n};\n//# sourceMappingURL=CurveExtras.js.map\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 14897, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 14903, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/lines/LineSegmentsGeometry.js"],"sourcesContent":["import { InstancedBufferGeometry, Float32BufferAttribute, InstancedInterleavedBuffer, InterleavedBufferAttribute, WireframeGeometry, Box3, Sphere, Vector3 } from \"three\";\nconst _box = /* @__PURE__ */ new Box3();\nconst _vector = /* @__PURE__ */ new Vector3();\nclass LineSegmentsGeometry extends InstancedBufferGeometry {\n  constructor() {\n    super();\n    this.isLineSegmentsGeometry = true;\n    this.type = \"LineSegmentsGeometry\";\n    const positions = [-1, 2, 0, 1, 2, 0, -1, 1, 0, 1, 1, 0, -1, 0, 0, 1, 0, 0, -1, -1, 0, 1, -1, 0];\n    const uvs = [-1, 2, 1, 2, -1, 1, 1, 1, -1, -1, 1, -1, -1, -2, 1, -2];\n    const index = [0, 2, 1, 2, 3, 1, 2, 4, 3, 4, 5, 3, 4, 6, 5, 6, 7, 5];\n    this.setIndex(index);\n    this.setAttribute(\"position\", new Float32BufferAttribute(positions, 3));\n    this.setAttribute(\"uv\", new Float32BufferAttribute(uvs, 2));\n  }\n  applyMatrix4(matrix) {\n    const start = this.attributes.instanceStart;\n    const end = this.attributes.instanceEnd;\n    if (start !== void 0) {\n      start.applyMatrix4(matrix);\n      end.applyMatrix4(matrix);\n      start.needsUpdate = true;\n    }\n    if (this.boundingBox !== null) {\n      this.computeBoundingBox();\n    }\n    if (this.boundingSphere !== null) {\n      this.computeBoundingSphere();\n    }\n    return this;\n  }\n  setPositions(array) {\n    let lineSegments;\n    if (array instanceof Float32Array) {\n      lineSegments = array;\n    } else if (Array.isArray(array)) {\n      lineSegments = new Float32Array(array);\n    }\n    const instanceBuffer = new InstancedInterleavedBuffer(lineSegments, 6, 1);\n    this.setAttribute(\"instanceStart\", new InterleavedBufferAttribute(instanceBuffer, 3, 0));\n    this.setAttribute(\"instanceEnd\", new InterleavedBufferAttribute(instanceBuffer, 3, 3));\n    this.computeBoundingBox();\n    this.computeBoundingSphere();\n    return this;\n  }\n  setColors(array, itemSize = 3) {\n    let colors;\n    if (array instanceof Float32Array) {\n      colors = array;\n    } else if (Array.isArray(array)) {\n      colors = new Float32Array(array);\n    }\n    const instanceColorBuffer = new InstancedInterleavedBuffer(colors, itemSize * 2, 1);\n    this.setAttribute(\"instanceColorStart\", new InterleavedBufferAttribute(instanceColorBuffer, itemSize, 0));\n    this.setAttribute(\"instanceColorEnd\", new InterleavedBufferAttribute(instanceColorBuffer, itemSize, itemSize));\n    return this;\n  }\n  fromWireframeGeometry(geometry) {\n    this.setPositions(geometry.attributes.position.array);\n    return this;\n  }\n  fromEdgesGeometry(geometry) {\n    this.setPositions(geometry.attributes.position.array);\n    return this;\n  }\n  fromMesh(mesh) {\n    this.fromWireframeGeometry(new WireframeGeometry(mesh.geometry));\n    return this;\n  }\n  fromLineSegments(lineSegments) {\n    const geometry = lineSegments.geometry;\n    this.setPositions(geometry.attributes.position.array);\n    return this;\n  }\n  computeBoundingBox() {\n    if (this.boundingBox === null) {\n      this.boundingBox = new Box3();\n    }\n    const start = this.attributes.instanceStart;\n    const end = this.attributes.instanceEnd;\n    if (start !== void 0 && end !== void 0) {\n      this.boundingBox.setFromBufferAttribute(start);\n      _box.setFromBufferAttribute(end);\n      this.boundingBox.union(_box);\n    }\n  }\n  computeBoundingSphere() {\n    if (this.boundingSphere === null) {\n      this.boundingSphere = new Sphere();\n    }\n    if (this.boundingBox === null) {\n      this.computeBoundingBox();\n    }\n    const start = this.attributes.instanceStart;\n    const end = this.attributes.instanceEnd;\n    if (start !== void 0 && end !== void 0) {\n      const center = this.boundingSphere.center;\n      this.boundingBox.getCenter(center);\n      let maxRadiusSq = 0;\n      for (let i = 0, il = start.count; i < il; i++) {\n        _vector.fromBufferAttribute(start, i);\n        maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(_vector));\n        _vector.fromBufferAttribute(end, i);\n        maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(_vector));\n      }\n      this.boundingSphere.radius = Math.sqrt(maxRadiusSq);\n      if (isNaN(this.boundingSphere.radius)) {\n        console.error(\n          \"THREE.LineSegmentsGeometry.computeBoundingSphere(): Computed radius is NaN. The instanced position data is likely to have NaN values.\",\n          this\n        );\n      }\n    }\n  }\n  toJSON() {\n  }\n  applyMatrix(matrix) {\n    console.warn(\"THREE.LineSegmentsGeometry: applyMatrix() has been renamed to applyMatrix4().\");\n    return this.applyMatrix4(matrix);\n  }\n}\nexport {\n  LineSegmentsGeometry\n};\n//# sourceMappingURL=LineSegmentsGeometry.js.map\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,OAAO,aAAa,GAAG,IAAI,kJAAA,CAAA,OAAI;AACrC,MAAM,UAAU,aAAa,GAAG,IAAI,kJAAA,CAAA,UAAO;AAC3C,MAAM,6BAA6B,kJAAA,CAAA,0BAAuB;IACxD,aAAc;QACZ,KAAK;QACL,IAAI,CAAC,sBAAsB,GAAG;QAC9B,IAAI,CAAC,IAAI,GAAG;QACZ,MAAM,YAAY;YAAC,CAAC;YAAG;YAAG;YAAG;YAAG;YAAG;YAAG,CAAC;YAAG;YAAG;YAAG;YAAG;YAAG;YAAG,CAAC;YAAG;YAAG;YAAG;YAAG;YAAG;YAAG,CAAC;YAAG,CAAC;YAAG;YAAG;YAAG,CAAC;YAAG;SAAE;QAChG,MAAM,MAAM;YAAC,CAAC;YAAG;YAAG;YAAG;YAAG,CAAC;YAAG;YAAG;YAAG;YAAG,CAAC;YAAG,CAAC;YAAG;YAAG,CAAC;YAAG,CAAC;YAAG,CAAC;YAAG;YAAG,CAAC;SAAE;QACpE,MAAM,QAAQ;YAAC;YAAG;YAAG;YAAG;YAAG;YAAG;YAAG;YAAG;YAAG;YAAG;YAAG;YAAG;YAAG;YAAG;YAAG;YAAG;YAAG;YAAG;SAAE;QACpE,IAAI,CAAC,QAAQ,CAAC;QACd,IAAI,CAAC,YAAY,CAAC,YAAY,IAAI,kJAAA,CAAA,yBAAsB,CAAC,WAAW;QACpE,IAAI,CAAC,YAAY,CAAC,MAAM,IAAI,kJAAA,CAAA,yBAAsB,CAAC,KAAK;IAC1D;IACA,aAAa,MAAM,EAAE;QACnB,MAAM,QAAQ,IAAI,CAAC,UAAU,CAAC,aAAa;QAC3C,MAAM,MAAM,IAAI,CAAC,UAAU,CAAC,WAAW;QACvC,IAAI,UAAU,KAAK,GAAG;YACpB,MAAM,YAAY,CAAC;YACnB,IAAI,YAAY,CAAC;YACjB,MAAM,WAAW,GAAG;QACtB;QACA,IAAI,IAAI,CAAC,WAAW,KAAK,MAAM;YAC7B,IAAI,CAAC,kBAAkB;QACzB;QACA,IAAI,IAAI,CAAC,cAAc,KAAK,MAAM;YAChC,IAAI,CAAC,qBAAqB;QAC5B;QACA,OAAO,IAAI;IACb;IACA,aAAa,KAAK,EAAE;QAClB,IAAI;QACJ,IAAI,iBAAiB,cAAc;YACjC,eAAe;QACjB,OAAO,IAAI,MAAM,OAAO,CAAC,QAAQ;YAC/B,eAAe,IAAI,aAAa;QAClC;QACA,MAAM,iBAAiB,IAAI,kJAAA,CAAA,6BAA0B,CAAC,cAAc,GAAG;QACvE,IAAI,CAAC,YAAY,CAAC,iBAAiB,IAAI,kJAAA,CAAA,6BAA0B,CAAC,gBAAgB,GAAG;QACrF,IAAI,CAAC,YAAY,CAAC,eAAe,IAAI,kJAAA,CAAA,6BAA0B,CAAC,gBAAgB,GAAG;QACnF,IAAI,CAAC,kBAAkB;QACvB,IAAI,CAAC,qBAAqB;QAC1B,OAAO,IAAI;IACb;IACA,UAAU,KAAK,EAAE,WAAW,CAAC,EAAE;QAC7B,IAAI;QACJ,IAAI,iBAAiB,cAAc;YACjC,SAAS;QACX,OAAO,IAAI,MAAM,OAAO,CAAC,QAAQ;YAC/B,SAAS,IAAI,aAAa;QAC5B;QACA,MAAM,sBAAsB,IAAI,kJAAA,CAAA,6BAA0B,CAAC,QAAQ,WAAW,GAAG;QACjF,IAAI,CAAC,YAAY,CAAC,sBAAsB,IAAI,kJAAA,CAAA,6BAA0B,CAAC,qBAAqB,UAAU;QACtG,IAAI,CAAC,YAAY,CAAC,oBAAoB,IAAI,kJAAA,CAAA,6BAA0B,CAAC,qBAAqB,UAAU;QACpG,OAAO,IAAI;IACb;IACA,sBAAsB,QAAQ,EAAE;QAC9B,IAAI,CAAC,YAAY,CAAC,SAAS,UAAU,CAAC,QAAQ,CAAC,KAAK;QACpD,OAAO,IAAI;IACb;IACA,kBAAkB,QAAQ,EAAE;QAC1B,IAAI,CAAC,YAAY,CAAC,SAAS,UAAU,CAAC,QAAQ,CAAC,KAAK;QACpD,OAAO,IAAI;IACb;IACA,SAAS,IAAI,EAAE;QACb,IAAI,CAAC,qBAAqB,CAAC,IAAI,kJAAA,CAAA,oBAAiB,CAAC,KAAK,QAAQ;QAC9D,OAAO,IAAI;IACb;IACA,iBAAiB,YAAY,EAAE;QAC7B,MAAM,WAAW,aAAa,QAAQ;QACtC,IAAI,CAAC,YAAY,CAAC,SAAS,UAAU,CAAC,QAAQ,CAAC,KAAK;QACpD,OAAO,IAAI;IACb;IACA,qBAAqB;QACnB,IAAI,IAAI,CAAC,WAAW,KAAK,MAAM;YAC7B,IAAI,CAAC,WAAW,GAAG,IAAI,kJAAA,CAAA,OAAI;QAC7B;QACA,MAAM,QAAQ,IAAI,CAAC,UAAU,CAAC,aAAa;QAC3C,MAAM,MAAM,IAAI,CAAC,UAAU,CAAC,WAAW;QACvC,IAAI,UAAU,KAAK,KAAK,QAAQ,KAAK,GAAG;YACtC,IAAI,CAAC,WAAW,CAAC,sBAAsB,CAAC;YACxC,KAAK,sBAAsB,CAAC;YAC5B,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;QACzB;IACF;IACA,wBAAwB;QACtB,IAAI,IAAI,CAAC,cAAc,KAAK,MAAM;YAChC,IAAI,CAAC,cAAc,GAAG,IAAI,kJAAA,CAAA,SAAM;QAClC;QACA,IAAI,IAAI,CAAC,WAAW,KAAK,MAAM;YAC7B,IAAI,CAAC,kBAAkB;QACzB;QACA,MAAM,QAAQ,IAAI,CAAC,UAAU,CAAC,aAAa;QAC3C,MAAM,MAAM,IAAI,CAAC,UAAU,CAAC,WAAW;QACvC,IAAI,UAAU,KAAK,KAAK,QAAQ,KAAK,GAAG;YACtC,MAAM,SAAS,IAAI,CAAC,cAAc,CAAC,MAAM;YACzC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC;YAC3B,IAAI,cAAc;YAClB,IAAK,IAAI,IAAI,GAAG,KAAK,MAAM,KAAK,EAAE,IAAI,IAAI,IAAK;gBAC7C,QAAQ,mBAAmB,CAAC,OAAO;gBACnC,cAAc,KAAK,GAAG,CAAC,aAAa,OAAO,iBAAiB,CAAC;gBAC7D,QAAQ,mBAAmB,CAAC,KAAK;gBACjC,cAAc,KAAK,GAAG,CAAC,aAAa,OAAO,iBAAiB,CAAC;YAC/D;YACA,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,KAAK,IAAI,CAAC;YACvC,IAAI,MAAM,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG;gBACrC,QAAQ,KAAK,CACX,yIACA,IAAI;YAER;QACF;IACF;IACA,SAAS,CACT;IACA,YAAY,MAAM,EAAE;QAClB,QAAQ,IAAI,CAAC;QACb,OAAO,IAAI,CAAC,YAAY,CAAC;IAC3B;AACF;;CAIA,gDAAgD","ignoreList":[0]}},
    {"offset": {"line": 15087, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15093, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/lines/LineGeometry.js"],"sourcesContent":["import { LineSegmentsGeometry } from \"./LineSegmentsGeometry.js\";\nclass LineGeometry extends LineSegmentsGeometry {\n  constructor() {\n    super();\n    this.isLineGeometry = true;\n    this.type = \"LineGeometry\";\n  }\n  setPositions(array) {\n    const length = array.length - 3;\n    const points = new Float32Array(2 * length);\n    for (let i = 0; i < length; i += 3) {\n      points[2 * i] = array[i];\n      points[2 * i + 1] = array[i + 1];\n      points[2 * i + 2] = array[i + 2];\n      points[2 * i + 3] = array[i + 3];\n      points[2 * i + 4] = array[i + 4];\n      points[2 * i + 5] = array[i + 5];\n    }\n    super.setPositions(points);\n    return this;\n  }\n  setColors(array, itemSize = 3) {\n    const length = array.length - itemSize;\n    const colors = new Float32Array(2 * length);\n    if (itemSize === 3) {\n      for (let i = 0; i < length; i += itemSize) {\n        colors[2 * i] = array[i];\n        colors[2 * i + 1] = array[i + 1];\n        colors[2 * i + 2] = array[i + 2];\n        colors[2 * i + 3] = array[i + 3];\n        colors[2 * i + 4] = array[i + 4];\n        colors[2 * i + 5] = array[i + 5];\n      }\n    } else {\n      for (let i = 0; i < length; i += itemSize) {\n        colors[2 * i] = array[i];\n        colors[2 * i + 1] = array[i + 1];\n        colors[2 * i + 2] = array[i + 2];\n        colors[2 * i + 3] = array[i + 3];\n        colors[2 * i + 4] = array[i + 4];\n        colors[2 * i + 5] = array[i + 5];\n        colors[2 * i + 6] = array[i + 6];\n        colors[2 * i + 7] = array[i + 7];\n      }\n    }\n    super.setColors(colors, itemSize);\n    return this;\n  }\n  fromLine(line) {\n    const geometry = line.geometry;\n    this.setPositions(geometry.attributes.position.array);\n    return this;\n  }\n}\nexport {\n  LineGeometry\n};\n//# sourceMappingURL=LineGeometry.js.map\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,qBAAqB,mKAAA,CAAA,uBAAoB;IAC7C,aAAc;QACZ,KAAK;QACL,IAAI,CAAC,cAAc,GAAG;QACtB,IAAI,CAAC,IAAI,GAAG;IACd;IACA,aAAa,KAAK,EAAE;QAClB,MAAM,SAAS,MAAM,MAAM,GAAG;QAC9B,MAAM,SAAS,IAAI,aAAa,IAAI;QACpC,IAAK,IAAI,IAAI,GAAG,IAAI,QAAQ,KAAK,EAAG;YAClC,MAAM,CAAC,IAAI,EAAE,GAAG,KAAK,CAAC,EAAE;YACxB,MAAM,CAAC,IAAI,IAAI,EAAE,GAAG,KAAK,CAAC,IAAI,EAAE;YAChC,MAAM,CAAC,IAAI,IAAI,EAAE,GAAG,KAAK,CAAC,IAAI,EAAE;YAChC,MAAM,CAAC,IAAI,IAAI,EAAE,GAAG,KAAK,CAAC,IAAI,EAAE;YAChC,MAAM,CAAC,IAAI,IAAI,EAAE,GAAG,KAAK,CAAC,IAAI,EAAE;YAChC,MAAM,CAAC,IAAI,IAAI,EAAE,GAAG,KAAK,CAAC,IAAI,EAAE;QAClC;QACA,KAAK,CAAC,aAAa;QACnB,OAAO,IAAI;IACb;IACA,UAAU,KAAK,EAAE,WAAW,CAAC,EAAE;QAC7B,MAAM,SAAS,MAAM,MAAM,GAAG;QAC9B,MAAM,SAAS,IAAI,aAAa,IAAI;QACpC,IAAI,aAAa,GAAG;YAClB,IAAK,IAAI,IAAI,GAAG,IAAI,QAAQ,KAAK,SAAU;gBACzC,MAAM,CAAC,IAAI,EAAE,GAAG,KAAK,CAAC,EAAE;gBACxB,MAAM,CAAC,IAAI,IAAI,EAAE,GAAG,KAAK,CAAC,IAAI,EAAE;gBAChC,MAAM,CAAC,IAAI,IAAI,EAAE,GAAG,KAAK,CAAC,IAAI,EAAE;gBAChC,MAAM,CAAC,IAAI,IAAI,EAAE,GAAG,KAAK,CAAC,IAAI,EAAE;gBAChC,MAAM,CAAC,IAAI,IAAI,EAAE,GAAG,KAAK,CAAC,IAAI,EAAE;gBAChC,MAAM,CAAC,IAAI,IAAI,EAAE,GAAG,KAAK,CAAC,IAAI,EAAE;YAClC;QACF,OAAO;YACL,IAAK,IAAI,IAAI,GAAG,IAAI,QAAQ,KAAK,SAAU;gBACzC,MAAM,CAAC,IAAI,EAAE,GAAG,KAAK,CAAC,EAAE;gBACxB,MAAM,CAAC,IAAI,IAAI,EAAE,GAAG,KAAK,CAAC,IAAI,EAAE;gBAChC,MAAM,CAAC,IAAI,IAAI,EAAE,GAAG,KAAK,CAAC,IAAI,EAAE;gBAChC,MAAM,CAAC,IAAI,IAAI,EAAE,GAAG,KAAK,CAAC,IAAI,EAAE;gBAChC,MAAM,CAAC,IAAI,IAAI,EAAE,GAAG,KAAK,CAAC,IAAI,EAAE;gBAChC,MAAM,CAAC,IAAI,IAAI,EAAE,GAAG,KAAK,CAAC,IAAI,EAAE;gBAChC,MAAM,CAAC,IAAI,IAAI,EAAE,GAAG,KAAK,CAAC,IAAI,EAAE;gBAChC,MAAM,CAAC,IAAI,IAAI,EAAE,GAAG,KAAK,CAAC,IAAI,EAAE;YAClC;QACF;QACA,KAAK,CAAC,UAAU,QAAQ;QACxB,OAAO,IAAI;IACb;IACA,SAAS,IAAI,EAAE;QACb,MAAM,WAAW,KAAK,QAAQ;QAC9B,IAAI,CAAC,YAAY,CAAC,SAAS,UAAU,CAAC,QAAQ,CAAC,KAAK;QACpD,OAAO,IAAI;IACb;AACF;;CAIA,wCAAwC","ignoreList":[0]}},
    {"offset": {"line": 15153, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15159, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/lines/LineMaterial.js"],"sourcesContent":["import { ShaderMaterial, UniformsUtils, UniformsLib, Vector2 } from \"three\";\nimport { version } from \"../_polyfill/constants.js\";\nclass LineMaterial extends ShaderMaterial {\n  constructor(parameters) {\n    super({\n      type: \"LineMaterial\",\n      uniforms: UniformsUtils.clone(\n        UniformsUtils.merge([\n          UniformsLib.common,\n          UniformsLib.fog,\n          {\n            worldUnits: { value: 1 },\n            linewidth: { value: 1 },\n            resolution: { value: new Vector2(1, 1) },\n            dashOffset: { value: 0 },\n            dashScale: { value: 1 },\n            dashSize: { value: 1 },\n            gapSize: { value: 1 }\n            // todo FIX - maybe change to totalSize\n          }\n        ])\n      ),\n      vertexShader: (\n        /* glsl */\n        `\n\t\t\t\t#include <common>\n\t\t\t\t#include <fog_pars_vertex>\n\t\t\t\t#include <logdepthbuf_pars_vertex>\n\t\t\t\t#include <clipping_planes_pars_vertex>\n\n\t\t\t\tuniform float linewidth;\n\t\t\t\tuniform vec2 resolution;\n\n\t\t\t\tattribute vec3 instanceStart;\n\t\t\t\tattribute vec3 instanceEnd;\n\n\t\t\t\t#ifdef USE_COLOR\n\t\t\t\t\t#ifdef USE_LINE_COLOR_ALPHA\n\t\t\t\t\t\tvarying vec4 vLineColor;\n\t\t\t\t\t\tattribute vec4 instanceColorStart;\n\t\t\t\t\t\tattribute vec4 instanceColorEnd;\n\t\t\t\t\t#else\n\t\t\t\t\t\tvarying vec3 vLineColor;\n\t\t\t\t\t\tattribute vec3 instanceColorStart;\n\t\t\t\t\t\tattribute vec3 instanceColorEnd;\n\t\t\t\t\t#endif\n\t\t\t\t#endif\n\n\t\t\t\t#ifdef WORLD_UNITS\n\n\t\t\t\t\tvarying vec4 worldPos;\n\t\t\t\t\tvarying vec3 worldStart;\n\t\t\t\t\tvarying vec3 worldEnd;\n\n\t\t\t\t\t#ifdef USE_DASH\n\n\t\t\t\t\t\tvarying vec2 vUv;\n\n\t\t\t\t\t#endif\n\n\t\t\t\t#else\n\n\t\t\t\t\tvarying vec2 vUv;\n\n\t\t\t\t#endif\n\n\t\t\t\t#ifdef USE_DASH\n\n\t\t\t\t\tuniform float dashScale;\n\t\t\t\t\tattribute float instanceDistanceStart;\n\t\t\t\t\tattribute float instanceDistanceEnd;\n\t\t\t\t\tvarying float vLineDistance;\n\n\t\t\t\t#endif\n\n\t\t\t\tvoid trimSegment( const in vec4 start, inout vec4 end ) {\n\n\t\t\t\t\t// trim end segment so it terminates between the camera plane and the near plane\n\n\t\t\t\t\t// conservative estimate of the near plane\n\t\t\t\t\tfloat a = projectionMatrix[ 2 ][ 2 ]; // 3nd entry in 3th column\n\t\t\t\t\tfloat b = projectionMatrix[ 3 ][ 2 ]; // 3nd entry in 4th column\n\t\t\t\t\tfloat nearEstimate = - 0.5 * b / a;\n\n\t\t\t\t\tfloat alpha = ( nearEstimate - start.z ) / ( end.z - start.z );\n\n\t\t\t\t\tend.xyz = mix( start.xyz, end.xyz, alpha );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\t#ifdef USE_COLOR\n\n\t\t\t\t\t\tvLineColor = ( position.y < 0.5 ) ? instanceColorStart : instanceColorEnd;\n\n\t\t\t\t\t#endif\n\n\t\t\t\t\t#ifdef USE_DASH\n\n\t\t\t\t\t\tvLineDistance = ( position.y < 0.5 ) ? dashScale * instanceDistanceStart : dashScale * instanceDistanceEnd;\n\t\t\t\t\t\tvUv = uv;\n\n\t\t\t\t\t#endif\n\n\t\t\t\t\tfloat aspect = resolution.x / resolution.y;\n\n\t\t\t\t\t// camera space\n\t\t\t\t\tvec4 start = modelViewMatrix * vec4( instanceStart, 1.0 );\n\t\t\t\t\tvec4 end = modelViewMatrix * vec4( instanceEnd, 1.0 );\n\n\t\t\t\t\t#ifdef WORLD_UNITS\n\n\t\t\t\t\t\tworldStart = start.xyz;\n\t\t\t\t\t\tworldEnd = end.xyz;\n\n\t\t\t\t\t#else\n\n\t\t\t\t\t\tvUv = uv;\n\n\t\t\t\t\t#endif\n\n\t\t\t\t\t// special case for perspective projection, and segments that terminate either in, or behind, the camera plane\n\t\t\t\t\t// clearly the gpu firmware has a way of addressing this issue when projecting into ndc space\n\t\t\t\t\t// but we need to perform ndc-space calculations in the shader, so we must address this issue directly\n\t\t\t\t\t// perhaps there is a more elegant solution -- WestLangley\n\n\t\t\t\t\tbool perspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 ); // 4th entry in the 3rd column\n\n\t\t\t\t\tif ( perspective ) {\n\n\t\t\t\t\t\tif ( start.z < 0.0 && end.z >= 0.0 ) {\n\n\t\t\t\t\t\t\ttrimSegment( start, end );\n\n\t\t\t\t\t\t} else if ( end.z < 0.0 && start.z >= 0.0 ) {\n\n\t\t\t\t\t\t\ttrimSegment( end, start );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// clip space\n\t\t\t\t\tvec4 clipStart = projectionMatrix * start;\n\t\t\t\t\tvec4 clipEnd = projectionMatrix * end;\n\n\t\t\t\t\t// ndc space\n\t\t\t\t\tvec3 ndcStart = clipStart.xyz / clipStart.w;\n\t\t\t\t\tvec3 ndcEnd = clipEnd.xyz / clipEnd.w;\n\n\t\t\t\t\t// direction\n\t\t\t\t\tvec2 dir = ndcEnd.xy - ndcStart.xy;\n\n\t\t\t\t\t// account for clip-space aspect ratio\n\t\t\t\t\tdir.x *= aspect;\n\t\t\t\t\tdir = normalize( dir );\n\n\t\t\t\t\t#ifdef WORLD_UNITS\n\n\t\t\t\t\t\t// get the offset direction as perpendicular to the view vector\n\t\t\t\t\t\tvec3 worldDir = normalize( end.xyz - start.xyz );\n\t\t\t\t\t\tvec3 offset;\n\t\t\t\t\t\tif ( position.y < 0.5 ) {\n\n\t\t\t\t\t\t\toffset = normalize( cross( start.xyz, worldDir ) );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\toffset = normalize( cross( end.xyz, worldDir ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// sign flip\n\t\t\t\t\t\tif ( position.x < 0.0 ) offset *= - 1.0;\n\n\t\t\t\t\t\tfloat forwardOffset = dot( worldDir, vec3( 0.0, 0.0, 1.0 ) );\n\n\t\t\t\t\t\t// don't extend the line if we're rendering dashes because we\n\t\t\t\t\t\t// won't be rendering the endcaps\n\t\t\t\t\t\t#ifndef USE_DASH\n\n\t\t\t\t\t\t\t// extend the line bounds to encompass  endcaps\n\t\t\t\t\t\t\tstart.xyz += - worldDir * linewidth * 0.5;\n\t\t\t\t\t\t\tend.xyz += worldDir * linewidth * 0.5;\n\n\t\t\t\t\t\t\t// shift the position of the quad so it hugs the forward edge of the line\n\t\t\t\t\t\t\toffset.xy -= dir * forwardOffset;\n\t\t\t\t\t\t\toffset.z += 0.5;\n\n\t\t\t\t\t\t#endif\n\n\t\t\t\t\t\t// endcaps\n\t\t\t\t\t\tif ( position.y > 1.0 || position.y < 0.0 ) {\n\n\t\t\t\t\t\t\toffset.xy += dir * 2.0 * forwardOffset;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// adjust for linewidth\n\t\t\t\t\t\toffset *= linewidth * 0.5;\n\n\t\t\t\t\t\t// set the world position\n\t\t\t\t\t\tworldPos = ( position.y < 0.5 ) ? start : end;\n\t\t\t\t\t\tworldPos.xyz += offset;\n\n\t\t\t\t\t\t// project the worldpos\n\t\t\t\t\t\tvec4 clip = projectionMatrix * worldPos;\n\n\t\t\t\t\t\t// shift the depth of the projected points so the line\n\t\t\t\t\t\t// segments overlap neatly\n\t\t\t\t\t\tvec3 clipPose = ( position.y < 0.5 ) ? ndcStart : ndcEnd;\n\t\t\t\t\t\tclip.z = clipPose.z * clip.w;\n\n\t\t\t\t\t#else\n\n\t\t\t\t\t\tvec2 offset = vec2( dir.y, - dir.x );\n\t\t\t\t\t\t// undo aspect ratio adjustment\n\t\t\t\t\t\tdir.x /= aspect;\n\t\t\t\t\t\toffset.x /= aspect;\n\n\t\t\t\t\t\t// sign flip\n\t\t\t\t\t\tif ( position.x < 0.0 ) offset *= - 1.0;\n\n\t\t\t\t\t\t// endcaps\n\t\t\t\t\t\tif ( position.y < 0.0 ) {\n\n\t\t\t\t\t\t\toffset += - dir;\n\n\t\t\t\t\t\t} else if ( position.y > 1.0 ) {\n\n\t\t\t\t\t\t\toffset += dir;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// adjust for linewidth\n\t\t\t\t\t\toffset *= linewidth;\n\n\t\t\t\t\t\t// adjust for clip-space to screen-space conversion // maybe resolution should be based on viewport ...\n\t\t\t\t\t\toffset /= resolution.y;\n\n\t\t\t\t\t\t// select end\n\t\t\t\t\t\tvec4 clip = ( position.y < 0.5 ) ? clipStart : clipEnd;\n\n\t\t\t\t\t\t// back to clip space\n\t\t\t\t\t\toffset *= clip.w;\n\n\t\t\t\t\t\tclip.xy += offset;\n\n\t\t\t\t\t#endif\n\n\t\t\t\t\tgl_Position = clip;\n\n\t\t\t\t\tvec4 mvPosition = ( position.y < 0.5 ) ? start : end; // this is an approximation\n\n\t\t\t\t\t#include <logdepthbuf_vertex>\n\t\t\t\t\t#include <clipping_planes_vertex>\n\t\t\t\t\t#include <fog_vertex>\n\n\t\t\t\t}\n\t\t\t`\n      ),\n      fragmentShader: (\n        /* glsl */\n        `\n\t\t\t\tuniform vec3 diffuse;\n\t\t\t\tuniform float opacity;\n\t\t\t\tuniform float linewidth;\n\n\t\t\t\t#ifdef USE_DASH\n\n\t\t\t\t\tuniform float dashOffset;\n\t\t\t\t\tuniform float dashSize;\n\t\t\t\t\tuniform float gapSize;\n\n\t\t\t\t#endif\n\n\t\t\t\tvarying float vLineDistance;\n\n\t\t\t\t#ifdef WORLD_UNITS\n\n\t\t\t\t\tvarying vec4 worldPos;\n\t\t\t\t\tvarying vec3 worldStart;\n\t\t\t\t\tvarying vec3 worldEnd;\n\n\t\t\t\t\t#ifdef USE_DASH\n\n\t\t\t\t\t\tvarying vec2 vUv;\n\n\t\t\t\t\t#endif\n\n\t\t\t\t#else\n\n\t\t\t\t\tvarying vec2 vUv;\n\n\t\t\t\t#endif\n\n\t\t\t\t#include <common>\n\t\t\t\t#include <fog_pars_fragment>\n\t\t\t\t#include <logdepthbuf_pars_fragment>\n\t\t\t\t#include <clipping_planes_pars_fragment>\n\n\t\t\t\t#ifdef USE_COLOR\n\t\t\t\t\t#ifdef USE_LINE_COLOR_ALPHA\n\t\t\t\t\t\tvarying vec4 vLineColor;\n\t\t\t\t\t#else\n\t\t\t\t\t\tvarying vec3 vLineColor;\n\t\t\t\t\t#endif\n\t\t\t\t#endif\n\n\t\t\t\tvec2 closestLineToLine(vec3 p1, vec3 p2, vec3 p3, vec3 p4) {\n\n\t\t\t\t\tfloat mua;\n\t\t\t\t\tfloat mub;\n\n\t\t\t\t\tvec3 p13 = p1 - p3;\n\t\t\t\t\tvec3 p43 = p4 - p3;\n\n\t\t\t\t\tvec3 p21 = p2 - p1;\n\n\t\t\t\t\tfloat d1343 = dot( p13, p43 );\n\t\t\t\t\tfloat d4321 = dot( p43, p21 );\n\t\t\t\t\tfloat d1321 = dot( p13, p21 );\n\t\t\t\t\tfloat d4343 = dot( p43, p43 );\n\t\t\t\t\tfloat d2121 = dot( p21, p21 );\n\n\t\t\t\t\tfloat denom = d2121 * d4343 - d4321 * d4321;\n\n\t\t\t\t\tfloat numer = d1343 * d4321 - d1321 * d4343;\n\n\t\t\t\t\tmua = numer / denom;\n\t\t\t\t\tmua = clamp( mua, 0.0, 1.0 );\n\t\t\t\t\tmub = ( d1343 + d4321 * ( mua ) ) / d4343;\n\t\t\t\t\tmub = clamp( mub, 0.0, 1.0 );\n\n\t\t\t\t\treturn vec2( mua, mub );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\t#include <clipping_planes_fragment>\n\n\t\t\t\t\t#ifdef USE_DASH\n\n\t\t\t\t\t\tif ( vUv.y < - 1.0 || vUv.y > 1.0 ) discard; // discard endcaps\n\n\t\t\t\t\t\tif ( mod( vLineDistance + dashOffset, dashSize + gapSize ) > dashSize ) discard; // todo - FIX\n\n\t\t\t\t\t#endif\n\n\t\t\t\t\tfloat alpha = opacity;\n\n\t\t\t\t\t#ifdef WORLD_UNITS\n\n\t\t\t\t\t\t// Find the closest points on the view ray and the line segment\n\t\t\t\t\t\tvec3 rayEnd = normalize( worldPos.xyz ) * 1e5;\n\t\t\t\t\t\tvec3 lineDir = worldEnd - worldStart;\n\t\t\t\t\t\tvec2 params = closestLineToLine( worldStart, worldEnd, vec3( 0.0, 0.0, 0.0 ), rayEnd );\n\n\t\t\t\t\t\tvec3 p1 = worldStart + lineDir * params.x;\n\t\t\t\t\t\tvec3 p2 = rayEnd * params.y;\n\t\t\t\t\t\tvec3 delta = p1 - p2;\n\t\t\t\t\t\tfloat len = length( delta );\n\t\t\t\t\t\tfloat norm = len / linewidth;\n\n\t\t\t\t\t\t#ifndef USE_DASH\n\n\t\t\t\t\t\t\t#ifdef USE_ALPHA_TO_COVERAGE\n\n\t\t\t\t\t\t\t\tfloat dnorm = fwidth( norm );\n\t\t\t\t\t\t\t\talpha = 1.0 - smoothstep( 0.5 - dnorm, 0.5 + dnorm, norm );\n\n\t\t\t\t\t\t\t#else\n\n\t\t\t\t\t\t\t\tif ( norm > 0.5 ) {\n\n\t\t\t\t\t\t\t\t\tdiscard;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t#endif\n\n\t\t\t\t\t\t#endif\n\n\t\t\t\t\t#else\n\n\t\t\t\t\t\t#ifdef USE_ALPHA_TO_COVERAGE\n\n\t\t\t\t\t\t\t// artifacts appear on some hardware if a derivative is taken within a conditional\n\t\t\t\t\t\t\tfloat a = vUv.x;\n\t\t\t\t\t\t\tfloat b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;\n\t\t\t\t\t\t\tfloat len2 = a * a + b * b;\n\t\t\t\t\t\t\tfloat dlen = fwidth( len2 );\n\n\t\t\t\t\t\t\tif ( abs( vUv.y ) > 1.0 ) {\n\n\t\t\t\t\t\t\t\talpha = 1.0 - smoothstep( 1.0 - dlen, 1.0 + dlen, len2 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t#else\n\n\t\t\t\t\t\t\tif ( abs( vUv.y ) > 1.0 ) {\n\n\t\t\t\t\t\t\t\tfloat a = vUv.x;\n\t\t\t\t\t\t\t\tfloat b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;\n\t\t\t\t\t\t\t\tfloat len2 = a * a + b * b;\n\n\t\t\t\t\t\t\t\tif ( len2 > 1.0 ) discard;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t#endif\n\n\t\t\t\t\t#endif\n\n\t\t\t\t\tvec4 diffuseColor = vec4( diffuse, alpha );\n\t\t\t\t\t#ifdef USE_COLOR\n\t\t\t\t\t\t#ifdef USE_LINE_COLOR_ALPHA\n\t\t\t\t\t\t\tdiffuseColor *= vLineColor;\n\t\t\t\t\t\t#else\n\t\t\t\t\t\t\tdiffuseColor.rgb *= vLineColor;\n\t\t\t\t\t\t#endif\n\t\t\t\t\t#endif\n\n\t\t\t\t\t#include <logdepthbuf_fragment>\n\n\t\t\t\t\tgl_FragColor = diffuseColor;\n\n\t\t\t\t\t#include <tonemapping_fragment>\n\t\t\t\t\t#include <${version >= 154 ? \"colorspace_fragment\" : \"encodings_fragment\"}>\n\t\t\t\t\t#include <fog_fragment>\n\t\t\t\t\t#include <premultiplied_alpha_fragment>\n\n\t\t\t\t}\n\t\t\t`\n      ),\n      clipping: true\n      // required for clipping support\n    });\n    this.isLineMaterial = true;\n    this.onBeforeCompile = function() {\n      if (this.transparent) {\n        this.defines.USE_LINE_COLOR_ALPHA = \"1\";\n      } else {\n        delete this.defines.USE_LINE_COLOR_ALPHA;\n      }\n    };\n    Object.defineProperties(this, {\n      color: {\n        enumerable: true,\n        get: function() {\n          return this.uniforms.diffuse.value;\n        },\n        set: function(value) {\n          this.uniforms.diffuse.value = value;\n        }\n      },\n      worldUnits: {\n        enumerable: true,\n        get: function() {\n          return \"WORLD_UNITS\" in this.defines;\n        },\n        set: function(value) {\n          if (value === true) {\n            this.defines.WORLD_UNITS = \"\";\n          } else {\n            delete this.defines.WORLD_UNITS;\n          }\n        }\n      },\n      linewidth: {\n        enumerable: true,\n        get: function() {\n          return this.uniforms.linewidth.value;\n        },\n        set: function(value) {\n          this.uniforms.linewidth.value = value;\n        }\n      },\n      dashed: {\n        enumerable: true,\n        get: function() {\n          return Boolean(\"USE_DASH\" in this.defines);\n        },\n        set(value) {\n          if (Boolean(value) !== Boolean(\"USE_DASH\" in this.defines)) {\n            this.needsUpdate = true;\n          }\n          if (value === true) {\n            this.defines.USE_DASH = \"\";\n          } else {\n            delete this.defines.USE_DASH;\n          }\n        }\n      },\n      dashScale: {\n        enumerable: true,\n        get: function() {\n          return this.uniforms.dashScale.value;\n        },\n        set: function(value) {\n          this.uniforms.dashScale.value = value;\n        }\n      },\n      dashSize: {\n        enumerable: true,\n        get: function() {\n          return this.uniforms.dashSize.value;\n        },\n        set: function(value) {\n          this.uniforms.dashSize.value = value;\n        }\n      },\n      dashOffset: {\n        enumerable: true,\n        get: function() {\n          return this.uniforms.dashOffset.value;\n        },\n        set: function(value) {\n          this.uniforms.dashOffset.value = value;\n        }\n      },\n      gapSize: {\n        enumerable: true,\n        get: function() {\n          return this.uniforms.gapSize.value;\n        },\n        set: function(value) {\n          this.uniforms.gapSize.value = value;\n        }\n      },\n      opacity: {\n        enumerable: true,\n        get: function() {\n          return this.uniforms.opacity.value;\n        },\n        set: function(value) {\n          this.uniforms.opacity.value = value;\n        }\n      },\n      resolution: {\n        enumerable: true,\n        get: function() {\n          return this.uniforms.resolution.value;\n        },\n        set: function(value) {\n          this.uniforms.resolution.value.copy(value);\n        }\n      },\n      alphaToCoverage: {\n        enumerable: true,\n        get: function() {\n          return Boolean(\"USE_ALPHA_TO_COVERAGE\" in this.defines);\n        },\n        set: function(value) {\n          if (Boolean(value) !== Boolean(\"USE_ALPHA_TO_COVERAGE\" in this.defines)) {\n            this.needsUpdate = true;\n          }\n          if (value === true) {\n            this.defines.USE_ALPHA_TO_COVERAGE = \"\";\n            this.extensions.derivatives = true;\n          } else {\n            delete this.defines.USE_ALPHA_TO_COVERAGE;\n            this.extensions.derivatives = false;\n          }\n        }\n      }\n    });\n    this.setValues(parameters);\n  }\n}\nexport {\n  LineMaterial\n};\n//# sourceMappingURL=LineMaterial.js.map\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 15744, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15750, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/lines/LineSegments2.js"],"sourcesContent":["import { Mesh, InstancedInterleavedBuffer, InterleavedBufferAttribute, Vector4, Vector3, Box3, Sphere, MathUtils, Matrix4, Line3 } from \"three\";\nimport { LineSegmentsGeometry } from \"./LineSegmentsGeometry.js\";\nimport { LineMaterial } from \"./LineMaterial.js\";\nimport { UV1 } from \"../_polyfill/uv1.js\";\nconst _viewport = /* @__PURE__ */ new Vector4();\nconst _start = /* @__PURE__ */ new Vector3();\nconst _end = /* @__PURE__ */ new Vector3();\nconst _start4 = /* @__PURE__ */ new Vector4();\nconst _end4 = /* @__PURE__ */ new Vector4();\nconst _ssOrigin = /* @__PURE__ */ new Vector4();\nconst _ssOrigin3 = /* @__PURE__ */ new Vector3();\nconst _mvMatrix = /* @__PURE__ */ new Matrix4();\nconst _line = /* @__PURE__ */ new Line3();\nconst _closestPoint = /* @__PURE__ */ new Vector3();\nconst _box = /* @__PURE__ */ new Box3();\nconst _sphere = /* @__PURE__ */ new Sphere();\nconst _clipToWorldVector = /* @__PURE__ */ new Vector4();\nlet _ray, _lineWidth;\nfunction getWorldSpaceHalfWidth(camera, distance, resolution) {\n  _clipToWorldVector.set(0, 0, -distance, 1).applyMatrix4(camera.projectionMatrix);\n  _clipToWorldVector.multiplyScalar(1 / _clipToWorldVector.w);\n  _clipToWorldVector.x = _lineWidth / resolution.width;\n  _clipToWorldVector.y = _lineWidth / resolution.height;\n  _clipToWorldVector.applyMatrix4(camera.projectionMatrixInverse);\n  _clipToWorldVector.multiplyScalar(1 / _clipToWorldVector.w);\n  return Math.abs(Math.max(_clipToWorldVector.x, _clipToWorldVector.y));\n}\nfunction raycastWorldUnits(lineSegments, intersects) {\n  const matrixWorld = lineSegments.matrixWorld;\n  const geometry = lineSegments.geometry;\n  const instanceStart = geometry.attributes.instanceStart;\n  const instanceEnd = geometry.attributes.instanceEnd;\n  const segmentCount = Math.min(geometry.instanceCount, instanceStart.count);\n  for (let i = 0, l = segmentCount; i < l; i++) {\n    _line.start.fromBufferAttribute(instanceStart, i);\n    _line.end.fromBufferAttribute(instanceEnd, i);\n    _line.applyMatrix4(matrixWorld);\n    const pointOnLine = new Vector3();\n    const point = new Vector3();\n    _ray.distanceSqToSegment(_line.start, _line.end, point, pointOnLine);\n    const isInside = point.distanceTo(pointOnLine) < _lineWidth * 0.5;\n    if (isInside) {\n      intersects.push({\n        point,\n        pointOnLine,\n        distance: _ray.origin.distanceTo(point),\n        object: lineSegments,\n        face: null,\n        faceIndex: i,\n        uv: null,\n        [UV1]: null\n      });\n    }\n  }\n}\nfunction raycastScreenSpace(lineSegments, camera, intersects) {\n  const projectionMatrix = camera.projectionMatrix;\n  const material = lineSegments.material;\n  const resolution = material.resolution;\n  const matrixWorld = lineSegments.matrixWorld;\n  const geometry = lineSegments.geometry;\n  const instanceStart = geometry.attributes.instanceStart;\n  const instanceEnd = geometry.attributes.instanceEnd;\n  const segmentCount = Math.min(geometry.instanceCount, instanceStart.count);\n  const near = -camera.near;\n  _ray.at(1, _ssOrigin);\n  _ssOrigin.w = 1;\n  _ssOrigin.applyMatrix4(camera.matrixWorldInverse);\n  _ssOrigin.applyMatrix4(projectionMatrix);\n  _ssOrigin.multiplyScalar(1 / _ssOrigin.w);\n  _ssOrigin.x *= resolution.x / 2;\n  _ssOrigin.y *= resolution.y / 2;\n  _ssOrigin.z = 0;\n  _ssOrigin3.copy(_ssOrigin);\n  _mvMatrix.multiplyMatrices(camera.matrixWorldInverse, matrixWorld);\n  for (let i = 0, l = segmentCount; i < l; i++) {\n    _start4.fromBufferAttribute(instanceStart, i);\n    _end4.fromBufferAttribute(instanceEnd, i);\n    _start4.w = 1;\n    _end4.w = 1;\n    _start4.applyMatrix4(_mvMatrix);\n    _end4.applyMatrix4(_mvMatrix);\n    const isBehindCameraNear = _start4.z > near && _end4.z > near;\n    if (isBehindCameraNear) {\n      continue;\n    }\n    if (_start4.z > near) {\n      const deltaDist = _start4.z - _end4.z;\n      const t = (_start4.z - near) / deltaDist;\n      _start4.lerp(_end4, t);\n    } else if (_end4.z > near) {\n      const deltaDist = _end4.z - _start4.z;\n      const t = (_end4.z - near) / deltaDist;\n      _end4.lerp(_start4, t);\n    }\n    _start4.applyMatrix4(projectionMatrix);\n    _end4.applyMatrix4(projectionMatrix);\n    _start4.multiplyScalar(1 / _start4.w);\n    _end4.multiplyScalar(1 / _end4.w);\n    _start4.x *= resolution.x / 2;\n    _start4.y *= resolution.y / 2;\n    _end4.x *= resolution.x / 2;\n    _end4.y *= resolution.y / 2;\n    _line.start.copy(_start4);\n    _line.start.z = 0;\n    _line.end.copy(_end4);\n    _line.end.z = 0;\n    const param = _line.closestPointToPointParameter(_ssOrigin3, true);\n    _line.at(param, _closestPoint);\n    const zPos = MathUtils.lerp(_start4.z, _end4.z, param);\n    const isInClipSpace = zPos >= -1 && zPos <= 1;\n    const isInside = _ssOrigin3.distanceTo(_closestPoint) < _lineWidth * 0.5;\n    if (isInClipSpace && isInside) {\n      _line.start.fromBufferAttribute(instanceStart, i);\n      _line.end.fromBufferAttribute(instanceEnd, i);\n      _line.start.applyMatrix4(matrixWorld);\n      _line.end.applyMatrix4(matrixWorld);\n      const pointOnLine = new Vector3();\n      const point = new Vector3();\n      _ray.distanceSqToSegment(_line.start, _line.end, point, pointOnLine);\n      intersects.push({\n        point,\n        pointOnLine,\n        distance: _ray.origin.distanceTo(point),\n        object: lineSegments,\n        face: null,\n        faceIndex: i,\n        uv: null,\n        [UV1]: null\n      });\n    }\n  }\n}\nclass LineSegments2 extends Mesh {\n  constructor(geometry = new LineSegmentsGeometry(), material = new LineMaterial({ color: Math.random() * 16777215 })) {\n    super(geometry, material);\n    this.isLineSegments2 = true;\n    this.type = \"LineSegments2\";\n  }\n  // for backwards-compatibility, but could be a method of LineSegmentsGeometry...\n  computeLineDistances() {\n    const geometry = this.geometry;\n    const instanceStart = geometry.attributes.instanceStart;\n    const instanceEnd = geometry.attributes.instanceEnd;\n    const lineDistances = new Float32Array(2 * instanceStart.count);\n    for (let i = 0, j = 0, l = instanceStart.count; i < l; i++, j += 2) {\n      _start.fromBufferAttribute(instanceStart, i);\n      _end.fromBufferAttribute(instanceEnd, i);\n      lineDistances[j] = j === 0 ? 0 : lineDistances[j - 1];\n      lineDistances[j + 1] = lineDistances[j] + _start.distanceTo(_end);\n    }\n    const instanceDistanceBuffer = new InstancedInterleavedBuffer(lineDistances, 2, 1);\n    geometry.setAttribute(\"instanceDistanceStart\", new InterleavedBufferAttribute(instanceDistanceBuffer, 1, 0));\n    geometry.setAttribute(\"instanceDistanceEnd\", new InterleavedBufferAttribute(instanceDistanceBuffer, 1, 1));\n    return this;\n  }\n  raycast(raycaster, intersects) {\n    const worldUnits = this.material.worldUnits;\n    const camera = raycaster.camera;\n    if (camera === null && !worldUnits) {\n      console.error(\n        'LineSegments2: \"Raycaster.camera\" needs to be set in order to raycast against LineSegments2 while worldUnits is set to false.'\n      );\n    }\n    const threshold = raycaster.params.Line2 !== void 0 ? raycaster.params.Line2.threshold || 0 : 0;\n    _ray = raycaster.ray;\n    const matrixWorld = this.matrixWorld;\n    const geometry = this.geometry;\n    const material = this.material;\n    _lineWidth = material.linewidth + threshold;\n    if (geometry.boundingSphere === null) {\n      geometry.computeBoundingSphere();\n    }\n    _sphere.copy(geometry.boundingSphere).applyMatrix4(matrixWorld);\n    let sphereMargin;\n    if (worldUnits) {\n      sphereMargin = _lineWidth * 0.5;\n    } else {\n      const distanceToSphere = Math.max(camera.near, _sphere.distanceToPoint(_ray.origin));\n      sphereMargin = getWorldSpaceHalfWidth(camera, distanceToSphere, material.resolution);\n    }\n    _sphere.radius += sphereMargin;\n    if (_ray.intersectsSphere(_sphere) === false) {\n      return;\n    }\n    if (geometry.boundingBox === null) {\n      geometry.computeBoundingBox();\n    }\n    _box.copy(geometry.boundingBox).applyMatrix4(matrixWorld);\n    let boxMargin;\n    if (worldUnits) {\n      boxMargin = _lineWidth * 0.5;\n    } else {\n      const distanceToBox = Math.max(camera.near, _box.distanceToPoint(_ray.origin));\n      boxMargin = getWorldSpaceHalfWidth(camera, distanceToBox, material.resolution);\n    }\n    _box.expandByScalar(boxMargin);\n    if (_ray.intersectsBox(_box) === false) {\n      return;\n    }\n    if (worldUnits) {\n      raycastWorldUnits(this, intersects);\n    } else {\n      raycastScreenSpace(this, camera, intersects);\n    }\n  }\n  onBeforeRender(renderer) {\n    const uniforms = this.material.uniforms;\n    if (uniforms && uniforms.resolution) {\n      renderer.getViewport(_viewport);\n      this.material.uniforms.resolution.value.set(_viewport.z, _viewport.w);\n    }\n  }\n}\nexport {\n  LineSegments2\n};\n//# sourceMappingURL=LineSegments2.js.map\n"],"names":[],"mappings":";;;AACA;AACA;;;;;;AAFA;;;;;AAIA,MAAM,YAAY,aAAa,GAAG,IAAI,kJAAA,CAAA,UAAO;AAC7C,MAAM,SAAS,aAAa,GAAG,IAAI,kJAAA,CAAA,UAAO;AAC1C,MAAM,OAAO,aAAa,GAAG,IAAI,kJAAA,CAAA,UAAO;AACxC,MAAM,UAAU,aAAa,GAAG,IAAI,kJAAA,CAAA,UAAO;AAC3C,MAAM,QAAQ,aAAa,GAAG,IAAI,kJAAA,CAAA,UAAO;AACzC,MAAM,YAAY,aAAa,GAAG,IAAI,kJAAA,CAAA,UAAO;AAC7C,MAAM,aAAa,aAAa,GAAG,IAAI,kJAAA,CAAA,UAAO;AAC9C,MAAM,YAAY,aAAa,GAAG,IAAI,kJAAA,CAAA,UAAO;AAC7C,MAAM,QAAQ,aAAa,GAAG,IAAI,kJAAA,CAAA,QAAK;AACvC,MAAM,gBAAgB,aAAa,GAAG,IAAI,kJAAA,CAAA,UAAO;AACjD,MAAM,OAAO,aAAa,GAAG,IAAI,kJAAA,CAAA,OAAI;AACrC,MAAM,UAAU,aAAa,GAAG,IAAI,kJAAA,CAAA,SAAM;AAC1C,MAAM,qBAAqB,aAAa,GAAG,IAAI,kJAAA,CAAA,UAAO;AACtD,IAAI,MAAM;AACV,SAAS,uBAAuB,MAAM,EAAE,QAAQ,EAAE,UAAU;IAC1D,mBAAmB,GAAG,CAAC,GAAG,GAAG,CAAC,UAAU,GAAG,YAAY,CAAC,OAAO,gBAAgB;IAC/E,mBAAmB,cAAc,CAAC,IAAI,mBAAmB,CAAC;IAC1D,mBAAmB,CAAC,GAAG,aAAa,WAAW,KAAK;IACpD,mBAAmB,CAAC,GAAG,aAAa,WAAW,MAAM;IACrD,mBAAmB,YAAY,CAAC,OAAO,uBAAuB;IAC9D,mBAAmB,cAAc,CAAC,IAAI,mBAAmB,CAAC;IAC1D,OAAO,KAAK,GAAG,CAAC,KAAK,GAAG,CAAC,mBAAmB,CAAC,EAAE,mBAAmB,CAAC;AACrE;AACA,SAAS,kBAAkB,YAAY,EAAE,UAAU;IACjD,MAAM,cAAc,aAAa,WAAW;IAC5C,MAAM,WAAW,aAAa,QAAQ;IACtC,MAAM,gBAAgB,SAAS,UAAU,CAAC,aAAa;IACvD,MAAM,cAAc,SAAS,UAAU,CAAC,WAAW;IACnD,MAAM,eAAe,KAAK,GAAG,CAAC,SAAS,aAAa,EAAE,cAAc,KAAK;IACzE,IAAK,IAAI,IAAI,GAAG,IAAI,cAAc,IAAI,GAAG,IAAK;QAC5C,MAAM,KAAK,CAAC,mBAAmB,CAAC,eAAe;QAC/C,MAAM,GAAG,CAAC,mBAAmB,CAAC,aAAa;QAC3C,MAAM,YAAY,CAAC;QACnB,MAAM,cAAc,IAAI,kJAAA,CAAA,UAAO;QAC/B,MAAM,QAAQ,IAAI,kJAAA,CAAA,UAAO;QACzB,KAAK,mBAAmB,CAAC,MAAM,KAAK,EAAE,MAAM,GAAG,EAAE,OAAO;QACxD,MAAM,WAAW,MAAM,UAAU,CAAC,eAAe,aAAa;QAC9D,IAAI,UAAU;YACZ,WAAW,IAAI,CAAC;gBACd;gBACA;gBACA,UAAU,KAAK,MAAM,CAAC,UAAU,CAAC;gBACjC,QAAQ;gBACR,MAAM;gBACN,WAAW;gBACX,IAAI;gBACJ,CAAC,IAAI,EAAE;YACT;QACF;IACF;AACF;AACA,SAAS,mBAAmB,YAAY,EAAE,MAAM,EAAE,UAAU;IAC1D,MAAM,mBAAmB,OAAO,gBAAgB;IAChD,MAAM,WAAW,aAAa,QAAQ;IACtC,MAAM,aAAa,SAAS,UAAU;IACtC,MAAM,cAAc,aAAa,WAAW;IAC5C,MAAM,WAAW,aAAa,QAAQ;IACtC,MAAM,gBAAgB,SAAS,UAAU,CAAC,aAAa;IACvD,MAAM,cAAc,SAAS,UAAU,CAAC,WAAW;IACnD,MAAM,eAAe,KAAK,GAAG,CAAC,SAAS,aAAa,EAAE,cAAc,KAAK;IACzE,MAAM,OAAO,CAAC,OAAO,IAAI;IACzB,KAAK,EAAE,CAAC,GAAG;IACX,UAAU,CAAC,GAAG;IACd,UAAU,YAAY,CAAC,OAAO,kBAAkB;IAChD,UAAU,YAAY,CAAC;IACvB,UAAU,cAAc,CAAC,IAAI,UAAU,CAAC;IACxC,UAAU,CAAC,IAAI,WAAW,CAAC,GAAG;IAC9B,UAAU,CAAC,IAAI,WAAW,CAAC,GAAG;IAC9B,UAAU,CAAC,GAAG;IACd,WAAW,IAAI,CAAC;IAChB,UAAU,gBAAgB,CAAC,OAAO,kBAAkB,EAAE;IACtD,IAAK,IAAI,IAAI,GAAG,IAAI,cAAc,IAAI,GAAG,IAAK;QAC5C,QAAQ,mBAAmB,CAAC,eAAe;QAC3C,MAAM,mBAAmB,CAAC,aAAa;QACvC,QAAQ,CAAC,GAAG;QACZ,MAAM,CAAC,GAAG;QACV,QAAQ,YAAY,CAAC;QACrB,MAAM,YAAY,CAAC;QACnB,MAAM,qBAAqB,QAAQ,CAAC,GAAG,QAAQ,MAAM,CAAC,GAAG;QACzD,IAAI,oBAAoB;YACtB;QACF;QACA,IAAI,QAAQ,CAAC,GAAG,MAAM;YACpB,MAAM,YAAY,QAAQ,CAAC,GAAG,MAAM,CAAC;YACrC,MAAM,IAAI,CAAC,QAAQ,CAAC,GAAG,IAAI,IAAI;YAC/B,QAAQ,IAAI,CAAC,OAAO;QACtB,OAAO,IAAI,MAAM,CAAC,GAAG,MAAM;YACzB,MAAM,YAAY,MAAM,CAAC,GAAG,QAAQ,CAAC;YACrC,MAAM,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,IAAI;YAC7B,MAAM,IAAI,CAAC,SAAS;QACtB;QACA,QAAQ,YAAY,CAAC;QACrB,MAAM,YAAY,CAAC;QACnB,QAAQ,cAAc,CAAC,IAAI,QAAQ,CAAC;QACpC,MAAM,cAAc,CAAC,IAAI,MAAM,CAAC;QAChC,QAAQ,CAAC,IAAI,WAAW,CAAC,GAAG;QAC5B,QAAQ,CAAC,IAAI,WAAW,CAAC,GAAG;QAC5B,MAAM,CAAC,IAAI,WAAW,CAAC,GAAG;QAC1B,MAAM,CAAC,IAAI,WAAW,CAAC,GAAG;QAC1B,MAAM,KAAK,CAAC,IAAI,CAAC;QACjB,MAAM,KAAK,CAAC,CAAC,GAAG;QAChB,MAAM,GAAG,CAAC,IAAI,CAAC;QACf,MAAM,GAAG,CAAC,CAAC,GAAG;QACd,MAAM,QAAQ,MAAM,4BAA4B,CAAC,YAAY;QAC7D,MAAM,EAAE,CAAC,OAAO;QAChB,MAAM,OAAO,kJAAA,CAAA,YAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,MAAM,CAAC,EAAE;QAChD,MAAM,gBAAgB,QAAQ,CAAC,KAAK,QAAQ;QAC5C,MAAM,WAAW,WAAW,UAAU,CAAC,iBAAiB,aAAa;QACrE,IAAI,iBAAiB,UAAU;YAC7B,MAAM,KAAK,CAAC,mBAAmB,CAAC,eAAe;YAC/C,MAAM,GAAG,CAAC,mBAAmB,CAAC,aAAa;YAC3C,MAAM,KAAK,CAAC,YAAY,CAAC;YACzB,MAAM,GAAG,CAAC,YAAY,CAAC;YACvB,MAAM,cAAc,IAAI,kJAAA,CAAA,UAAO;YAC/B,MAAM,QAAQ,IAAI,kJAAA,CAAA,UAAO;YACzB,KAAK,mBAAmB,CAAC,MAAM,KAAK,EAAE,MAAM,GAAG,EAAE,OAAO;YACxD,WAAW,IAAI,CAAC;gBACd;gBACA;gBACA,UAAU,KAAK,MAAM,CAAC,UAAU,CAAC;gBACjC,QAAQ;gBACR,MAAM;gBACN,WAAW;gBACX,IAAI;gBACJ,CAAC,IAAI,EAAE;YACT;QACF;IACF;AACF;AACA,MAAM,sBAAsB,kJAAA,CAAA,OAAI;IAC9B,YAAY,WAAW,IAAI,mKAAA,CAAA,uBAAoB,EAAE,EAAE,WAAW,IAAI,2JAAA,CAAA,eAAY,CAAC;QAAE,OAAO,KAAK,MAAM,KAAK;IAAS,EAAE,CAAE;QACnH,KAAK,CAAC,UAAU;QAChB,IAAI,CAAC,eAAe,GAAG;QACvB,IAAI,CAAC,IAAI,GAAG;IACd;IACA,gFAAgF;IAChF,uBAAuB;QACrB,MAAM,WAAW,IAAI,CAAC,QAAQ;QAC9B,MAAM,gBAAgB,SAAS,UAAU,CAAC,aAAa;QACvD,MAAM,cAAc,SAAS,UAAU,CAAC,WAAW;QACnD,MAAM,gBAAgB,IAAI,aAAa,IAAI,cAAc,KAAK;QAC9D,IAAK,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,cAAc,KAAK,EAAE,IAAI,GAAG,KAAK,KAAK,EAAG;YAClE,OAAO,mBAAmB,CAAC,eAAe;YAC1C,KAAK,mBAAmB,CAAC,aAAa;YACtC,aAAa,CAAC,EAAE,GAAG,MAAM,IAAI,IAAI,aAAa,CAAC,IAAI,EAAE;YACrD,aAAa,CAAC,IAAI,EAAE,GAAG,aAAa,CAAC,EAAE,GAAG,OAAO,UAAU,CAAC;QAC9D;QACA,MAAM,yBAAyB,IAAI,kJAAA,CAAA,6BAA0B,CAAC,eAAe,GAAG;QAChF,SAAS,YAAY,CAAC,yBAAyB,IAAI,kJAAA,CAAA,6BAA0B,CAAC,wBAAwB,GAAG;QACzG,SAAS,YAAY,CAAC,uBAAuB,IAAI,kJAAA,CAAA,6BAA0B,CAAC,wBAAwB,GAAG;QACvG,OAAO,IAAI;IACb;IACA,QAAQ,SAAS,EAAE,UAAU,EAAE;QAC7B,MAAM,aAAa,IAAI,CAAC,QAAQ,CAAC,UAAU;QAC3C,MAAM,SAAS,UAAU,MAAM;QAC/B,IAAI,WAAW,QAAQ,CAAC,YAAY;YAClC,QAAQ,KAAK,CACX;QAEJ;QACA,MAAM,YAAY,UAAU,MAAM,CAAC,KAAK,KAAK,KAAK,IAAI,UAAU,MAAM,CAAC,KAAK,CAAC,SAAS,IAAI,IAAI;QAC9F,OAAO,UAAU,GAAG;QACpB,MAAM,cAAc,IAAI,CAAC,WAAW;QACpC,MAAM,WAAW,IAAI,CAAC,QAAQ;QAC9B,MAAM,WAAW,IAAI,CAAC,QAAQ;QAC9B,aAAa,SAAS,SAAS,GAAG;QAClC,IAAI,SAAS,cAAc,KAAK,MAAM;YACpC,SAAS,qBAAqB;QAChC;QACA,QAAQ,IAAI,CAAC,SAAS,cAAc,EAAE,YAAY,CAAC;QACnD,IAAI;QACJ,IAAI,YAAY;YACd,eAAe,aAAa;QAC9B,OAAO;YACL,MAAM,mBAAmB,KAAK,GAAG,CAAC,OAAO,IAAI,EAAE,QAAQ,eAAe,CAAC,KAAK,MAAM;YAClF,eAAe,uBAAuB,QAAQ,kBAAkB,SAAS,UAAU;QACrF;QACA,QAAQ,MAAM,IAAI;QAClB,IAAI,KAAK,gBAAgB,CAAC,aAAa,OAAO;YAC5C;QACF;QACA,IAAI,SAAS,WAAW,KAAK,MAAM;YACjC,SAAS,kBAAkB;QAC7B;QACA,KAAK,IAAI,CAAC,SAAS,WAAW,EAAE,YAAY,CAAC;QAC7C,IAAI;QACJ,IAAI,YAAY;YACd,YAAY,aAAa;QAC3B,OAAO;YACL,MAAM,gBAAgB,KAAK,GAAG,CAAC,OAAO,IAAI,EAAE,KAAK,eAAe,CAAC,KAAK,MAAM;YAC5E,YAAY,uBAAuB,QAAQ,eAAe,SAAS,UAAU;QAC/E;QACA,KAAK,cAAc,CAAC;QACpB,IAAI,KAAK,aAAa,CAAC,UAAU,OAAO;YACtC;QACF;QACA,IAAI,YAAY;YACd,kBAAkB,IAAI,EAAE;QAC1B,OAAO;YACL,mBAAmB,IAAI,EAAE,QAAQ;QACnC;IACF;IACA,eAAe,QAAQ,EAAE;QACvB,MAAM,WAAW,IAAI,CAAC,QAAQ,CAAC,QAAQ;QACvC,IAAI,YAAY,SAAS,UAAU,EAAE;YACnC,SAAS,WAAW,CAAC;YACrB,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,UAAU,CAAC;QACtE;IACF;AACF;;CAIA,yCAAyC","ignoreList":[0]}},
    {"offset": {"line": 15977, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15983, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/lines/Line2.js"],"sourcesContent":["import { LineSegments2 } from \"./LineSegments2.js\";\nimport { LineGeometry } from \"./LineGeometry.js\";\nimport { LineMaterial } from \"./LineMaterial.js\";\nclass Line2 extends LineSegments2 {\n  constructor(geometry = new LineGeometry(), material = new LineMaterial({ color: Math.random() * 16777215 })) {\n    super(geometry, material);\n    this.isLine2 = true;\n    this.type = \"Line2\";\n  }\n}\nexport {\n  Line2\n};\n//# sourceMappingURL=Line2.js.map\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AACA,MAAM,cAAc,4JAAA,CAAA,gBAAa;IAC/B,YAAY,WAAW,IAAI,2JAAA,CAAA,eAAY,EAAE,EAAE,WAAW,IAAI,2JAAA,CAAA,eAAY,CAAC;QAAE,OAAO,KAAK,MAAM,KAAK;IAAS,EAAE,CAAE;QAC3G,KAAK,CAAC,UAAU;QAChB,IAAI,CAAC,OAAO,GAAG;QACf,IAAI,CAAC,IAAI,GAAG;IACd;AACF;;CAIA,iCAAiC","ignoreList":[0]}},
    {"offset": {"line": 16003, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16009, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/helpers/LightProbeHelper.js"],"sourcesContent":["import { Mesh, ShaderMaterial, SphereGeometry } from \"three\";\nclass LightProbeHelper extends Mesh {\n  constructor(lightProbe, size) {\n    const material = new ShaderMaterial({\n      type: \"LightProbeHelperMaterial\",\n      uniforms: {\n        sh: { value: lightProbe.sh.coefficients },\n        // by reference\n        intensity: { value: lightProbe.intensity }\n      },\n      vertexShader: [\n        \"varying vec3 vNormal;\",\n        \"void main() {\",\n        \"\tvNormal = normalize( normalMatrix * normal );\",\n        \"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n        \"}\"\n      ].join(\"\\n\"),\n      fragmentShader: [\n        \"#define RECIPROCAL_PI 0.318309886\",\n        \"vec3 inverseTransformDirection( in vec3 normal, in mat4 matrix ) {\",\n        \"\t// matrix is assumed to be orthogonal\",\n        \"\treturn normalize( ( vec4( normal, 0.0 ) * matrix ).xyz );\",\n        \"}\",\n        \"// source: https://graphics.stanford.edu/papers/envmap/envmap.pdf\",\n        \"vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\",\n        \"\t// normal is assumed to have unit length\",\n        \"\tfloat x = normal.x, y = normal.y, z = normal.z;\",\n        \"\t// band 0\",\n        \"\tvec3 result = shCoefficients[ 0 ] * 0.886227;\",\n        \"\t// band 1\",\n        \"\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\",\n        \"\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\",\n        \"\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\",\n        \"\t// band 2\",\n        \"\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\",\n        \"\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\",\n        \"\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\",\n        \"\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\",\n        \"\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\",\n        \"\treturn result;\",\n        \"}\",\n        \"uniform vec3 sh[ 9 ]; // sh coefficients\",\n        \"uniform float intensity; // light probe intensity\",\n        \"varying vec3 vNormal;\",\n        \"void main() {\",\n        \"\tvec3 normal = normalize( vNormal );\",\n        \"\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\",\n        \"\tvec3 irradiance = shGetIrradianceAt( worldNormal, sh );\",\n        \"\tvec3 outgoingLight = RECIPROCAL_PI * irradiance * intensity;\",\n        \"\tgl_FragColor = linearToOutputTexel( vec4( outgoingLight, 1.0 ) );\",\n        \"}\"\n      ].join(\"\\n\")\n    });\n    const geometry = new SphereGeometry(1, 32, 16);\n    super(geometry, material);\n    this.lightProbe = lightProbe;\n    this.size = size;\n    this.type = \"LightProbeHelper\";\n    this.onBeforeRender();\n  }\n  dispose() {\n    this.geometry.dispose();\n    this.material.dispose();\n  }\n  onBeforeRender() {\n    this.position.copy(this.lightProbe.position);\n    this.scale.set(1, 1, 1).multiplyScalar(this.size);\n    this.material.uniforms.intensity.value = this.lightProbe.intensity;\n  }\n}\nexport {\n  LightProbeHelper\n};\n//# sourceMappingURL=LightProbeHelper.js.map\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,yBAAyB,kJAAA,CAAA,OAAI;IACjC,YAAY,UAAU,EAAE,IAAI,CAAE;QAC5B,MAAM,WAAW,IAAI,kJAAA,CAAA,iBAAc,CAAC;YAClC,MAAM;YACN,UAAU;gBACR,IAAI;oBAAE,OAAO,WAAW,EAAE,CAAC,YAAY;gBAAC;gBACxC,eAAe;gBACf,WAAW;oBAAE,OAAO,WAAW,SAAS;gBAAC;YAC3C;YACA,cAAc;gBACZ;gBACA;gBACA;gBACA;gBACA;aACD,CAAC,IAAI,CAAC;YACP,gBAAgB;gBACd;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;aACD,CAAC,IAAI,CAAC;QACT;QACA,MAAM,WAAW,IAAI,kJAAA,CAAA,iBAAc,CAAC,GAAG,IAAI;QAC3C,KAAK,CAAC,UAAU;QAChB,IAAI,CAAC,UAAU,GAAG;QAClB,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,cAAc;IACrB;IACA,UAAU;QACR,IAAI,CAAC,QAAQ,CAAC,OAAO;QACrB,IAAI,CAAC,QAAQ,CAAC,OAAO;IACvB;IACA,iBAAiB;QACf,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ;QAC3C,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,cAAc,CAAC,IAAI,CAAC,IAAI;QAChD,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS;IACpE;AACF;;CAIA,4CAA4C","ignoreList":[0]}},
    {"offset": {"line": 16089, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16095, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/helpers/RaycasterHelper.js"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nimport { Object3D, Mesh, SphereGeometry, MeshBasicMaterial, BufferGeometry, Float32BufferAttribute, Line, LineBasicMaterial, InstancedMesh, Vector3 } from \"three\";\nconst _o = /* @__PURE__ */ new Object3D();\nconst _v = /* @__PURE__ */ new Vector3();\nclass RaycasterHelper extends Object3D {\n  constructor(raycaster, numberOfHitsToVisualize = 20) {\n    super();\n    __publicField(this, \"raycaster\");\n    __publicField(this, \"hits\");\n    __publicField(this, \"origin\");\n    __publicField(this, \"near\");\n    __publicField(this, \"far\");\n    __publicField(this, \"nearToFar\");\n    __publicField(this, \"originToNear\");\n    __publicField(this, \"hitPoints\");\n    __publicField(this, \"colors\", {\n      near: 16777215,\n      far: 16777215,\n      originToNear: 3355443,\n      nearToFar: 16777215,\n      origin: [978050, 16711771]\n    });\n    __publicField(this, \"setColors\", (colors) => {\n      const _colors = {\n        ...this.colors,\n        ...colors\n      };\n      this.near.material.color.set(_colors.near);\n      this.far.material.color.set(_colors.far);\n      this.nearToFar.material.color.set(_colors.nearToFar);\n      this.originToNear.material.color.set(_colors.originToNear);\n    });\n    __publicField(this, \"update\", () => {\n      var _a;\n      const origin = this.raycaster.ray.origin;\n      const direction = this.raycaster.ray.direction;\n      this.origin.position.copy(origin);\n      this.near.position.copy(origin).add(direction.clone().multiplyScalar(this.raycaster.near));\n      this.far.position.copy(origin).add(direction.clone().multiplyScalar(this.raycaster.far));\n      this.far.lookAt(origin);\n      this.near.lookAt(origin);\n      let pos = this.nearToFar.geometry.getAttribute(\"position\");\n      pos.set([...this.near.position.toArray(), ...this.far.position.toArray()]);\n      pos.needsUpdate = true;\n      pos = this.originToNear.geometry.getAttribute(\"position\");\n      pos.set([...origin.toArray(), ...this.near.position.toArray()]);\n      pos.needsUpdate = true;\n      for (let i = 0; i < this.numberOfHitsToVisualize; i++) {\n        const hit = (_a = this.hits) == null ? void 0 : _a[i];\n        if (hit) {\n          const { point } = hit;\n          _o.position.copy(point);\n          _o.scale.setScalar(1);\n        } else {\n          _o.scale.setScalar(0);\n        }\n        _o.updateMatrix();\n        this.hitPoints.setMatrixAt(i, _o.matrix);\n      }\n      this.hitPoints.instanceMatrix.needsUpdate = true;\n      this.origin.material.color.set(this.hits.length > 0 ? this.colors.origin[0] : this.colors.origin[1]);\n    });\n    __publicField(this, \"dispose\", () => {\n      this.origin.geometry.dispose();\n      this.origin.material.dispose();\n      this.near.geometry.dispose();\n      this.near.material.dispose();\n      this.far.geometry.dispose();\n      this.far.material.dispose();\n      this.nearToFar.geometry.dispose();\n      this.nearToFar.material.dispose();\n      this.originToNear.geometry.dispose();\n      this.originToNear.material.dispose();\n      this.hitPoints.dispose();\n    });\n    this.numberOfHitsToVisualize = numberOfHitsToVisualize;\n    this.raycaster = raycaster;\n    this.hits = [];\n    this.origin = new Mesh(new SphereGeometry(0.04, 32), new MeshBasicMaterial());\n    this.origin.name = \"RaycasterHelper_origin\";\n    this.origin.raycast = () => null;\n    const size = 0.1;\n    let geometry = new BufferGeometry();\n    geometry.setAttribute(\"position\", new Float32BufferAttribute([\n      -size,\n      size,\n      0,\n      size,\n      size,\n      0,\n      size,\n      -size,\n      0,\n      -size,\n      -size,\n      0,\n      -size,\n      size,\n      0\n    ], 3));\n    this.near = new Line(geometry, new LineBasicMaterial());\n    this.near.name = \"RaycasterHelper_near\";\n    this.near.raycast = () => null;\n    this.far = new Line(geometry, new LineBasicMaterial());\n    this.far.name = \"RaycasterHelper_far\";\n    this.far.raycast = () => null;\n    this.nearToFar = new Line(new BufferGeometry(), new LineBasicMaterial());\n    this.nearToFar.name = \"RaycasterHelper_nearToFar\";\n    this.nearToFar.raycast = () => null;\n    this.nearToFar.geometry.setFromPoints([_v, _v]);\n    this.originToNear = new Line(this.nearToFar.geometry.clone(), new LineBasicMaterial());\n    this.originToNear.name = \"RaycasterHelper_originToNear\";\n    this.originToNear.raycast = () => null;\n    this.hitPoints = new InstancedMesh(new SphereGeometry(0.04), new MeshBasicMaterial(), this.numberOfHitsToVisualize);\n    this.hitPoints.name = \"RaycasterHelper_hits\";\n    this.hitPoints.raycast = () => null;\n    this.add(this.nearToFar);\n    this.add(this.originToNear);\n    this.add(this.near);\n    this.add(this.far);\n    this.add(this.origin);\n    this.add(this.hitPoints);\n    this.setColors();\n  }\n}\nexport {\n  RaycasterHelper\n};\n//# sourceMappingURL=RaycasterHelper.js.map\n"],"names":[],"mappings":";;;AAMA;AANA,IAAI,YAAY,OAAO,cAAc;AACrC,IAAI,kBAAkB,CAAC,KAAK,KAAK,QAAU,OAAO,MAAM,UAAU,KAAK,KAAK;QAAE,YAAY;QAAM,cAAc;QAAM,UAAU;QAAM;IAAM,KAAK,GAAG,CAAC,IAAI,GAAG;AAC1J,IAAI,gBAAgB,CAAC,KAAK,KAAK;IAC7B,gBAAgB,KAAK,OAAO,QAAQ,WAAW,MAAM,KAAK,KAAK;IAC/D,OAAO;AACT;;AAEA,MAAM,KAAK,aAAa,GAAG,IAAI,kJAAA,CAAA,WAAQ;AACvC,MAAM,KAAK,aAAa,GAAG,IAAI,kJAAA,CAAA,UAAO;AACtC,MAAM,wBAAwB,kJAAA,CAAA,WAAQ;IACpC,YAAY,SAAS,EAAE,0BAA0B,EAAE,CAAE;QACnD,KAAK;QACL,cAAc,IAAI,EAAE;QACpB,cAAc,IAAI,EAAE;QACpB,cAAc,IAAI,EAAE;QACpB,cAAc,IAAI,EAAE;QACpB,cAAc,IAAI,EAAE;QACpB,cAAc,IAAI,EAAE;QACpB,cAAc,IAAI,EAAE;QACpB,cAAc,IAAI,EAAE;QACpB,cAAc,IAAI,EAAE,UAAU;YAC5B,MAAM;YACN,KAAK;YACL,cAAc;YACd,WAAW;YACX,QAAQ;gBAAC;gBAAQ;aAAS;QAC5B;QACA,cAAc,IAAI,EAAE,aAAa,CAAC;YAChC,MAAM,UAAU;gBACd,GAAG,IAAI,CAAC,MAAM;gBACd,GAAG,MAAM;YACX;YACA,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,IAAI;YACzC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,GAAG;YACvC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,SAAS;YACnD,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,YAAY;QAC3D;QACA,cAAc,IAAI,EAAE,UAAU;YAC5B,IAAI;YACJ,MAAM,SAAS,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM;YACxC,MAAM,YAAY,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS;YAC9C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC;YAC1B,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,GAAG,CAAC,UAAU,KAAK,GAAG,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI;YACxF,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,GAAG,CAAC,UAAU,KAAK,GAAG,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG;YACtF,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC;YAChB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;YACjB,IAAI,MAAM,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,YAAY,CAAC;YAC/C,IAAI,GAAG,CAAC;mBAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO;mBAAO,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO;aAAG;YACzE,IAAI,WAAW,GAAG;YAClB,MAAM,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,YAAY,CAAC;YAC9C,IAAI,GAAG,CAAC;mBAAI,OAAO,OAAO;mBAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO;aAAG;YAC9D,IAAI,WAAW,GAAG;YAClB,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,uBAAuB,EAAE,IAAK;gBACrD,MAAM,MAAM,CAAC,KAAK,IAAI,CAAC,IAAI,KAAK,OAAO,KAAK,IAAI,EAAE,CAAC,EAAE;gBACrD,IAAI,KAAK;oBACP,MAAM,EAAE,KAAK,EAAE,GAAG;oBAClB,GAAG,QAAQ,CAAC,IAAI,CAAC;oBACjB,GAAG,KAAK,CAAC,SAAS,CAAC;gBACrB,OAAO;oBACL,GAAG,KAAK,CAAC,SAAS,CAAC;gBACrB;gBACA,GAAG,YAAY;gBACf,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,GAAG,GAAG,MAAM;YACzC;YACA,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,WAAW,GAAG;YAC5C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE;QACrG;QACA,cAAc,IAAI,EAAE,WAAW;YAC7B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO;YAC5B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO;YAC5B,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO;YAC1B,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO;YAC1B,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO;YACzB,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO;YACzB,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO;YAC/B,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO;YAC/B,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,OAAO;YAClC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,OAAO;YAClC,IAAI,CAAC,SAAS,CAAC,OAAO;QACxB;QACA,IAAI,CAAC,uBAAuB,GAAG;QAC/B,IAAI,CAAC,SAAS,GAAG;QACjB,IAAI,CAAC,IAAI,GAAG,EAAE;QACd,IAAI,CAAC,MAAM,GAAG,IAAI,kJAAA,CAAA,OAAI,CAAC,IAAI,kJAAA,CAAA,iBAAc,CAAC,MAAM,KAAK,IAAI,kJAAA,CAAA,oBAAiB;QAC1E,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG;QACnB,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,IAAM;QAC5B,MAAM,OAAO;QACb,IAAI,WAAW,IAAI,kJAAA,CAAA,iBAAc;QACjC,SAAS,YAAY,CAAC,YAAY,IAAI,kJAAA,CAAA,yBAAsB,CAAC;YAC3D,CAAC;YACD;YACA;YACA;YACA;YACA;YACA;YACA,CAAC;YACD;YACA,CAAC;YACD,CAAC;YACD;YACA,CAAC;YACD;YACA;SACD,EAAE;QACH,IAAI,CAAC,IAAI,GAAG,IAAI,kJAAA,CAAA,OAAI,CAAC,UAAU,IAAI,kJAAA,CAAA,oBAAiB;QACpD,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG;QACjB,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,IAAM;QAC1B,IAAI,CAAC,GAAG,GAAG,IAAI,kJAAA,CAAA,OAAI,CAAC,UAAU,IAAI,kJAAA,CAAA,oBAAiB;QACnD,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG;QAChB,IAAI,CAAC,GAAG,CAAC,OAAO,GAAG,IAAM;QACzB,IAAI,CAAC,SAAS,GAAG,IAAI,kJAAA,CAAA,OAAI,CAAC,IAAI,kJAAA,CAAA,iBAAc,IAAI,IAAI,kJAAA,CAAA,oBAAiB;QACrE,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG;QACtB,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,IAAM;QAC/B,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,aAAa,CAAC;YAAC;YAAI;SAAG;QAC9C,IAAI,CAAC,YAAY,GAAG,IAAI,kJAAA,CAAA,OAAI,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,IAAI,IAAI,kJAAA,CAAA,oBAAiB;QACnF,IAAI,CAAC,YAAY,CAAC,IAAI,GAAG;QACzB,IAAI,CAAC,YAAY,CAAC,OAAO,GAAG,IAAM;QAClC,IAAI,CAAC,SAAS,GAAG,IAAI,kJAAA,CAAA,gBAAa,CAAC,IAAI,kJAAA,CAAA,iBAAc,CAAC,OAAO,IAAI,kJAAA,CAAA,oBAAiB,IAAI,IAAI,CAAC,uBAAuB;QAClH,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG;QACtB,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,IAAM;QAC/B,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS;QACvB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY;QAC1B,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI;QAClB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG;QACjB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM;QACpB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS;QACvB,IAAI,CAAC,SAAS;IAChB;AACF;;CAIA,2CAA2C","ignoreList":[0]}},
    {"offset": {"line": 16248, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16254, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/helpers/PositionalAudioHelper.js"],"sourcesContent":["import { Line, BufferGeometry, BufferAttribute, LineBasicMaterial, MathUtils } from \"three\";\nclass PositionalAudioHelper extends Line {\n  constructor(audio, range = 1, divisionsInnerAngle = 16, divisionsOuterAngle = 2) {\n    const geometry = new BufferGeometry();\n    const divisions = divisionsInnerAngle + divisionsOuterAngle * 2;\n    const positions = new Float32Array((divisions * 3 + 3) * 3);\n    geometry.setAttribute(\"position\", new BufferAttribute(positions, 3));\n    const materialInnerAngle = new LineBasicMaterial({ color: 65280 });\n    const materialOuterAngle = new LineBasicMaterial({ color: 16776960 });\n    super(geometry, [materialOuterAngle, materialInnerAngle]);\n    this.type = \"PositionalAudioHelper\";\n    this.audio = audio;\n    this.range = range;\n    this.divisionsInnerAngle = divisionsInnerAngle;\n    this.divisionsOuterAngle = divisionsOuterAngle;\n    this.update();\n  }\n  update() {\n    const audio = this.audio;\n    const range = this.range;\n    const divisionsInnerAngle = this.divisionsInnerAngle;\n    const divisionsOuterAngle = this.divisionsOuterAngle;\n    const coneInnerAngle = MathUtils.degToRad(audio.panner.coneInnerAngle);\n    const coneOuterAngle = MathUtils.degToRad(audio.panner.coneOuterAngle);\n    const halfConeInnerAngle = coneInnerAngle / 2;\n    const halfConeOuterAngle = coneOuterAngle / 2;\n    let start = 0;\n    let count = 0;\n    let i, stride;\n    const geometry = this.geometry;\n    const positionAttribute = geometry.attributes.position;\n    geometry.clearGroups();\n    function generateSegment(from, to, divisions, materialIndex) {\n      const step = (to - from) / divisions;\n      positionAttribute.setXYZ(start, 0, 0, 0);\n      count++;\n      for (i = from; i < to; i += step) {\n        stride = start + count;\n        positionAttribute.setXYZ(stride, Math.sin(i) * range, 0, Math.cos(i) * range);\n        positionAttribute.setXYZ(\n          stride + 1,\n          Math.sin(Math.min(i + step, to)) * range,\n          0,\n          Math.cos(Math.min(i + step, to)) * range\n        );\n        positionAttribute.setXYZ(stride + 2, 0, 0, 0);\n        count += 3;\n      }\n      geometry.addGroup(start, count, materialIndex);\n      start += count;\n      count = 0;\n    }\n    generateSegment(-halfConeOuterAngle, -halfConeInnerAngle, divisionsOuterAngle, 0);\n    generateSegment(-halfConeInnerAngle, halfConeInnerAngle, divisionsInnerAngle, 1);\n    generateSegment(halfConeInnerAngle, halfConeOuterAngle, divisionsOuterAngle, 0);\n    positionAttribute.needsUpdate = true;\n    if (coneInnerAngle === coneOuterAngle)\n      this.material[0].visible = false;\n  }\n  dispose() {\n    this.geometry.dispose();\n    this.material[0].dispose();\n    this.material[1].dispose();\n  }\n}\nexport {\n  PositionalAudioHelper\n};\n//# sourceMappingURL=PositionalAudioHelper.js.map\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,8BAA8B,kJAAA,CAAA,OAAI;IACtC,YAAY,KAAK,EAAE,QAAQ,CAAC,EAAE,sBAAsB,EAAE,EAAE,sBAAsB,CAAC,CAAE;QAC/E,MAAM,WAAW,IAAI,kJAAA,CAAA,iBAAc;QACnC,MAAM,YAAY,sBAAsB,sBAAsB;QAC9D,MAAM,YAAY,IAAI,aAAa,CAAC,YAAY,IAAI,CAAC,IAAI;QACzD,SAAS,YAAY,CAAC,YAAY,IAAI,kJAAA,CAAA,kBAAe,CAAC,WAAW;QACjE,MAAM,qBAAqB,IAAI,kJAAA,CAAA,oBAAiB,CAAC;YAAE,OAAO;QAAM;QAChE,MAAM,qBAAqB,IAAI,kJAAA,CAAA,oBAAiB,CAAC;YAAE,OAAO;QAAS;QACnE,KAAK,CAAC,UAAU;YAAC;YAAoB;SAAmB;QACxD,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,KAAK,GAAG;QACb,IAAI,CAAC,KAAK,GAAG;QACb,IAAI,CAAC,mBAAmB,GAAG;QAC3B,IAAI,CAAC,mBAAmB,GAAG;QAC3B,IAAI,CAAC,MAAM;IACb;IACA,SAAS;QACP,MAAM,QAAQ,IAAI,CAAC,KAAK;QACxB,MAAM,QAAQ,IAAI,CAAC,KAAK;QACxB,MAAM,sBAAsB,IAAI,CAAC,mBAAmB;QACpD,MAAM,sBAAsB,IAAI,CAAC,mBAAmB;QACpD,MAAM,iBAAiB,kJAAA,CAAA,YAAS,CAAC,QAAQ,CAAC,MAAM,MAAM,CAAC,cAAc;QACrE,MAAM,iBAAiB,kJAAA,CAAA,YAAS,CAAC,QAAQ,CAAC,MAAM,MAAM,CAAC,cAAc;QACrE,MAAM,qBAAqB,iBAAiB;QAC5C,MAAM,qBAAqB,iBAAiB;QAC5C,IAAI,QAAQ;QACZ,IAAI,QAAQ;QACZ,IAAI,GAAG;QACP,MAAM,WAAW,IAAI,CAAC,QAAQ;QAC9B,MAAM,oBAAoB,SAAS,UAAU,CAAC,QAAQ;QACtD,SAAS,WAAW;QACpB,SAAS,gBAAgB,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,aAAa;YACzD,MAAM,OAAO,CAAC,KAAK,IAAI,IAAI;YAC3B,kBAAkB,MAAM,CAAC,OAAO,GAAG,GAAG;YACtC;YACA,IAAK,IAAI,MAAM,IAAI,IAAI,KAAK,KAAM;gBAChC,SAAS,QAAQ;gBACjB,kBAAkB,MAAM,CAAC,QAAQ,KAAK,GAAG,CAAC,KAAK,OAAO,GAAG,KAAK,GAAG,CAAC,KAAK;gBACvE,kBAAkB,MAAM,CACtB,SAAS,GACT,KAAK,GAAG,CAAC,KAAK,GAAG,CAAC,IAAI,MAAM,OAAO,OACnC,GACA,KAAK,GAAG,CAAC,KAAK,GAAG,CAAC,IAAI,MAAM,OAAO;gBAErC,kBAAkB,MAAM,CAAC,SAAS,GAAG,GAAG,GAAG;gBAC3C,SAAS;YACX;YACA,SAAS,QAAQ,CAAC,OAAO,OAAO;YAChC,SAAS;YACT,QAAQ;QACV;QACA,gBAAgB,CAAC,oBAAoB,CAAC,oBAAoB,qBAAqB;QAC/E,gBAAgB,CAAC,oBAAoB,oBAAoB,qBAAqB;QAC9E,gBAAgB,oBAAoB,oBAAoB,qBAAqB;QAC7E,kBAAkB,WAAW,GAAG;QAChC,IAAI,mBAAmB,gBACrB,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,OAAO,GAAG;IAC/B;IACA,UAAU;QACR,IAAI,CAAC,QAAQ,CAAC,OAAO;QACrB,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,OAAO;QACxB,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,OAAO;IAC1B;AACF;;CAIA,iDAAiD","ignoreList":[0]}},
    {"offset": {"line": 16326, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16332, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/helpers/RectAreaLightHelper.js"],"sourcesContent":["import { Line, BufferGeometry, Float32BufferAttribute, LineBasicMaterial, Mesh, MeshBasicMaterial, BackSide } from \"three\";\nclass RectAreaLightHelper extends Line {\n  constructor(light, color) {\n    const positions = [1, 1, 0, -1, 1, 0, -1, -1, 0, 1, -1, 0, 1, 1, 0];\n    const geometry = new BufferGeometry();\n    geometry.setAttribute(\"position\", new Float32BufferAttribute(positions, 3));\n    geometry.computeBoundingSphere();\n    const material = new LineBasicMaterial({ fog: false });\n    super(geometry, material);\n    this.light = light;\n    this.color = color;\n    this.type = \"RectAreaLightHelper\";\n    const positions2 = [1, 1, 0, -1, 1, 0, -1, -1, 0, 1, 1, 0, -1, -1, 0, 1, -1, 0];\n    const geometry2 = new BufferGeometry();\n    geometry2.setAttribute(\"position\", new Float32BufferAttribute(positions2, 3));\n    geometry2.computeBoundingSphere();\n    this.add(new Mesh(geometry2, new MeshBasicMaterial({ side: BackSide, fog: false })));\n  }\n  updateMatrixWorld() {\n    this.scale.set(0.5 * this.light.width, 0.5 * this.light.height, 1);\n    if (this.color !== void 0) {\n      this.material.color.set(this.color);\n      this.children[0].material.color.set(this.color);\n    } else {\n      this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);\n      const c = this.material.color;\n      const max = Math.max(c.r, c.g, c.b);\n      if (max > 1)\n        c.multiplyScalar(1 / max);\n      this.children[0].material.color.copy(this.material.color);\n    }\n    this.matrixWorld.extractRotation(this.light.matrixWorld).scale(this.scale).copyPosition(this.light.matrixWorld);\n    this.children[0].matrixWorld.copy(this.matrixWorld);\n  }\n  dispose() {\n    this.geometry.dispose();\n    this.material.dispose();\n    this.children[0].geometry.dispose();\n    this.children[0].material.dispose();\n  }\n}\nexport {\n  RectAreaLightHelper\n};\n//# sourceMappingURL=RectAreaLightHelper.js.map\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,4BAA4B,kJAAA,CAAA,OAAI;IACpC,YAAY,KAAK,EAAE,KAAK,CAAE;QACxB,MAAM,YAAY;YAAC;YAAG;YAAG;YAAG,CAAC;YAAG;YAAG;YAAG,CAAC;YAAG,CAAC;YAAG;YAAG;YAAG,CAAC;YAAG;YAAG;YAAG;YAAG;SAAE;QACnE,MAAM,WAAW,IAAI,kJAAA,CAAA,iBAAc;QACnC,SAAS,YAAY,CAAC,YAAY,IAAI,kJAAA,CAAA,yBAAsB,CAAC,WAAW;QACxE,SAAS,qBAAqB;QAC9B,MAAM,WAAW,IAAI,kJAAA,CAAA,oBAAiB,CAAC;YAAE,KAAK;QAAM;QACpD,KAAK,CAAC,UAAU;QAChB,IAAI,CAAC,KAAK,GAAG;QACb,IAAI,CAAC,KAAK,GAAG;QACb,IAAI,CAAC,IAAI,GAAG;QACZ,MAAM,aAAa;YAAC;YAAG;YAAG;YAAG,CAAC;YAAG;YAAG;YAAG,CAAC;YAAG,CAAC;YAAG;YAAG;YAAG;YAAG;YAAG,CAAC;YAAG,CAAC;YAAG;YAAG;YAAG,CAAC;YAAG;SAAE;QAC/E,MAAM,YAAY,IAAI,kJAAA,CAAA,iBAAc;QACpC,UAAU,YAAY,CAAC,YAAY,IAAI,kJAAA,CAAA,yBAAsB,CAAC,YAAY;QAC1E,UAAU,qBAAqB;QAC/B,IAAI,CAAC,GAAG,CAAC,IAAI,kJAAA,CAAA,OAAI,CAAC,WAAW,IAAI,kJAAA,CAAA,oBAAiB,CAAC;YAAE,MAAM,kJAAA,CAAA,WAAQ;YAAE,KAAK;QAAM;IAClF;IACA,oBAAoB;QAClB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,MAAM,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;QAChE,IAAI,IAAI,CAAC,KAAK,KAAK,KAAK,GAAG;YACzB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK;YAClC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK;QAChD,OAAO;YACL,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS;YAC9E,MAAM,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK;YAC7B,MAAM,MAAM,KAAK,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC;YAClC,IAAI,MAAM,GACR,EAAE,cAAc,CAAC,IAAI;YACvB,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK;QAC1D;QACA,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW;QAC9G,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW;IACpD;IACA,UAAU;QACR,IAAI,CAAC,QAAQ,CAAC,OAAO;QACrB,IAAI,CAAC,QAAQ,CAAC,OAAO;QACrB,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,OAAO;QACjC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,OAAO;IACnC;AACF;;CAIA,+CAA+C","ignoreList":[0]}},
    {"offset": {"line": 16418, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16424, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/deprecated/Geometry.js"],"sourcesContent":["import { Vector3, Color, EventDispatcher, BufferGeometry, Float32BufferAttribute, MathUtils, Matrix3, Matrix4, Box3, Sphere, BufferAttribute, Vector2, Object3D } from \"three\";\nconst _m1 = /* @__PURE__ */ new Matrix4();\nconst _obj = /* @__PURE__ */ new Object3D();\nconst _offset = /* @__PURE__ */ new Vector3();\nconst Geometry = /* @__PURE__ */ (() => {\n  class Geometry2 extends EventDispatcher {\n    static createBufferGeometryFromObject(object) {\n      let buffergeometry = new BufferGeometry();\n      const geometry = object.geometry;\n      if (object.isPoints || object.isLine) {\n        const positions = new Float32BufferAttribute(geometry.vertices.length * 3, 3);\n        const colors = new Float32BufferAttribute(geometry.colors.length * 3, 3);\n        buffergeometry.setAttribute(\"position\", positions.copyVector3sArray(geometry.vertices));\n        buffergeometry.setAttribute(\"color\", colors.copyColorsArray(geometry.colors));\n        if (geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length) {\n          const lineDistances = new Float32BufferAttribute(geometry.lineDistances.length, 1);\n          buffergeometry.setAttribute(\"lineDistance\", lineDistances.copyArray(geometry.lineDistances));\n        }\n        if (geometry.boundingSphere !== null) {\n          buffergeometry.boundingSphere = geometry.boundingSphere.clone();\n        }\n        if (geometry.boundingBox !== null) {\n          buffergeometry.boundingBox = geometry.boundingBox.clone();\n        }\n      } else if (object.isMesh) {\n        buffergeometry = geometry.toBufferGeometry();\n      }\n      return buffergeometry;\n    }\n    constructor() {\n      super();\n      this.isGeometry = true;\n      this.uuid = MathUtils.generateUUID();\n      this.name = \"\";\n      this.type = \"Geometry\";\n      this.vertices = [];\n      this.colors = [];\n      this.faces = [];\n      this.faceVertexUvs = [[]];\n      this.morphTargets = [];\n      this.morphNormals = [];\n      this.skinWeights = [];\n      this.skinIndices = [];\n      this.lineDistances = [];\n      this.boundingBox = null;\n      this.boundingSphere = null;\n      this.elementsNeedUpdate = false;\n      this.verticesNeedUpdate = false;\n      this.uvsNeedUpdate = false;\n      this.normalsNeedUpdate = false;\n      this.colorsNeedUpdate = false;\n      this.lineDistancesNeedUpdate = false;\n      this.groupsNeedUpdate = false;\n    }\n    applyMatrix4(matrix) {\n      const normalMatrix = new Matrix3().getNormalMatrix(matrix);\n      for (let i = 0, il = this.vertices.length; i < il; i++) {\n        const vertex = this.vertices[i];\n        vertex.applyMatrix4(matrix);\n      }\n      for (let i = 0, il = this.faces.length; i < il; i++) {\n        const face = this.faces[i];\n        face.normal.applyMatrix3(normalMatrix).normalize();\n        for (let j = 0, jl = face.vertexNormals.length; j < jl; j++) {\n          face.vertexNormals[j].applyMatrix3(normalMatrix).normalize();\n        }\n      }\n      if (this.boundingBox !== null) {\n        this.computeBoundingBox();\n      }\n      if (this.boundingSphere !== null) {\n        this.computeBoundingSphere();\n      }\n      this.verticesNeedUpdate = true;\n      this.normalsNeedUpdate = true;\n      return this;\n    }\n    rotateX(angle) {\n      _m1.makeRotationX(angle);\n      this.applyMatrix4(_m1);\n      return this;\n    }\n    rotateY(angle) {\n      _m1.makeRotationY(angle);\n      this.applyMatrix4(_m1);\n      return this;\n    }\n    rotateZ(angle) {\n      _m1.makeRotationZ(angle);\n      this.applyMatrix4(_m1);\n      return this;\n    }\n    translate(x, y, z) {\n      _m1.makeTranslation(x, y, z);\n      this.applyMatrix4(_m1);\n      return this;\n    }\n    scale(x, y, z) {\n      _m1.makeScale(x, y, z);\n      this.applyMatrix4(_m1);\n      return this;\n    }\n    lookAt(vector) {\n      _obj.lookAt(vector);\n      _obj.updateMatrix();\n      this.applyMatrix4(_obj.matrix);\n      return this;\n    }\n    fromBufferGeometry(geometry) {\n      const scope = this;\n      const index = geometry.index !== null ? geometry.index : void 0;\n      const attributes = geometry.attributes;\n      if (attributes.position === void 0) {\n        console.error(\"THREE.Geometry.fromBufferGeometry(): Position attribute required for conversion.\");\n        return this;\n      }\n      const position = attributes.position;\n      const normal = attributes.normal;\n      const color = attributes.color;\n      const uv = attributes.uv;\n      const uv2 = attributes.uv2;\n      if (uv2 !== void 0)\n        this.faceVertexUvs[1] = [];\n      for (let i = 0; i < position.count; i++) {\n        scope.vertices.push(new Vector3().fromBufferAttribute(position, i));\n        if (color !== void 0) {\n          scope.colors.push(new Color().fromBufferAttribute(color, i));\n        }\n      }\n      function addFace(a, b, c, materialIndex) {\n        const vertexColors = color === void 0 ? [] : [scope.colors[a].clone(), scope.colors[b].clone(), scope.colors[c].clone()];\n        const vertexNormals = normal === void 0 ? [] : [\n          new Vector3().fromBufferAttribute(normal, a),\n          new Vector3().fromBufferAttribute(normal, b),\n          new Vector3().fromBufferAttribute(normal, c)\n        ];\n        const face = new Face3(a, b, c, vertexNormals, vertexColors, materialIndex);\n        scope.faces.push(face);\n        if (uv !== void 0) {\n          scope.faceVertexUvs[0].push([\n            new Vector2().fromBufferAttribute(uv, a),\n            new Vector2().fromBufferAttribute(uv, b),\n            new Vector2().fromBufferAttribute(uv, c)\n          ]);\n        }\n        if (uv2 !== void 0) {\n          scope.faceVertexUvs[1].push([\n            new Vector2().fromBufferAttribute(uv2, a),\n            new Vector2().fromBufferAttribute(uv2, b),\n            new Vector2().fromBufferAttribute(uv2, c)\n          ]);\n        }\n      }\n      const groups = geometry.groups;\n      if (groups.length > 0) {\n        for (let i = 0; i < groups.length; i++) {\n          const group = groups[i];\n          const start = group.start;\n          const count = group.count;\n          for (let j = start, jl = start + count; j < jl; j += 3) {\n            if (index !== void 0) {\n              addFace(index.getX(j), index.getX(j + 1), index.getX(j + 2), group.materialIndex);\n            } else {\n              addFace(j, j + 1, j + 2, group.materialIndex);\n            }\n          }\n        }\n      } else {\n        if (index !== void 0) {\n          for (let i = 0; i < index.count; i += 3) {\n            addFace(index.getX(i), index.getX(i + 1), index.getX(i + 2));\n          }\n        } else {\n          for (let i = 0; i < position.count; i += 3) {\n            addFace(i, i + 1, i + 2);\n          }\n        }\n      }\n      this.computeFaceNormals();\n      if (geometry.boundingBox !== null) {\n        this.boundingBox = geometry.boundingBox.clone();\n      }\n      if (geometry.boundingSphere !== null) {\n        this.boundingSphere = geometry.boundingSphere.clone();\n      }\n      return this;\n    }\n    center() {\n      this.computeBoundingBox();\n      this.boundingBox.getCenter(_offset).negate();\n      this.translate(_offset.x, _offset.y, _offset.z);\n      return this;\n    }\n    normalize() {\n      this.computeBoundingSphere();\n      const center = this.boundingSphere.center;\n      const radius = this.boundingSphere.radius;\n      const s = radius === 0 ? 1 : 1 / radius;\n      const matrix = new Matrix4();\n      matrix.set(s, 0, 0, -s * center.x, 0, s, 0, -s * center.y, 0, 0, s, -s * center.z, 0, 0, 0, 1);\n      this.applyMatrix4(matrix);\n      return this;\n    }\n    computeFaceNormals() {\n      const cb = new Vector3(), ab = new Vector3();\n      for (let f = 0, fl = this.faces.length; f < fl; f++) {\n        const face = this.faces[f];\n        const vA = this.vertices[face.a];\n        const vB = this.vertices[face.b];\n        const vC = this.vertices[face.c];\n        cb.subVectors(vC, vB);\n        ab.subVectors(vA, vB);\n        cb.cross(ab);\n        cb.normalize();\n        face.normal.copy(cb);\n      }\n    }\n    computeVertexNormals(areaWeighted = true) {\n      const vertices = new Array(this.vertices.length);\n      for (let v = 0, vl = this.vertices.length; v < vl; v++) {\n        vertices[v] = new Vector3();\n      }\n      if (areaWeighted) {\n        const cb = new Vector3(), ab = new Vector3();\n        for (let f = 0, fl = this.faces.length; f < fl; f++) {\n          const face = this.faces[f];\n          const vA = this.vertices[face.a];\n          const vB = this.vertices[face.b];\n          const vC = this.vertices[face.c];\n          cb.subVectors(vC, vB);\n          ab.subVectors(vA, vB);\n          cb.cross(ab);\n          vertices[face.a].add(cb);\n          vertices[face.b].add(cb);\n          vertices[face.c].add(cb);\n        }\n      } else {\n        this.computeFaceNormals();\n        for (let f = 0, fl = this.faces.length; f < fl; f++) {\n          const face = this.faces[f];\n          vertices[face.a].add(face.normal);\n          vertices[face.b].add(face.normal);\n          vertices[face.c].add(face.normal);\n        }\n      }\n      for (let v = 0, vl = this.vertices.length; v < vl; v++) {\n        vertices[v].normalize();\n      }\n      for (let f = 0, fl = this.faces.length; f < fl; f++) {\n        const face = this.faces[f];\n        const vertexNormals = face.vertexNormals;\n        if (vertexNormals.length === 3) {\n          vertexNormals[0].copy(vertices[face.a]);\n          vertexNormals[1].copy(vertices[face.b]);\n          vertexNormals[2].copy(vertices[face.c]);\n        } else {\n          vertexNormals[0] = vertices[face.a].clone();\n          vertexNormals[1] = vertices[face.b].clone();\n          vertexNormals[2] = vertices[face.c].clone();\n        }\n      }\n      if (this.faces.length > 0) {\n        this.normalsNeedUpdate = true;\n      }\n    }\n    computeFlatVertexNormals() {\n      this.computeFaceNormals();\n      for (let f = 0, fl = this.faces.length; f < fl; f++) {\n        const face = this.faces[f];\n        const vertexNormals = face.vertexNormals;\n        if (vertexNormals.length === 3) {\n          vertexNormals[0].copy(face.normal);\n          vertexNormals[1].copy(face.normal);\n          vertexNormals[2].copy(face.normal);\n        } else {\n          vertexNormals[0] = face.normal.clone();\n          vertexNormals[1] = face.normal.clone();\n          vertexNormals[2] = face.normal.clone();\n        }\n      }\n      if (this.faces.length > 0) {\n        this.normalsNeedUpdate = true;\n      }\n    }\n    computeMorphNormals() {\n      for (let f = 0, fl = this.faces.length; f < fl; f++) {\n        const face = this.faces[f];\n        if (!face.__originalFaceNormal) {\n          face.__originalFaceNormal = face.normal.clone();\n        } else {\n          face.__originalFaceNormal.copy(face.normal);\n        }\n        if (!face.__originalVertexNormals)\n          face.__originalVertexNormals = [];\n        for (let i = 0, il = face.vertexNormals.length; i < il; i++) {\n          if (!face.__originalVertexNormals[i]) {\n            face.__originalVertexNormals[i] = face.vertexNormals[i].clone();\n          } else {\n            face.__originalVertexNormals[i].copy(face.vertexNormals[i]);\n          }\n        }\n      }\n      const tmpGeo = new Geometry2();\n      tmpGeo.faces = this.faces;\n      for (let i = 0, il = this.morphTargets.length; i < il; i++) {\n        if (!this.morphNormals[i]) {\n          this.morphNormals[i] = {};\n          this.morphNormals[i].faceNormals = [];\n          this.morphNormals[i].vertexNormals = [];\n          const dstNormalsFace = this.morphNormals[i].faceNormals;\n          const dstNormalsVertex = this.morphNormals[i].vertexNormals;\n          for (let f = 0, fl = this.faces.length; f < fl; f++) {\n            const faceNormal = new Vector3();\n            const vertexNormals = {\n              a: new Vector3(),\n              b: new Vector3(),\n              c: new Vector3()\n            };\n            dstNormalsFace.push(faceNormal);\n            dstNormalsVertex.push(vertexNormals);\n          }\n        }\n        const morphNormals = this.morphNormals[i];\n        tmpGeo.vertices = this.morphTargets[i].vertices;\n        tmpGeo.computeFaceNormals();\n        tmpGeo.computeVertexNormals();\n        for (let f = 0, fl = this.faces.length; f < fl; f++) {\n          const face = this.faces[f];\n          const faceNormal = morphNormals.faceNormals[f];\n          const vertexNormals = morphNormals.vertexNormals[f];\n          faceNormal.copy(face.normal);\n          vertexNormals.a.copy(face.vertexNormals[0]);\n          vertexNormals.b.copy(face.vertexNormals[1]);\n          vertexNormals.c.copy(face.vertexNormals[2]);\n        }\n      }\n      for (let f = 0, fl = this.faces.length; f < fl; f++) {\n        const face = this.faces[f];\n        face.normal = face.__originalFaceNormal;\n        face.vertexNormals = face.__originalVertexNormals;\n      }\n    }\n    computeBoundingBox() {\n      if (this.boundingBox === null) {\n        this.boundingBox = new Box3();\n      }\n      this.boundingBox.setFromPoints(this.vertices);\n    }\n    computeBoundingSphere() {\n      if (this.boundingSphere === null) {\n        this.boundingSphere = new Sphere();\n      }\n      this.boundingSphere.setFromPoints(this.vertices);\n    }\n    merge(geometry, matrix, materialIndexOffset = 0) {\n      if (!(geometry && geometry.isGeometry)) {\n        console.error(\"THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.\", geometry);\n        return;\n      }\n      let normalMatrix;\n      const vertexOffset = this.vertices.length, vertices1 = this.vertices, vertices2 = geometry.vertices, faces1 = this.faces, faces2 = geometry.faces, colors1 = this.colors, colors2 = geometry.colors;\n      if (matrix !== void 0) {\n        normalMatrix = new Matrix3().getNormalMatrix(matrix);\n      }\n      for (let i = 0, il = vertices2.length; i < il; i++) {\n        const vertex = vertices2[i];\n        const vertexCopy = vertex.clone();\n        if (matrix !== void 0)\n          vertexCopy.applyMatrix4(matrix);\n        vertices1.push(vertexCopy);\n      }\n      for (let i = 0, il = colors2.length; i < il; i++) {\n        colors1.push(colors2[i].clone());\n      }\n      for (let i = 0, il = faces2.length; i < il; i++) {\n        const face = faces2[i];\n        let normal, color;\n        const faceVertexNormals = face.vertexNormals, faceVertexColors = face.vertexColors;\n        const faceCopy = new Face3(face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset);\n        faceCopy.normal.copy(face.normal);\n        if (normalMatrix !== void 0) {\n          faceCopy.normal.applyMatrix3(normalMatrix).normalize();\n        }\n        for (let j = 0, jl = faceVertexNormals.length; j < jl; j++) {\n          normal = faceVertexNormals[j].clone();\n          if (normalMatrix !== void 0) {\n            normal.applyMatrix3(normalMatrix).normalize();\n          }\n          faceCopy.vertexNormals.push(normal);\n        }\n        faceCopy.color.copy(face.color);\n        for (let j = 0, jl = faceVertexColors.length; j < jl; j++) {\n          color = faceVertexColors[j];\n          faceCopy.vertexColors.push(color.clone());\n        }\n        faceCopy.materialIndex = face.materialIndex + materialIndexOffset;\n        faces1.push(faceCopy);\n      }\n      for (let i = 0, il = geometry.faceVertexUvs.length; i < il; i++) {\n        const faceVertexUvs2 = geometry.faceVertexUvs[i];\n        if (this.faceVertexUvs[i] === void 0)\n          this.faceVertexUvs[i] = [];\n        for (let j = 0, jl = faceVertexUvs2.length; j < jl; j++) {\n          const uvs2 = faceVertexUvs2[j], uvsCopy = [];\n          for (let k = 0, kl = uvs2.length; k < kl; k++) {\n            uvsCopy.push(uvs2[k].clone());\n          }\n          this.faceVertexUvs[i].push(uvsCopy);\n        }\n      }\n    }\n    mergeMesh(mesh) {\n      if (!(mesh && mesh.isMesh)) {\n        console.error(\"THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.\", mesh);\n        return;\n      }\n      if (mesh.matrixAutoUpdate)\n        mesh.updateMatrix();\n      this.merge(mesh.geometry, mesh.matrix);\n    }\n    /*\n     * Checks for duplicate vertices with hashmap.\n     * Duplicated vertices are removed\n     * and faces' vertices are updated.\n     */\n    mergeVertices(precisionPoints = 4) {\n      const verticesMap = {};\n      const unique = [], changes = [];\n      const precision = Math.pow(10, precisionPoints);\n      for (let i = 0, il = this.vertices.length; i < il; i++) {\n        const v = this.vertices[i];\n        const key = `${Math.round(v.x * precision)}_${Math.round(v.y * precision)}_${Math.round(v.z * precision)}`;\n        if (verticesMap[key] === void 0) {\n          verticesMap[key] = i;\n          unique.push(this.vertices[i]);\n          changes[i] = unique.length - 1;\n        } else {\n          changes[i] = changes[verticesMap[key]];\n        }\n      }\n      const faceIndicesToRemove = [];\n      for (let i = 0, il = this.faces.length; i < il; i++) {\n        const face = this.faces[i];\n        face.a = changes[face.a];\n        face.b = changes[face.b];\n        face.c = changes[face.c];\n        const indices = [face.a, face.b, face.c];\n        for (let n = 0; n < 3; n++) {\n          if (indices[n] === indices[(n + 1) % 3]) {\n            faceIndicesToRemove.push(i);\n            break;\n          }\n        }\n      }\n      for (let i = faceIndicesToRemove.length - 1; i >= 0; i--) {\n        const idx = faceIndicesToRemove[i];\n        this.faces.splice(idx, 1);\n        for (let j = 0, jl = this.faceVertexUvs.length; j < jl; j++) {\n          this.faceVertexUvs[j].splice(idx, 1);\n        }\n      }\n      const diff = this.vertices.length - unique.length;\n      this.vertices = unique;\n      return diff;\n    }\n    setFromPoints(points) {\n      this.vertices = [];\n      for (let i = 0, l = points.length; i < l; i++) {\n        const point = points[i];\n        this.vertices.push(new Vector3(point.x, point.y, point.z || 0));\n      }\n      return this;\n    }\n    sortFacesByMaterialIndex() {\n      const faces = this.faces;\n      const length = faces.length;\n      for (let i = 0; i < length; i++) {\n        faces[i]._id = i;\n      }\n      function materialIndexSort(a, b) {\n        return a.materialIndex - b.materialIndex;\n      }\n      faces.sort(materialIndexSort);\n      const uvs1 = this.faceVertexUvs[0];\n      const uvs2 = this.faceVertexUvs[1];\n      let newUvs1, newUvs2;\n      if (uvs1 && uvs1.length === length)\n        newUvs1 = [];\n      if (uvs2 && uvs2.length === length)\n        newUvs2 = [];\n      for (let i = 0; i < length; i++) {\n        const id = faces[i]._id;\n        if (newUvs1)\n          newUvs1.push(uvs1[id]);\n        if (newUvs2)\n          newUvs2.push(uvs2[id]);\n      }\n      if (newUvs1)\n        this.faceVertexUvs[0] = newUvs1;\n      if (newUvs2)\n        this.faceVertexUvs[1] = newUvs2;\n    }\n    toJSON() {\n      const data = {\n        metadata: {\n          version: 4.5,\n          type: \"Geometry\",\n          generator: \"Geometry.toJSON\"\n        }\n      };\n      data.uuid = this.uuid;\n      data.type = this.type;\n      if (this.name !== \"\")\n        data.name = this.name;\n      if (this.parameters !== void 0) {\n        const parameters = this.parameters;\n        for (let key in parameters) {\n          if (parameters[key] !== void 0)\n            data[key] = parameters[key];\n        }\n        return data;\n      }\n      const vertices = [];\n      for (let i = 0; i < this.vertices.length; i++) {\n        const vertex = this.vertices[i];\n        vertices.push(vertex.x, vertex.y, vertex.z);\n      }\n      const faces = [];\n      const normals = [];\n      const normalsHash = {};\n      const colors = [];\n      const colorsHash = {};\n      const uvs = [];\n      const uvsHash = {};\n      for (let i = 0; i < this.faces.length; i++) {\n        const face = this.faces[i];\n        const hasMaterial = true;\n        const hasFaceUv = false;\n        const hasFaceVertexUv = this.faceVertexUvs[0][i] !== void 0;\n        const hasFaceNormal = face.normal.length() > 0;\n        const hasFaceVertexNormal = face.vertexNormals.length > 0;\n        const hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\n        const hasFaceVertexColor = face.vertexColors.length > 0;\n        let faceType = 0;\n        faceType = setBit(faceType, 0, 0);\n        faceType = setBit(faceType, 1, hasMaterial);\n        faceType = setBit(faceType, 2, hasFaceUv);\n        faceType = setBit(faceType, 3, hasFaceVertexUv);\n        faceType = setBit(faceType, 4, hasFaceNormal);\n        faceType = setBit(faceType, 5, hasFaceVertexNormal);\n        faceType = setBit(faceType, 6, hasFaceColor);\n        faceType = setBit(faceType, 7, hasFaceVertexColor);\n        faces.push(faceType);\n        faces.push(face.a, face.b, face.c);\n        faces.push(face.materialIndex);\n        if (hasFaceVertexUv) {\n          const faceVertexUvs = this.faceVertexUvs[0][i];\n          faces.push(getUvIndex(faceVertexUvs[0]), getUvIndex(faceVertexUvs[1]), getUvIndex(faceVertexUvs[2]));\n        }\n        if (hasFaceNormal) {\n          faces.push(getNormalIndex(face.normal));\n        }\n        if (hasFaceVertexNormal) {\n          const vertexNormals = face.vertexNormals;\n          faces.push(\n            getNormalIndex(vertexNormals[0]),\n            getNormalIndex(vertexNormals[1]),\n            getNormalIndex(vertexNormals[2])\n          );\n        }\n        if (hasFaceColor) {\n          faces.push(getColorIndex(face.color));\n        }\n        if (hasFaceVertexColor) {\n          const vertexColors = face.vertexColors;\n          faces.push(getColorIndex(vertexColors[0]), getColorIndex(vertexColors[1]), getColorIndex(vertexColors[2]));\n        }\n      }\n      function setBit(value, position, enabled) {\n        return enabled ? value | 1 << position : value & ~(1 << position);\n      }\n      function getNormalIndex(normal) {\n        const hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\n        if (normalsHash[hash] !== void 0) {\n          return normalsHash[hash];\n        }\n        normalsHash[hash] = normals.length / 3;\n        normals.push(normal.x, normal.y, normal.z);\n        return normalsHash[hash];\n      }\n      function getColorIndex(color) {\n        const hash = color.r.toString() + color.g.toString() + color.b.toString();\n        if (colorsHash[hash] !== void 0) {\n          return colorsHash[hash];\n        }\n        colorsHash[hash] = colors.length;\n        colors.push(color.getHex());\n        return colorsHash[hash];\n      }\n      function getUvIndex(uv) {\n        const hash = uv.x.toString() + uv.y.toString();\n        if (uvsHash[hash] !== void 0) {\n          return uvsHash[hash];\n        }\n        uvsHash[hash] = uvs.length / 2;\n        uvs.push(uv.x, uv.y);\n        return uvsHash[hash];\n      }\n      data.data = {};\n      data.data.vertices = vertices;\n      data.data.normals = normals;\n      if (colors.length > 0)\n        data.data.colors = colors;\n      if (uvs.length > 0)\n        data.data.uvs = [uvs];\n      data.data.faces = faces;\n      return data;\n    }\n    clone() {\n      return new Geometry2().copy(this);\n    }\n    copy(source) {\n      this.vertices = [];\n      this.colors = [];\n      this.faces = [];\n      this.faceVertexUvs = [[]];\n      this.morphTargets = [];\n      this.morphNormals = [];\n      this.skinWeights = [];\n      this.skinIndices = [];\n      this.lineDistances = [];\n      this.boundingBox = null;\n      this.boundingSphere = null;\n      this.name = source.name;\n      const vertices = source.vertices;\n      for (let i = 0, il = vertices.length; i < il; i++) {\n        this.vertices.push(vertices[i].clone());\n      }\n      const colors = source.colors;\n      for (let i = 0, il = colors.length; i < il; i++) {\n        this.colors.push(colors[i].clone());\n      }\n      const faces = source.faces;\n      for (let i = 0, il = faces.length; i < il; i++) {\n        this.faces.push(faces[i].clone());\n      }\n      for (let i = 0, il = source.faceVertexUvs.length; i < il; i++) {\n        const faceVertexUvs = source.faceVertexUvs[i];\n        if (this.faceVertexUvs[i] === void 0) {\n          this.faceVertexUvs[i] = [];\n        }\n        for (let j = 0, jl = faceVertexUvs.length; j < jl; j++) {\n          const uvs = faceVertexUvs[j], uvsCopy = [];\n          for (let k = 0, kl = uvs.length; k < kl; k++) {\n            const uv = uvs[k];\n            uvsCopy.push(uv.clone());\n          }\n          this.faceVertexUvs[i].push(uvsCopy);\n        }\n      }\n      const morphTargets = source.morphTargets;\n      for (let i = 0, il = morphTargets.length; i < il; i++) {\n        const morphTarget = {};\n        morphTarget.name = morphTargets[i].name;\n        if (morphTargets[i].vertices !== void 0) {\n          morphTarget.vertices = [];\n          for (let j = 0, jl = morphTargets[i].vertices.length; j < jl; j++) {\n            morphTarget.vertices.push(morphTargets[i].vertices[j].clone());\n          }\n        }\n        if (morphTargets[i].normals !== void 0) {\n          morphTarget.normals = [];\n          for (let j = 0, jl = morphTargets[i].normals.length; j < jl; j++) {\n            morphTarget.normals.push(morphTargets[i].normals[j].clone());\n          }\n        }\n        this.morphTargets.push(morphTarget);\n      }\n      const morphNormals = source.morphNormals;\n      for (let i = 0, il = morphNormals.length; i < il; i++) {\n        const morphNormal = {};\n        if (morphNormals[i].vertexNormals !== void 0) {\n          morphNormal.vertexNormals = [];\n          for (let j = 0, jl = morphNormals[i].vertexNormals.length; j < jl; j++) {\n            const srcVertexNormal = morphNormals[i].vertexNormals[j];\n            const destVertexNormal = {};\n            destVertexNormal.a = srcVertexNormal.a.clone();\n            destVertexNormal.b = srcVertexNormal.b.clone();\n            destVertexNormal.c = srcVertexNormal.c.clone();\n            morphNormal.vertexNormals.push(destVertexNormal);\n          }\n        }\n        if (morphNormals[i].faceNormals !== void 0) {\n          morphNormal.faceNormals = [];\n          for (let j = 0, jl = morphNormals[i].faceNormals.length; j < jl; j++) {\n            morphNormal.faceNormals.push(morphNormals[i].faceNormals[j].clone());\n          }\n        }\n        this.morphNormals.push(morphNormal);\n      }\n      const skinWeights = source.skinWeights;\n      for (let i = 0, il = skinWeights.length; i < il; i++) {\n        this.skinWeights.push(skinWeights[i].clone());\n      }\n      const skinIndices = source.skinIndices;\n      for (let i = 0, il = skinIndices.length; i < il; i++) {\n        this.skinIndices.push(skinIndices[i].clone());\n      }\n      const lineDistances = source.lineDistances;\n      for (let i = 0, il = lineDistances.length; i < il; i++) {\n        this.lineDistances.push(lineDistances[i]);\n      }\n      const boundingBox = source.boundingBox;\n      if (boundingBox !== null) {\n        this.boundingBox = boundingBox.clone();\n      }\n      const boundingSphere = source.boundingSphere;\n      if (boundingSphere !== null) {\n        this.boundingSphere = boundingSphere.clone();\n      }\n      this.elementsNeedUpdate = source.elementsNeedUpdate;\n      this.verticesNeedUpdate = source.verticesNeedUpdate;\n      this.uvsNeedUpdate = source.uvsNeedUpdate;\n      this.normalsNeedUpdate = source.normalsNeedUpdate;\n      this.colorsNeedUpdate = source.colorsNeedUpdate;\n      this.lineDistancesNeedUpdate = source.lineDistancesNeedUpdate;\n      this.groupsNeedUpdate = source.groupsNeedUpdate;\n      return this;\n    }\n    toBufferGeometry() {\n      const geometry = new DirectGeometry().fromGeometry(this);\n      const buffergeometry = new BufferGeometry();\n      const positions = new Float32Array(geometry.vertices.length * 3);\n      buffergeometry.setAttribute(\"position\", new BufferAttribute(positions, 3).copyVector3sArray(geometry.vertices));\n      if (geometry.normals.length > 0) {\n        const normals = new Float32Array(geometry.normals.length * 3);\n        buffergeometry.setAttribute(\"normal\", new BufferAttribute(normals, 3).copyVector3sArray(geometry.normals));\n      }\n      if (geometry.colors.length > 0) {\n        const colors = new Float32Array(geometry.colors.length * 3);\n        buffergeometry.setAttribute(\"color\", new BufferAttribute(colors, 3).copyColorsArray(geometry.colors));\n      }\n      if (geometry.uvs.length > 0) {\n        const uvs = new Float32Array(geometry.uvs.length * 2);\n        buffergeometry.setAttribute(\"uv\", new BufferAttribute(uvs, 2).copyVector2sArray(geometry.uvs));\n      }\n      if (geometry.uvs2.length > 0) {\n        const uvs2 = new Float32Array(geometry.uvs2.length * 2);\n        buffergeometry.setAttribute(\"uv2\", new BufferAttribute(uvs2, 2).copyVector2sArray(geometry.uvs2));\n      }\n      buffergeometry.groups = geometry.groups;\n      for (let name in geometry.morphTargets) {\n        const array = [];\n        const morphTargets = geometry.morphTargets[name];\n        for (let i = 0, l = morphTargets.length; i < l; i++) {\n          const morphTarget = morphTargets[i];\n          const attribute = new Float32BufferAttribute(morphTarget.data.length * 3, 3);\n          attribute.name = morphTarget.name;\n          array.push(attribute.copyVector3sArray(morphTarget.data));\n        }\n        buffergeometry.morphAttributes[name] = array;\n      }\n      if (geometry.skinIndices.length > 0) {\n        const skinIndices = new Float32BufferAttribute(geometry.skinIndices.length * 4, 4);\n        buffergeometry.setAttribute(\"skinIndex\", skinIndices.copyVector4sArray(geometry.skinIndices));\n      }\n      if (geometry.skinWeights.length > 0) {\n        const skinWeights = new Float32BufferAttribute(geometry.skinWeights.length * 4, 4);\n        buffergeometry.setAttribute(\"skinWeight\", skinWeights.copyVector4sArray(geometry.skinWeights));\n      }\n      if (geometry.boundingSphere !== null) {\n        buffergeometry.boundingSphere = geometry.boundingSphere.clone();\n      }\n      if (geometry.boundingBox !== null) {\n        buffergeometry.boundingBox = geometry.boundingBox.clone();\n      }\n      return buffergeometry;\n    }\n    computeTangents() {\n      console.error(\"THREE.Geometry: .computeTangents() has been removed.\");\n    }\n    computeLineDistances() {\n      console.error(\n        \"THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.\"\n      );\n    }\n    applyMatrix(matrix) {\n      console.warn(\"THREE.Geometry: .applyMatrix() has been renamed to .applyMatrix4().\");\n      return this.applyMatrix4(matrix);\n    }\n    dispose() {\n      this.dispatchEvent({ type: \"dispose\" });\n    }\n  }\n  return Geometry2;\n})();\nclass DirectGeometry {\n  constructor() {\n    this.vertices = [];\n    this.normals = [];\n    this.colors = [];\n    this.uvs = [];\n    this.uvs2 = [];\n    this.groups = [];\n    this.morphTargets = {};\n    this.skinWeights = [];\n    this.skinIndices = [];\n    this.boundingBox = null;\n    this.boundingSphere = null;\n    this.verticesNeedUpdate = false;\n    this.normalsNeedUpdate = false;\n    this.colorsNeedUpdate = false;\n    this.uvsNeedUpdate = false;\n    this.groupsNeedUpdate = false;\n  }\n  computeGroups(geometry) {\n    const groups = [];\n    let group, i;\n    let materialIndex = void 0;\n    const faces = geometry.faces;\n    for (i = 0; i < faces.length; i++) {\n      const face = faces[i];\n      if (face.materialIndex !== materialIndex) {\n        materialIndex = face.materialIndex;\n        if (group !== void 0) {\n          group.count = i * 3 - group.start;\n          groups.push(group);\n        }\n        group = {\n          start: i * 3,\n          materialIndex\n        };\n      }\n    }\n    if (group !== void 0) {\n      group.count = i * 3 - group.start;\n      groups.push(group);\n    }\n    this.groups = groups;\n  }\n  fromGeometry(geometry) {\n    const faces = geometry.faces;\n    const vertices = geometry.vertices;\n    const faceVertexUvs = geometry.faceVertexUvs;\n    const hasFaceVertexUv = faceVertexUvs[0] && faceVertexUvs[0].length > 0;\n    const hasFaceVertexUv2 = faceVertexUvs[1] && faceVertexUvs[1].length > 0;\n    const morphTargets = geometry.morphTargets;\n    const morphTargetsLength = morphTargets.length;\n    let morphTargetsPosition;\n    if (morphTargetsLength > 0) {\n      morphTargetsPosition = [];\n      for (let i = 0; i < morphTargetsLength; i++) {\n        morphTargetsPosition[i] = {\n          name: morphTargets[i].name,\n          data: []\n        };\n      }\n      this.morphTargets.position = morphTargetsPosition;\n    }\n    const morphNormals = geometry.morphNormals;\n    const morphNormalsLength = morphNormals.length;\n    let morphTargetsNormal;\n    if (morphNormalsLength > 0) {\n      morphTargetsNormal = [];\n      for (let i = 0; i < morphNormalsLength; i++) {\n        morphTargetsNormal[i] = {\n          name: morphNormals[i].name,\n          data: []\n        };\n      }\n      this.morphTargets.normal = morphTargetsNormal;\n    }\n    const skinIndices = geometry.skinIndices;\n    const skinWeights = geometry.skinWeights;\n    const hasSkinIndices = skinIndices.length === vertices.length;\n    const hasSkinWeights = skinWeights.length === vertices.length;\n    if (vertices.length > 0 && faces.length === 0) {\n      console.error(\"THREE.DirectGeometry: Faceless geometries are not supported.\");\n    }\n    for (let i = 0; i < faces.length; i++) {\n      const face = faces[i];\n      this.vertices.push(vertices[face.a], vertices[face.b], vertices[face.c]);\n      const vertexNormals = face.vertexNormals;\n      if (vertexNormals.length === 3) {\n        this.normals.push(vertexNormals[0], vertexNormals[1], vertexNormals[2]);\n      } else {\n        const normal = face.normal;\n        this.normals.push(normal, normal, normal);\n      }\n      const vertexColors = face.vertexColors;\n      if (vertexColors.length === 3) {\n        this.colors.push(vertexColors[0], vertexColors[1], vertexColors[2]);\n      } else {\n        const color = face.color;\n        this.colors.push(color, color, color);\n      }\n      if (hasFaceVertexUv === true) {\n        const vertexUvs = faceVertexUvs[0][i];\n        if (vertexUvs !== void 0) {\n          this.uvs.push(vertexUvs[0], vertexUvs[1], vertexUvs[2]);\n        } else {\n          console.warn(\"THREE.DirectGeometry.fromGeometry(): Undefined vertexUv \", i);\n          this.uvs.push(new Vector2(), new Vector2(), new Vector2());\n        }\n      }\n      if (hasFaceVertexUv2 === true) {\n        const vertexUvs = faceVertexUvs[1][i];\n        if (vertexUvs !== void 0) {\n          this.uvs2.push(vertexUvs[0], vertexUvs[1], vertexUvs[2]);\n        } else {\n          console.warn(\"THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 \", i);\n          this.uvs2.push(new Vector2(), new Vector2(), new Vector2());\n        }\n      }\n      for (let j = 0; j < morphTargetsLength; j++) {\n        const morphTarget = morphTargets[j].vertices;\n        morphTargetsPosition[j].data.push(morphTarget[face.a], morphTarget[face.b], morphTarget[face.c]);\n      }\n      for (let j = 0; j < morphNormalsLength; j++) {\n        const morphNormal = morphNormals[j].vertexNormals[i];\n        morphTargetsNormal[j].data.push(morphNormal.a, morphNormal.b, morphNormal.c);\n      }\n      if (hasSkinIndices) {\n        this.skinIndices.push(skinIndices[face.a], skinIndices[face.b], skinIndices[face.c]);\n      }\n      if (hasSkinWeights) {\n        this.skinWeights.push(skinWeights[face.a], skinWeights[face.b], skinWeights[face.c]);\n      }\n    }\n    this.computeGroups(geometry);\n    this.verticesNeedUpdate = geometry.verticesNeedUpdate;\n    this.normalsNeedUpdate = geometry.normalsNeedUpdate;\n    this.colorsNeedUpdate = geometry.colorsNeedUpdate;\n    this.uvsNeedUpdate = geometry.uvsNeedUpdate;\n    this.groupsNeedUpdate = geometry.groupsNeedUpdate;\n    if (geometry.boundingSphere !== null) {\n      this.boundingSphere = geometry.boundingSphere.clone();\n    }\n    if (geometry.boundingBox !== null) {\n      this.boundingBox = geometry.boundingBox.clone();\n    }\n    return this;\n  }\n}\nclass Face3 {\n  constructor(a, b, c, normal, color, materialIndex = 0) {\n    this.a = a;\n    this.b = b;\n    this.c = c;\n    this.normal = normal && normal.isVector3 ? normal : new Vector3();\n    this.vertexNormals = Array.isArray(normal) ? normal : [];\n    this.color = color && color.isColor ? color : new Color();\n    this.vertexColors = Array.isArray(color) ? color : [];\n    this.materialIndex = materialIndex;\n  }\n  clone() {\n    return new this.constructor().copy(this);\n  }\n  copy(source) {\n    this.a = source.a;\n    this.b = source.b;\n    this.c = source.c;\n    this.normal.copy(source.normal);\n    this.color.copy(source.color);\n    this.materialIndex = source.materialIndex;\n    for (let i = 0, il = source.vertexNormals.length; i < il; i++) {\n      this.vertexNormals[i] = source.vertexNormals[i].clone();\n    }\n    for (let i = 0, il = source.vertexColors.length; i < il; i++) {\n      this.vertexColors[i] = source.vertexColors[i].clone();\n    }\n    return this;\n  }\n}\nexport {\n  Face3,\n  Geometry\n};\n//# sourceMappingURL=Geometry.js.map\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 17399, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17405, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/index.js"],"sourcesContent":["import { MD2CharacterComplex } from \"./misc/MD2CharacterComplex.js\";\nimport { ConvexObjectBreaker } from \"./misc/ConvexObjectBreaker.js\";\nimport { MorphBlendMesh } from \"./misc/MorphBlendMesh.js\";\nimport { GPUComputationRenderer } from \"./misc/GPUComputationRenderer.js\";\nimport { Gyroscope } from \"./misc/Gyroscope.js\";\nimport { MorphAnimMesh } from \"./misc/MorphAnimMesh.js\";\nimport { RollerCoasterGeometry, RollerCoasterLiftersGeometry, RollerCoasterShadowGeometry, SkyGeometry, TreesGeometry } from \"./misc/RollerCoaster.js\";\nimport { Timer } from \"./misc/Timer.js\";\nimport { getErrorMessage, getWebGL2ErrorMessage, getWebGLErrorMessage, isWebGL2Available, isWebGLAvailable } from \"./misc/WebGL.js\";\nimport { MD2Character } from \"./misc/MD2Character.js\";\nimport { VolumeSlice } from \"./misc/VolumeSlice.js\";\nimport { TubePainter } from \"./misc/TubePainter.js\";\nimport { Volume } from \"./misc/Volume.js\";\nimport { ProgressiveLightMap } from \"./misc/ProgressiveLightmap.js\";\nimport { CSS2DObject, CSS2DRenderer } from \"./renderers/CSS2DRenderer.js\";\nimport { CSS3DObject, CSS3DRenderer, CSS3DSprite } from \"./renderers/CSS3DRenderer.js\";\nimport { Projector, RenderableFace, RenderableLine, RenderableObject, RenderableSprite, RenderableVertex } from \"./renderers/Projector.js\";\nimport { SVGObject, SVGRenderer } from \"./renderers/SVGRenderer.js\";\nimport { FlakesTexture } from \"./textures/FlakesTexture.js\";\nimport { Flow, InstancedFlow, getUniforms, initSplineTexture, modifyShader, updateSplineTexture } from \"./modifiers/CurveModifier.js\";\nimport { SimplifyModifier } from \"./modifiers/SimplifyModifier.js\";\nimport { EdgeSplitModifier } from \"./modifiers/EdgeSplitModifier.js\";\nimport { TessellateModifier } from \"./modifiers/TessellateModifier.js\";\nimport { GLTFExporter } from \"./exporters/GLTFExporter.js\";\nimport { USDZExporter } from \"./exporters/USDZExporter.js\";\nimport { PLYExporter } from \"./exporters/PLYExporter.js\";\nimport { DRACOExporter } from \"./exporters/DRACOExporter.js\";\nimport { ColladaExporter } from \"./exporters/ColladaExporter.js\";\nimport { MMDExporter } from \"./exporters/MMDExporter.js\";\nimport { STLExporter } from \"./exporters/STLExporter.js\";\nimport { OBJExporter } from \"./exporters/OBJExporter.js\";\nimport { RoomEnvironment } from \"./environments/RoomEnvironment.js\";\nimport { AnimationClipCreator } from \"./animation/AnimationClipCreator.js\";\nimport { CCDIKHelper, CCDIKSolver } from \"./animation/CCDIKSolver.js\";\nimport { MMDPhysics } from \"./animation/MMDPhysics.js\";\nimport { MMDAnimationHelper } from \"./animation/MMDAnimationHelper.js\";\nimport { BatchedMesh } from \"./objects/BatchedMesh.js\";\nimport { Reflector } from \"./objects/Reflector.js\";\nimport { Refractor } from \"./objects/Refractor.js\";\nimport { ShadowMesh } from \"./objects/ShadowMesh.js\";\nimport { Lensflare, LensflareElement } from \"./objects/Lensflare.js\";\nimport { Water } from \"./objects/Water.js\";\nimport { MarchingCubes, edgeTable, triTable } from \"./objects/MarchingCubes.js\";\nimport { LightningStorm } from \"./objects/LightningStorm.js\";\nimport { ReflectorRTT } from \"./objects/ReflectorRTT.js\";\nimport { ReflectorForSSRPass } from \"./objects/ReflectorForSSRPass.js\";\nimport { Sky } from \"./objects/Sky.js\";\nimport { Water2 } from \"./objects/Water2.js\";\nimport { GroundProjectedEnv } from \"./objects/GroundProjectedEnv.js\";\nimport { SceneUtils } from \"./utils/SceneUtils.js\";\nimport { UVsDebug } from \"./utils/UVsDebug.js\";\nimport { GeometryUtils } from \"./utils/GeometryUtils.js\";\nimport { RoughnessMipmapper } from \"./utils/RoughnessMipmapper.js\";\nimport { SkeletonUtils } from \"./utils/SkeletonUtils.js\";\nimport { ShadowMapViewer } from \"./utils/ShadowMapViewer.js\";\nimport { computeMorphedAttributes, estimateBytesUsed, interleaveAttributes, mergeBufferAttributes, mergeBufferGeometries, mergeVertices, toCreasedNormals, toTrianglesDrawMode } from \"./utils/BufferGeometryUtils.js\";\nimport { GeometryCompressionUtils, PackedPhongMaterial } from \"./utils/GeometryCompressionUtils.js\";\nimport { CinematicCamera } from \"./cameras/CinematicCamera.js\";\nimport { ConvexHull, Face, HalfEdge, VertexList, VertexNode } from \"./math/ConvexHull.js\";\nimport { MeshSurfaceSampler } from \"./math/MeshSurfaceSampler.js\";\nimport { SimplexNoise } from \"./math/SimplexNoise.js\";\nimport { OBB } from \"./math/OBB.js\";\nimport { Capsule } from \"./math/Capsule.js\";\nimport { ColorConverter } from \"./math/ColorConverter.js\";\nimport { ImprovedNoise } from \"./math/ImprovedNoise.js\";\nimport { Octree } from \"./math/Octree.js\";\nimport { ColorMapKeywords, Lut } from \"./math/Lut.js\";\nimport { CameraControls, MapControlsExp, OrbitControlsExp, STATE, TrackballControlsExp } from \"./controls/experimental/CameraControls.js\";\nimport { FirstPersonControls } from \"./controls/FirstPersonControls.js\";\nimport { TransformControls, TransformControlsGizmo, TransformControlsPlane } from \"./controls/TransformControls.js\";\nimport { DragControls } from \"./controls/DragControls.js\";\nimport { PointerLockControls } from \"./controls/PointerLockControls.js\";\nimport { DeviceOrientationControls } from \"./controls/DeviceOrientationControls.js\";\nimport { TrackballControls } from \"./controls/TrackballControls.js\";\nimport { MapControls, OrbitControls } from \"./controls/OrbitControls.js\";\nimport { ArcballControls } from \"./controls/ArcballControls.js\";\nimport { FlyControls } from \"./controls/FlyControls.js\";\nimport { LUTPass } from \"./postprocessing/LUTPass.js\";\nimport { ClearPass } from \"./postprocessing/ClearPass.js\";\nimport { GlitchPass } from \"./postprocessing/GlitchPass.js\";\nimport { HalftonePass } from \"./postprocessing/HalftonePass.js\";\nimport { SMAAPass } from \"./postprocessing/SMAAPass.js\";\nimport { FilmPass } from \"./postprocessing/FilmPass.js\";\nimport { OutlinePass } from \"./postprocessing/OutlinePass.js\";\nimport { SSAOPass } from \"./postprocessing/SSAOPass.js\";\nimport { SavePass } from \"./postprocessing/SavePass.js\";\nimport { BokehPass } from \"./postprocessing/BokehPass.js\";\nimport { FullScreenQuad, Pass } from \"./postprocessing/Pass.js\";\nimport { TexturePass } from \"./postprocessing/TexturePass.js\";\nimport { AdaptiveToneMappingPass } from \"./postprocessing/AdaptiveToneMappingPass.js\";\nimport { UnrealBloomPass } from \"./postprocessing/UnrealBloomPass.js\";\nimport { CubeTexturePass } from \"./postprocessing/CubeTexturePass.js\";\nimport { SAOPass } from \"./postprocessing/SAOPass.js\";\nimport { AfterimagePass } from \"./postprocessing/AfterimagePass.js\";\nimport { ClearMaskPass, MaskPass } from \"./postprocessing/MaskPass.js\";\nimport { EffectComposer } from \"./postprocessing/EffectComposer.js\";\nimport { DotScreenPass } from \"./postprocessing/DotScreenPass.js\";\nimport { SSRPass } from \"./postprocessing/SSRPass.js\";\nimport { TAARenderPass } from \"./postprocessing/TAARenderPass.js\";\nimport { ShaderPass } from \"./postprocessing/ShaderPass.js\";\nimport { SSAARenderPass } from \"./postprocessing/SSAARenderPass.js\";\nimport { RenderPass } from \"./postprocessing/RenderPass.js\";\nimport { RenderPixelatedPass } from \"./postprocessing/RenderPixelatedPass.js\";\nimport { BloomPass } from \"./postprocessing/BloomPass.js\";\nimport { WaterPass } from \"./postprocessing/WaterPass.js\";\nimport { ARButton } from \"./webxr/ARButton.js\";\nimport { OculusHandModel } from \"./webxr/OculusHandModel.js\";\nimport { OculusHandPointerModel } from \"./webxr/OculusHandPointerModel.js\";\nimport { createText } from \"./webxr/Text2D.js\";\nimport { VRButton } from \"./webxr/VRButton.js\";\nimport { XRControllerModelFactory } from \"./webxr/XRControllerModelFactory.js\";\nimport { XREstimatedLight } from \"./webxr/XREstimatedLight.js\";\nimport { XRHandMeshModel } from \"./webxr/XRHandMeshModel.js\";\nimport { XRHandModelFactory } from \"./webxr/XRHandModelFactory.js\";\nimport { XRHandPrimitiveModel } from \"./webxr/XRHandPrimitiveModel.js\";\nimport { ParametricGeometries } from \"./geometries/ParametricGeometries.js\";\nimport { ParametricGeometry } from \"./geometries/ParametricGeometry.js\";\nimport { ConvexGeometry } from \"./geometries/ConvexGeometry.js\";\nimport { LightningStrike } from \"./geometries/LightningStrike.js\";\nimport { RoundedBoxGeometry } from \"./geometries/RoundedBoxGeometry.js\";\nimport { BoxLineGeometry } from \"./geometries/BoxLineGeometry.js\";\nimport { DecalGeometry, DecalVertex } from \"./geometries/DecalGeometry.js\";\nimport { TeapotGeometry } from \"./geometries/TeapotGeometry.js\";\nimport { TextGeometry, TextGeometry as TextGeometry2 } from \"./geometries/TextGeometry.js\";\nimport { CSM } from \"./csm/CSM.js\";\nimport { CSMFrustum } from \"./csm/CSMFrustum.js\";\nimport { CSMHelper } from \"./csm/CSMHelper.js\";\nimport { CSMShader } from \"./csm/CSMShader.js\";\nimport { ACESFilmicToneMappingShader } from \"./shaders/ACESFilmicToneMappingShader.js\";\nimport { AfterimageShader } from \"./shaders/AfterimageShader.js\";\nimport { BasicShader } from \"./shaders/BasicShader.js\";\nimport { BleachBypassShader } from \"./shaders/BleachBypassShader.js\";\nimport { BlendShader } from \"./shaders/BlendShader.js\";\nimport { BokehShader } from \"./shaders/BokehShader.js\";\nimport { BokehDepthShader, BokehShader2 } from \"./shaders/BokehShader2.js\";\nimport { BrightnessContrastShader } from \"./shaders/BrightnessContrastShader.js\";\nimport { ColorCorrectionShader } from \"./shaders/ColorCorrectionShader.js\";\nimport { ColorifyShader } from \"./shaders/ColorifyShader.js\";\nimport { ConvolutionShader } from \"./shaders/ConvolutionShader.js\";\nimport { CopyShader } from \"./shaders/CopyShader.js\";\nimport { DOFMipMapShader } from \"./shaders/DOFMipMapShader.js\";\nimport { BlurShaderUtils, DepthLimitedBlurShader } from \"./shaders/DepthLimitedBlurShader.js\";\nimport { DigitalGlitch } from \"./shaders/DigitalGlitch.js\";\nimport { DotScreenShader } from \"./shaders/DotScreenShader.js\";\nimport { FXAAShader } from \"./shaders/FXAAShader.js\";\nimport { FilmShader } from \"./shaders/FilmShader.js\";\nimport { FocusShader } from \"./shaders/FocusShader.js\";\nimport { FreiChenShader } from \"./shaders/FreiChenShader.js\";\nimport { FresnelShader } from \"./shaders/FresnelShader.js\";\nimport { GammaCorrectionShader } from \"./shaders/GammaCorrectionShader.js\";\nimport { GodRaysCombineShader, GodRaysDepthMaskShader, GodRaysFakeSunShader, GodRaysGenerateShader } from \"./shaders/GodRaysShader.js\";\nimport { HalftoneShader } from \"./shaders/HalftoneShader.js\";\nimport { HorizontalBlurShader } from \"./shaders/HorizontalBlurShader.js\";\nimport { HorizontalTiltShiftShader } from \"./shaders/HorizontalTiltShiftShader.js\";\nimport { HueSaturationShader } from \"./shaders/HueSaturationShader.js\";\nimport { KaleidoShader } from \"./shaders/KaleidoShader.js\";\nimport { LuminosityHighPassShader } from \"./shaders/LuminosityHighPassShader.js\";\nimport { LuminosityShader } from \"./shaders/LuminosityShader.js\";\nimport { MirrorShader } from \"./shaders/MirrorShader.js\";\nimport { NormalMapShader } from \"./shaders/NormalMapShader.js\";\nimport { ParallaxShader } from \"./shaders/ParallaxShader.js\";\nimport { PixelShader } from \"./shaders/PixelShader.js\";\nimport { RGBShiftShader } from \"./shaders/RGBShiftShader.js\";\nimport { SAOShader } from \"./shaders/SAOShader.js\";\nimport { SMAABlendShader, SMAAEdgesShader, SMAAWeightsShader } from \"./shaders/SMAAShader.js\";\nimport { SSAOBlurShader, SSAODepthShader, SSAOShader } from \"./shaders/SSAOShader.js\";\nimport { SSRBlurShader, SSRDepthShader, SSRShader } from \"./shaders/SSRShader.js\";\nimport { SepiaShader } from \"./shaders/SepiaShader.js\";\nimport { SobelOperatorShader } from \"./shaders/SobelOperatorShader.js\";\nimport { SubsurfaceScatteringShader } from \"./shaders/SubsurfaceScatteringShader.js\";\nimport { TechnicolorShader } from \"./shaders/TechnicolorShader.js\";\nimport { ToneMapShader } from \"./shaders/ToneMapShader.js\";\nimport { ToonShader1, ToonShader2, ToonShaderDotted, ToonShaderHatching } from \"./shaders/ToonShader.js\";\nimport { TriangleBlurShader } from \"./shaders/TriangleBlurShader.js\";\nimport { UnpackDepthRGBAShader } from \"./shaders/UnpackDepthRGBAShader.js\";\nimport { VerticalBlurShader } from \"./shaders/VerticalBlurShader.js\";\nimport { VerticalTiltShiftShader } from \"./shaders/VerticalTiltShiftShader.js\";\nimport { VignetteShader } from \"./shaders/VignetteShader.js\";\nimport { VolumeRenderShader1 } from \"./shaders/VolumeShader.js\";\nimport { WaterRefractionShader } from \"./shaders/WaterRefractionShader.js\";\nimport { HTMLMesh } from \"./interactive/HTMLMesh.js\";\nimport { InteractiveGroup } from \"./interactive/InteractiveGroup.js\";\nimport { SelectionHelper } from \"./interactive/SelectionHelper.js\";\nimport { SelectionBox } from \"./interactive/SelectionBox.js\";\nimport { AmmoPhysics } from \"./physics/AmmoPhysics.js\";\nimport { ParallaxBarrierEffect } from \"./effects/ParallaxBarrierEffect.js\";\nimport { PeppersGhostEffect } from \"./effects/PeppersGhostEffect.js\";\nimport { OutlineEffect } from \"./effects/OutlineEffect.js\";\nimport { AnaglyphEffect } from \"./effects/AnaglyphEffect.js\";\nimport { AsciiEffect } from \"./effects/AsciiEffect.js\";\nimport { StereoEffect } from \"./effects/StereoEffect.js\";\nimport { FBXLoader } from \"./loaders/FBXLoader.js\";\nimport { Font, FontLoader } from \"./loaders/FontLoader.js\";\nimport { TGALoader } from \"./loaders/TGALoader.js\";\nimport { LUTCubeLoader } from \"./loaders/LUTCubeLoader.js\";\nimport { NRRDLoader } from \"./loaders/NRRDLoader.js\";\nimport { STLLoader } from \"./loaders/STLLoader.js\";\nimport { MTLLoader } from \"./loaders/MTLLoader.js\";\nimport { XLoader } from \"./loaders/XLoader.js\";\nimport { BVHLoader } from \"./loaders/BVHLoader.js\";\nimport { KMZLoader } from \"./loaders/KMZLoader.js\";\nimport { VRMLoader } from \"./loaders/VRMLoader.js\";\nimport { VRMLLoader } from \"./loaders/VRMLLoader.js\";\nimport { KTX2Loader } from \"./loaders/KTX2Loader.js\";\nimport { LottieLoader } from \"./loaders/LottieLoader.js\";\nimport { TTFLoader } from \"./loaders/TTFLoader.js\";\nimport { RGBELoader } from \"./loaders/RGBELoader.js\";\nimport { AssimpLoader } from \"./loaders/AssimpLoader.js\";\nimport { ColladaLoader } from \"./loaders/ColladaLoader.js\";\nimport { MDDLoader } from \"./loaders/MDDLoader.js\";\nimport { EXRLoader } from \"./loaders/EXRLoader.js\";\nimport { ThreeMFLoader } from \"./loaders/3MFLoader.js\";\nimport { XYZLoader } from \"./loaders/XYZLoader.js\";\nimport { VTKLoader } from \"./loaders/VTKLoader.js\";\nimport { LUT3dlLoader } from \"./loaders/LUT3dlLoader.js\";\nimport { DDSLoader } from \"./loaders/DDSLoader.js\";\nimport { PVRLoader } from \"./loaders/PVRLoader.js\";\nimport { GCodeLoader } from \"./loaders/GCodeLoader.js\";\nimport { BasisTextureLoader } from \"./loaders/BasisTextureLoader.js\";\nimport { TDSLoader } from \"./loaders/TDSLoader.js\";\nimport { LDrawLoader } from \"./loaders/LDrawLoader.js\";\nimport { GLTFLoader } from \"./loaders/GLTFLoader.js\";\nimport { SVGLoader } from \"./loaders/SVGLoader.js\";\nimport { Rhino3dmLoader } from \"./loaders/3DMLoader.js\";\nimport { OBJLoader } from \"./loaders/OBJLoader.js\";\nimport { AMFLoader } from \"./loaders/AMFLoader.js\";\nimport { MMDLoader } from \"./loaders/MMDLoader.js\";\nimport { MD2Loader } from \"./loaders/MD2Loader.js\";\nimport { KTXLoader } from \"./loaders/KTXLoader.js\";\nimport { TiltLoader } from \"./loaders/TiltLoader.js\";\nimport { DRACOLoader } from \"./loaders/DRACOLoader.js\";\nimport { HDRCubeTextureLoader } from \"./loaders/HDRCubeTextureLoader.js\";\nimport { PDBLoader } from \"./loaders/PDBLoader.js\";\nimport { PRWMLoader } from \"./loaders/PRWMLoader.js\";\nimport { RGBMLoader } from \"./loaders/RGBMLoader.js\";\nimport { VOXData3DTexture, VOXLoader, VOXMesh } from \"./loaders/VOXLoader.js\";\nimport { PCDLoader } from \"./loaders/PCDLoader.js\";\nimport { LWOLoader } from \"./loaders/LWOLoader.js\";\nimport { PLYLoader } from \"./loaders/PLYLoader.js\";\nimport { LineSegmentsGeometry } from \"./lines/LineSegmentsGeometry.js\";\nimport { LineGeometry } from \"./lines/LineGeometry.js\";\nimport { Wireframe } from \"./lines/Wireframe.js\";\nimport { WireframeGeometry2 } from \"./lines/WireframeGeometry2.js\";\nimport { Line2 } from \"./lines/Line2.js\";\nimport { LineMaterial } from \"./lines/LineMaterial.js\";\nimport { LineSegments2 } from \"./lines/LineSegments2.js\";\nimport { LightProbeHelper } from \"./helpers/LightProbeHelper.js\";\nimport { RaycasterHelper } from \"./helpers/RaycasterHelper.js\";\nimport { VertexTangentsHelper } from \"./helpers/VertexTangentsHelper.js\";\nimport { PositionalAudioHelper } from \"./helpers/PositionalAudioHelper.js\";\nimport { VertexNormalsHelper } from \"./helpers/VertexNormalsHelper.js\";\nimport { RectAreaLightHelper } from \"./helpers/RectAreaLightHelper.js\";\nimport { RectAreaLightUniformsLib } from \"./lights/RectAreaLightUniformsLib.js\";\nimport { LightProbeGenerator } from \"./lights/LightProbeGenerator.js\";\nimport { calcBSplineDerivatives, calcBSplinePoint, calcBasisFunctionDerivatives, calcBasisFunctions, calcKoverI, calcNURBSDerivatives, calcRationalCurveDerivatives, calcSurfacePoint, findSpan } from \"./curves/NURBSUtils.js\";\nimport { NURBSCurve } from \"./curves/NURBSCurve.js\";\nimport { NURBSSurface } from \"./curves/NURBSSurface.js\";\nimport { CinquefoilKnot, DecoratedTorusKnot4a, DecoratedTorusKnot4b, DecoratedTorusKnot5a, DecoratedTorusKnot5c, FigureEightPolynomialKnot, GrannyKnot, HeartCurve, HelixCurve, KnotCurve, TorusKnot, TrefoilKnot, TrefoilPolynomialKnot, VivianiCurve } from \"./curves/CurveExtras.js\";\nimport { Face3, Geometry } from \"./deprecated/Geometry.js\";\nimport { MeshoptDecoder } from \"./libs/MeshoptDecoder.js\";\nimport { MotionController, MotionControllerConstants, fetchProfile, fetchProfilesList } from \"./libs/MotionControllers.js\";\nexport {\n  ACESFilmicToneMappingShader,\n  AMFLoader,\n  ARButton,\n  AdaptiveToneMappingPass,\n  AfterimagePass,\n  AfterimageShader,\n  AmmoPhysics,\n  AnaglyphEffect,\n  AnimationClipCreator,\n  ArcballControls,\n  AsciiEffect,\n  AssimpLoader,\n  BVHLoader,\n  BasicShader,\n  BasisTextureLoader,\n  BatchedMesh,\n  BleachBypassShader,\n  BlendShader,\n  BloomPass,\n  BlurShaderUtils,\n  BokehDepthShader,\n  BokehPass,\n  BokehShader,\n  BokehShader2,\n  BoxLineGeometry,\n  BrightnessContrastShader,\n  CCDIKHelper,\n  CCDIKSolver,\n  CSM,\n  CSMFrustum,\n  CSMHelper,\n  CSMShader,\n  CSS2DObject,\n  CSS2DRenderer,\n  CSS3DObject,\n  CSS3DRenderer,\n  CSS3DSprite,\n  CameraControls,\n  Capsule,\n  CinematicCamera,\n  CinquefoilKnot,\n  ClearMaskPass,\n  ClearPass,\n  ColladaExporter,\n  ColladaLoader,\n  ColorConverter,\n  ColorCorrectionShader,\n  ColorMapKeywords,\n  ColorifyShader,\n  ConvexGeometry,\n  ConvexHull,\n  ConvexObjectBreaker,\n  ConvolutionShader,\n  CopyShader,\n  CubeTexturePass,\n  DDSLoader,\n  DOFMipMapShader,\n  DRACOExporter,\n  DRACOLoader,\n  DecalGeometry,\n  DecalVertex,\n  DecoratedTorusKnot4a,\n  DecoratedTorusKnot4b,\n  DecoratedTorusKnot5a,\n  DecoratedTorusKnot5c,\n  DepthLimitedBlurShader,\n  DeviceOrientationControls,\n  DigitalGlitch,\n  DotScreenPass,\n  DotScreenShader,\n  DragControls,\n  EXRLoader,\n  EdgeSplitModifier,\n  EffectComposer,\n  FBXLoader,\n  FXAAShader,\n  Face,\n  Face3,\n  FigureEightPolynomialKnot,\n  FilmPass,\n  FilmShader,\n  FirstPersonControls,\n  FlakesTexture,\n  Flow,\n  FlyControls,\n  FocusShader,\n  Font,\n  FontLoader,\n  FreiChenShader,\n  FresnelShader,\n  FullScreenQuad,\n  GCodeLoader,\n  GLTFExporter,\n  GLTFLoader,\n  GPUComputationRenderer,\n  GammaCorrectionShader,\n  Geometry,\n  GeometryCompressionUtils,\n  GeometryUtils,\n  GlitchPass,\n  GodRaysCombineShader,\n  GodRaysDepthMaskShader,\n  GodRaysFakeSunShader,\n  GodRaysGenerateShader,\n  GrannyKnot,\n  GroundProjectedEnv,\n  Gyroscope,\n  HDRCubeTextureLoader,\n  HTMLMesh,\n  HalfEdge,\n  HalftonePass,\n  HalftoneShader,\n  HeartCurve,\n  HelixCurve,\n  HorizontalBlurShader,\n  HorizontalTiltShiftShader,\n  HueSaturationShader,\n  ImprovedNoise,\n  InstancedFlow,\n  InteractiveGroup,\n  KMZLoader,\n  KTX2Loader,\n  KTXLoader,\n  KaleidoShader,\n  KnotCurve,\n  LDrawLoader,\n  LUT3dlLoader,\n  LUTCubeLoader,\n  LUTPass,\n  LWOLoader,\n  Lensflare,\n  LensflareElement,\n  LightProbeGenerator,\n  LightProbeHelper,\n  LightningStorm,\n  LightningStrike,\n  Line2,\n  LineGeometry,\n  LineMaterial,\n  LineSegments2,\n  LineSegmentsGeometry,\n  LottieLoader,\n  LuminosityHighPassShader,\n  LuminosityShader,\n  Lut,\n  MD2Character,\n  MD2CharacterComplex,\n  MD2Loader,\n  MDDLoader,\n  MMDAnimationHelper,\n  MMDExporter,\n  MMDLoader,\n  MMDPhysics,\n  MTLLoader,\n  MapControls,\n  MapControlsExp,\n  MarchingCubes,\n  MaskPass,\n  MeshSurfaceSampler,\n  MeshoptDecoder,\n  MirrorShader,\n  MorphAnimMesh,\n  MorphBlendMesh,\n  MotionController,\n  MotionControllerConstants,\n  NRRDLoader,\n  NURBSCurve,\n  NURBSSurface,\n  NormalMapShader,\n  OBB,\n  OBJExporter,\n  OBJLoader,\n  Octree,\n  OculusHandModel,\n  OculusHandPointerModel,\n  OrbitControls,\n  OrbitControlsExp,\n  OutlineEffect,\n  OutlinePass,\n  PCDLoader,\n  PDBLoader,\n  PLYExporter,\n  PLYLoader,\n  PRWMLoader,\n  PVRLoader,\n  PackedPhongMaterial,\n  ParallaxBarrierEffect,\n  ParallaxShader,\n  ParametricGeometries,\n  ParametricGeometry,\n  Pass,\n  PeppersGhostEffect,\n  PixelShader,\n  PointerLockControls,\n  PositionalAudioHelper,\n  ProgressiveLightMap,\n  Projector,\n  RGBELoader,\n  RGBMLoader,\n  RGBShiftShader,\n  RaycasterHelper,\n  RectAreaLightHelper,\n  RectAreaLightUniformsLib,\n  Reflector,\n  ReflectorForSSRPass,\n  ReflectorRTT,\n  Refractor,\n  RenderPass,\n  RenderPixelatedPass,\n  RenderableFace,\n  RenderableLine,\n  RenderableObject,\n  RenderableSprite,\n  RenderableVertex,\n  Rhino3dmLoader,\n  RollerCoasterGeometry,\n  RollerCoasterLiftersGeometry,\n  RollerCoasterShadowGeometry,\n  RoomEnvironment,\n  RoughnessMipmapper,\n  RoundedBoxGeometry,\n  SAOPass,\n  SAOShader,\n  SMAABlendShader,\n  SMAAEdgesShader,\n  SMAAPass,\n  SMAAWeightsShader,\n  SSAARenderPass,\n  SSAOBlurShader,\n  SSAODepthShader,\n  SSAOPass,\n  SSAOShader,\n  SSRBlurShader,\n  SSRDepthShader,\n  SSRPass,\n  SSRShader,\n  STATE,\n  STLExporter,\n  STLLoader,\n  SVGLoader,\n  SVGObject,\n  SVGRenderer,\n  SavePass,\n  SceneUtils,\n  SelectionBox,\n  SelectionHelper,\n  SepiaShader,\n  ShaderPass,\n  ShadowMapViewer,\n  ShadowMesh,\n  SimplexNoise,\n  SimplifyModifier,\n  SkeletonUtils,\n  Sky,\n  SkyGeometry,\n  SobelOperatorShader,\n  StereoEffect,\n  SubsurfaceScatteringShader,\n  TAARenderPass,\n  TDSLoader,\n  TGALoader,\n  TTFLoader,\n  TeapotGeometry,\n  TechnicolorShader,\n  TessellateModifier,\n  TextGeometry as TextBufferGeometry,\n  TextGeometry2 as TextGeometry,\n  TexturePass,\n  ThreeMFLoader,\n  TiltLoader,\n  Timer,\n  ToneMapShader,\n  ToonShader1,\n  ToonShader2,\n  ToonShaderDotted,\n  ToonShaderHatching,\n  TorusKnot,\n  TrackballControls,\n  TrackballControlsExp,\n  TransformControls,\n  TransformControlsGizmo,\n  TransformControlsPlane,\n  TreesGeometry,\n  TrefoilKnot,\n  TrefoilPolynomialKnot,\n  TriangleBlurShader,\n  TubePainter,\n  USDZExporter,\n  UVsDebug,\n  UnpackDepthRGBAShader,\n  UnrealBloomPass,\n  VOXData3DTexture,\n  VOXLoader,\n  VOXMesh,\n  VRButton,\n  VRMLLoader,\n  VRMLoader,\n  VTKLoader,\n  VertexList,\n  VertexNode,\n  VertexNormalsHelper,\n  VertexTangentsHelper,\n  VerticalBlurShader,\n  VerticalTiltShiftShader,\n  VignetteShader,\n  VivianiCurve,\n  Volume,\n  VolumeRenderShader1,\n  VolumeSlice,\n  Water,\n  Water2,\n  WaterPass,\n  WaterRefractionShader,\n  Wireframe,\n  WireframeGeometry2,\n  XLoader,\n  XRControllerModelFactory,\n  XREstimatedLight,\n  XRHandMeshModel,\n  XRHandModelFactory,\n  XRHandPrimitiveModel,\n  XYZLoader,\n  calcBSplineDerivatives,\n  calcBSplinePoint,\n  calcBasisFunctionDerivatives,\n  calcBasisFunctions,\n  calcKoverI,\n  calcNURBSDerivatives,\n  calcRationalCurveDerivatives,\n  calcSurfacePoint,\n  computeMorphedAttributes,\n  createText,\n  edgeTable,\n  estimateBytesUsed,\n  fetchProfile,\n  fetchProfilesList,\n  findSpan,\n  getErrorMessage,\n  getUniforms,\n  getWebGL2ErrorMessage,\n  getWebGLErrorMessage,\n  initSplineTexture,\n  interleaveAttributes,\n  isWebGL2Available,\n  isWebGLAvailable,\n  mergeBufferAttributes,\n  mergeBufferGeometries,\n  mergeVertices,\n  modifyShader,\n  toCreasedNormals,\n  toTrianglesDrawMode,\n  triTable,\n  updateSplineTexture\n};\n//# sourceMappingURL=index.js.map\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAwmBA,iCAAiC","ignoreList":[0]}},
    {"offset": {"line": 17669, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}