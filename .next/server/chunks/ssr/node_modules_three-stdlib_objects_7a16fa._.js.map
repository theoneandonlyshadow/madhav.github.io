{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/objects/BatchedMesh.js"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nimport { Mesh, BufferGeometry, MathUtils, DataTexture, RGBAFormat, FloatType, BufferAttribute, Matrix4 } from \"three\";\nconst ID_ATTR_NAME = \"_batch_id_\";\nconst _identityMatrix = /* @__PURE__ */ new Matrix4();\nconst _zeroScaleMatrix = /* @__PURE__ */ (() => new Matrix4().set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1))();\nconst batchingParsVertex = (\n  /* glsl */\n  `\n#ifdef BATCHING\n\tattribute float ${ID_ATTR_NAME};\n\tuniform highp sampler2D batchingTexture;\n\tmat4 getBatchingMatrix( const in float i ) {\n\n\t\tint size = textureSize( batchingTexture, 0 ).x;\n\t\tint j = int( i ) * 4;\n\t\tint x = j % size;\n\t\tint y = j / size;\n\t\tvec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );\n\t\tvec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );\n\t\tvec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );\n\t\tvec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );\n\t\treturn mat4( v1, v2, v3, v4 );\n\n\t}\n#endif\n`\n);\nconst batchingbaseVertex = (\n  /* glsl */\n  `\n#ifdef BATCHING\n\tmat4 batchingMatrix = getBatchingMatrix( ${ID_ATTR_NAME} );\n#endif\n`\n);\nconst batchingnormalVertex = (\n  /* glsl */\n  `\n#ifdef BATCHING\n\tobjectNormal = vec4( batchingMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( batchingMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif\n`\n);\nconst batchingVertex = (\n  /* glsl */\n  `\n#ifdef BATCHING\n\ttransformed = ( batchingMatrix * vec4( transformed, 1.0 ) ).xyz;\n#endif\n`\n);\nfunction copyAttributeData(src, target, targetOffset = 0) {\n  const itemSize = target.itemSize;\n  if (src.isInterleavedBufferAttribute || src.array.constructor !== target.array.constructor) {\n    const vertexCount = src.count;\n    for (let i = 0; i < vertexCount; i++) {\n      for (let c = 0; c < itemSize; c++) {\n        target.setComponent(i + targetOffset, c, src.getComponent(i, c));\n      }\n    }\n  } else {\n    target.array.set(src.array, targetOffset * itemSize);\n  }\n  target.needsUpdate = true;\n}\nclass BatchedMesh extends Mesh {\n  constructor(maxGeometryCount, maxVertexCount, maxIndexCount = maxVertexCount * 2, material) {\n    super(new BufferGeometry(), material);\n    __publicField(this, \"_vertexStarts\");\n    __publicField(this, \"_vertexCounts\");\n    __publicField(this, \"_indexStarts\");\n    __publicField(this, \"_indexCounts\");\n    __publicField(this, \"_reservedRanges\");\n    __publicField(this, \"_visible\");\n    __publicField(this, \"_active\");\n    __publicField(this, \"_maxGeometryCount\");\n    __publicField(this, \"_maxVertexCount\");\n    __publicField(this, \"_maxIndexCount\");\n    __publicField(this, \"_geometryInitialized\");\n    __publicField(this, \"_geometryCount\");\n    __publicField(this, \"_matrices\");\n    __publicField(this, \"_matricesTexture\");\n    __publicField(this, \"_customUniforms\");\n    this._vertexStarts = [];\n    this._vertexCounts = [];\n    this._indexStarts = [];\n    this._indexCounts = [];\n    this._reservedRanges = [];\n    this._visible = [];\n    this._active = [];\n    this._maxGeometryCount = maxGeometryCount;\n    this._maxVertexCount = maxVertexCount;\n    this._maxIndexCount = maxIndexCount;\n    this._geometryInitialized = false;\n    this._geometryCount = 0;\n    this._matrices = [];\n    this._matricesTexture = null;\n    this.frustumCulled = false;\n    this._customUniforms = {\n      batchingTexture: { value: null }\n    };\n    this._initMatricesTexture();\n    this._initShader();\n    this.onBeforeRender = function() {\n      if (this.material.defines) {\n        this.material.defines.BATCHING = true;\n      }\n    };\n    this.onAfterRender = function() {\n      if (this.material.defines) {\n        this.material.defines.BATCHING = false;\n      }\n    };\n  }\n  _initMatricesTexture() {\n    let size = Math.sqrt(this._maxGeometryCount * 4);\n    size = MathUtils.ceilPowerOfTwo(size);\n    size = Math.max(size, 4);\n    const matricesArray = new Float32Array(size * size * 4);\n    const matricesTexture = new DataTexture(matricesArray, size, size, RGBAFormat, FloatType);\n    this._matricesTexture = matricesTexture;\n    this._customUniforms.batchingTexture.value = this._matricesTexture;\n  }\n  _initShader() {\n    const material = this.material;\n    const currentOnBeforeCompile = material.onBeforeCompile;\n    const customUniforms = this._customUniforms;\n    material.onBeforeCompile = function onBeforeCompile(parameters, renderer) {\n      parameters.vertexShader = parameters.vertexShader.replace(\"#include <skinning_pars_vertex>\", \"#include <skinning_pars_vertex>\\n\" + batchingParsVertex).replace(\"#include <uv_vertex>\", \"#include <uv_vertex>\\n\" + batchingbaseVertex).replace(\"#include <skinnormal_vertex>\", \"#include <skinnormal_vertex>\\n\" + batchingnormalVertex).replace(\"#include <skinning_vertex>\", \"#include <skinning_vertex>\\n\" + batchingVertex);\n      for (const uniformName in customUniforms) {\n        parameters.uniforms[uniformName] = customUniforms[uniformName];\n      }\n      currentOnBeforeCompile.call(this, parameters, renderer);\n    };\n    material.defines = material.defines || {};\n    material.defines.BATCHING = false;\n  }\n  _initializeGeometry(reference) {\n    const geometry = this.geometry;\n    const maxVertexCount = this._maxVertexCount;\n    const maxGeometryCount = this._maxGeometryCount;\n    const maxIndexCount = this._maxIndexCount;\n    if (this._geometryInitialized === false) {\n      for (const attributeName in reference.attributes) {\n        const srcAttribute = reference.getAttribute(attributeName);\n        const { array, itemSize, normalized } = srcAttribute;\n        const dstArray = new array.constructor(maxVertexCount * itemSize);\n        const dstAttribute = new srcAttribute.constructor(dstArray, itemSize, normalized);\n        dstAttribute.setUsage(srcAttribute.usage);\n        geometry.setAttribute(attributeName, dstAttribute);\n      }\n      if (reference.getIndex() !== null) {\n        const indexArray = maxVertexCount > 65536 ? new Uint32Array(maxIndexCount) : new Uint16Array(maxIndexCount);\n        geometry.setIndex(new BufferAttribute(indexArray, 1));\n      }\n      const idArray = maxGeometryCount > 65536 ? new Uint32Array(maxVertexCount) : new Uint16Array(maxVertexCount);\n      geometry.setAttribute(ID_ATTR_NAME, new BufferAttribute(idArray, 1));\n      this._geometryInitialized = true;\n    }\n  }\n  // Make sure the geometry is compatible with the existing combined geometry atributes\n  _validateGeometry(geometry) {\n    if (geometry.getAttribute(ID_ATTR_NAME)) {\n      throw new Error(`BatchedMesh: Geometry cannot use attribute \"${ID_ATTR_NAME}\"`);\n    }\n    const batchGeometry = this.geometry;\n    if (Boolean(geometry.getIndex()) !== Boolean(batchGeometry.getIndex())) {\n      throw new Error('BatchedMesh: All geometries must consistently have \"index\".');\n    }\n    for (const attributeName in batchGeometry.attributes) {\n      if (attributeName === ID_ATTR_NAME) {\n        continue;\n      }\n      if (!geometry.hasAttribute(attributeName)) {\n        throw new Error(\n          `BatchedMesh: Added geometry missing \"${attributeName}\". All geometries must have consistent attributes.`\n        );\n      }\n      const srcAttribute = geometry.getAttribute(attributeName);\n      const dstAttribute = batchGeometry.getAttribute(attributeName);\n      if (srcAttribute.itemSize !== dstAttribute.itemSize || srcAttribute.normalized !== dstAttribute.normalized) {\n        throw new Error(\"BatchedMesh: All attributes must have a consistent itemSize and normalized value.\");\n      }\n    }\n  }\n  getGeometryCount() {\n    return this._geometryCount;\n  }\n  getVertexCount() {\n    const reservedRanges = this._reservedRanges;\n    if (reservedRanges.length === 0) {\n      return 0;\n    } else {\n      const finalRange = reservedRanges[reservedRanges.length - 1];\n      return finalRange.vertexStart + finalRange.vertexCount;\n    }\n  }\n  getIndexCount() {\n    const reservedRanges = this._reservedRanges;\n    const geometry = this.geometry;\n    if (geometry.getIndex() === null || reservedRanges.length === 0) {\n      return 0;\n    } else {\n      const finalRange = reservedRanges[reservedRanges.length - 1];\n      return finalRange.indexStart + finalRange.indexCount;\n    }\n  }\n  addGeometry(geometry, vertexCount = -1, indexCount = -1) {\n    this._initializeGeometry(geometry);\n    this._validateGeometry(geometry);\n    if (this._geometryCount >= this._maxGeometryCount) {\n      throw new Error(\"BatchedMesh: Maximum geometry count reached.\");\n    }\n    const range = {\n      vertexStart: -1,\n      vertexCount: -1,\n      indexStart: -1,\n      indexCount: -1\n    };\n    let lastRange = null;\n    const reservedRanges = this._reservedRanges;\n    if (this._geometryCount !== 0) {\n      lastRange = reservedRanges[reservedRanges.length - 1];\n    }\n    if (vertexCount === -1) {\n      range.vertexCount = geometry.getAttribute(\"position\").count;\n    } else {\n      range.vertexCount = vertexCount;\n    }\n    if (lastRange === null) {\n      range.vertexStart = 0;\n    } else {\n      range.vertexStart = lastRange.vertexStart + lastRange.vertexCount;\n    }\n    if (geometry.getIndex() !== null) {\n      if (indexCount === -1) {\n        range.indexCount = geometry.getIndex().count;\n      } else {\n        range.indexCount = indexCount;\n      }\n      if (lastRange === null) {\n        range.indexStart = 0;\n      } else {\n        range.indexStart = lastRange.indexStart + lastRange.indexCount;\n      }\n    }\n    if (range.indexStart !== -1 && range.indexStart + range.indexCount > this._maxIndexCount || range.vertexStart + range.vertexCount > this._maxVertexCount) {\n      throw new Error(\"BatchedMesh: Reserved space request exceeds the maximum buffer size.\");\n    }\n    const indexCounts = this._indexCounts;\n    const indexStarts = this._indexStarts;\n    const vertexCounts = this._vertexCounts;\n    const vertexStarts = this._vertexStarts;\n    const visible = this._visible;\n    const active = this._active;\n    const matricesTexture = this._matricesTexture;\n    const matrices = this._matrices;\n    const matricesArray = this._matricesTexture.image.data;\n    visible.push(true);\n    active.push(true);\n    const geometryId = this._geometryCount;\n    this._geometryCount++;\n    matrices.push(new Matrix4());\n    _identityMatrix.toArray(matricesArray, geometryId * 16);\n    matricesTexture.needsUpdate = true;\n    reservedRanges.push(range);\n    vertexStarts.push(range.vertexStart);\n    vertexCounts.push(range.vertexCount);\n    if (geometry.getIndex() !== null) {\n      indexStarts.push(range.indexCount);\n      indexCounts.push(range.indexCount);\n    }\n    const idAttribute = this.geometry.getAttribute(ID_ATTR_NAME);\n    for (let i = 0; i < range.vertexCount; i++) {\n      idAttribute.setX(range.vertexStart + i, geometryId);\n    }\n    idAttribute.needsUpdate = true;\n    this.setGeometryAt(geometryId, geometry);\n    return geometryId;\n  }\n  /**\n   * @deprecated use `addGeometry` instead.\n   */\n  applyGeometry(geometry) {\n    return this.addGeometry(geometry);\n  }\n  setGeometryAt(id, geometry) {\n    if (id >= this._geometryCount) {\n      throw new Error(\"BatchedMesh: Maximum geometry count reached.\");\n    }\n    this._validateGeometry(geometry);\n    const range = this._reservedRanges[id];\n    if (geometry.getIndex() !== null && geometry.getIndex().count > range.indexCount || geometry.attributes.position.count > range.vertexCount) {\n      throw new Error(\"BatchedMesh: Reserved space not large enough for provided geometry.\");\n    }\n    const batchGeometry = this.geometry;\n    const srcPositionAttribute = geometry.getAttribute(\"position\");\n    const hasIndex = batchGeometry.getIndex() !== null;\n    const dstIndex = batchGeometry.getIndex();\n    const srcIndex = geometry.getIndex();\n    const vertexStart = range.vertexStart;\n    const vertexCount = range.vertexCount;\n    for (const attributeName in batchGeometry.attributes) {\n      if (attributeName === ID_ATTR_NAME) {\n        continue;\n      }\n      const srcAttribute = geometry.getAttribute(attributeName);\n      const dstAttribute = batchGeometry.getAttribute(attributeName);\n      copyAttributeData(srcAttribute, dstAttribute, vertexStart);\n      const itemSize = srcAttribute.itemSize;\n      for (let i = srcAttribute.count, l = vertexCount; i < l; i++) {\n        const index = vertexStart + i;\n        for (let c = 0; c < itemSize; c++) {\n          dstAttribute.setComponent(index, c, 0);\n        }\n      }\n      dstAttribute.needsUpdate = true;\n    }\n    this._vertexCounts[id] = srcPositionAttribute.count;\n    if (hasIndex) {\n      const indexStart = range.indexStart;\n      for (let i = 0; i < srcIndex.count; i++) {\n        dstIndex.setX(indexStart + i, vertexStart + srcIndex.getX(i));\n      }\n      for (let i = srcIndex.count, l = range.indexCount; i < l; i++) {\n        dstIndex.setX(indexStart + i, vertexStart);\n      }\n      dstIndex.needsUpdate = true;\n      this._indexCounts[id] = srcIndex.count;\n    }\n    return id;\n  }\n  deleteGeometry(geometryId) {\n    const active = this._active;\n    const matricesTexture = this._matricesTexture;\n    const matricesArray = matricesTexture.image.data;\n    if (geometryId >= active.length || active[geometryId] === false) {\n      return this;\n    }\n    active[geometryId] = false;\n    _zeroScaleMatrix.toArray(matricesArray, geometryId * 16);\n    matricesTexture.needsUpdate = true;\n    return this;\n  }\n  optimize() {\n    throw new Error(\"BatchedMesh: Optimize function not implemented.\");\n  }\n  setMatrixAt(geometryId, matrix) {\n    const visible = this._visible;\n    const active = this._active;\n    const matricesTexture = this._matricesTexture;\n    const matrices = this._matrices;\n    const matricesArray = matricesTexture.image.data;\n    if (geometryId >= matrices.length || active[geometryId] === false) {\n      return this;\n    }\n    if (visible[geometryId] === true) {\n      matrix.toArray(matricesArray, geometryId * 16);\n      matricesTexture.needsUpdate = true;\n    }\n    matrices[geometryId].copy(matrix);\n    return this;\n  }\n  getMatrixAt(geometryId, matrix) {\n    const matrices = this._matrices;\n    const active = this._active;\n    if (geometryId >= matrices.length || active[geometryId] === false) {\n      return matrix;\n    }\n    return matrix.copy(matrices[geometryId]);\n  }\n  setVisibleAt(geometryId, value) {\n    const visible = this._visible;\n    const active = this._active;\n    const matricesTexture = this._matricesTexture;\n    const matrices = this._matrices;\n    const matricesArray = matricesTexture.image.data;\n    if (geometryId >= visible.length || active[geometryId] === false || visible[geometryId] === value) {\n      return this;\n    }\n    if (value === true) {\n      matrices[geometryId].toArray(matricesArray, geometryId * 16);\n    } else {\n      _zeroScaleMatrix.toArray(matricesArray, geometryId * 16);\n    }\n    matricesTexture.needsUpdate = true;\n    visible[geometryId] = value;\n    return this;\n  }\n  getVisibleAt(geometryId) {\n    const visible = this._visible;\n    const active = this._active;\n    if (geometryId >= visible.length || active[geometryId] === false) {\n      return false;\n    }\n    return visible[geometryId];\n  }\n  raycast() {\n    console.warn(\"BatchedMesh: Raycast function not implemented.\");\n  }\n  copy() {\n    throw new Error(\"BatchedMesh: Copy function not implemented.\");\n  }\n  toJSON() {\n    throw new Error(\"BatchedMesh: toJSON function not implemented.\");\n  }\n  dispose() {\n    this.geometry.dispose();\n    this._matricesTexture.dispose();\n    this._matricesTexture = null;\n    return this;\n  }\n}\nexport {\n  BatchedMesh\n};\n//# sourceMappingURL=BatchedMesh.js.map\n"],"names":[],"mappings":";;;AAMA;AANA,IAAI,YAAY,OAAO,cAAc;AACrC,IAAI,kBAAkB,CAAC,KAAK,KAAK,QAAU,OAAO,MAAM,UAAU,KAAK,KAAK;QAAE,YAAY;QAAM,cAAc;QAAM,UAAU;QAAM;IAAM,KAAK,GAAG,CAAC,IAAI,GAAG;AAC1J,IAAI,gBAAgB,CAAC,KAAK,KAAK;IAC7B,gBAAgB,KAAK,OAAO,QAAQ,WAAW,MAAM,KAAK,KAAK;IAC/D,OAAO;AACT;;AAEA,MAAM,eAAe;AACrB,MAAM,kBAAkB,aAAa,GAAG,IAAI,+IAAA,CAAA,UAAO;AACnD,MAAM,mBAAmB,aAAa,GAAG,CAAC,IAAM,IAAI,+IAAA,CAAA,UAAO,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE;AACjH,MAAM,qBACJ,QAAQ,GACR,CAAC;;iBAEc,EAAE,aAAa;;;;;;;;;;;;;;;;AAgBhC,CAAC;AAED,MAAM,qBACJ,QAAQ,GACR,CAAC;;0CAEuC,EAAE,aAAa;;AAEzD,CAAC;AAED,MAAM,uBACJ,QAAQ,GACR,CAAC;;;;;;;AAOH,CAAC;AAED,MAAM,iBACJ,QAAQ,GACR,CAAC;;;;AAIH,CAAC;AAED,SAAS,kBAAkB,GAAG,EAAE,MAAM,EAAE,eAAe,CAAC;IACtD,MAAM,WAAW,OAAO,QAAQ;IAChC,IAAI,IAAI,4BAA4B,IAAI,IAAI,KAAK,CAAC,WAAW,KAAK,OAAO,KAAK,CAAC,WAAW,EAAE;QAC1F,MAAM,cAAc,IAAI,KAAK;QAC7B,IAAK,IAAI,IAAI,GAAG,IAAI,aAAa,IAAK;YACpC,IAAK,IAAI,IAAI,GAAG,IAAI,UAAU,IAAK;gBACjC,OAAO,YAAY,CAAC,IAAI,cAAc,GAAG,IAAI,YAAY,CAAC,GAAG;YAC/D;QACF;IACF,OAAO;QACL,OAAO,KAAK,CAAC,GAAG,CAAC,IAAI,KAAK,EAAE,eAAe;IAC7C;IACA,OAAO,WAAW,GAAG;AACvB;AACA,MAAM,oBAAoB,+IAAA,CAAA,OAAI;IAC5B,YAAY,gBAAgB,EAAE,cAAc,EAAE,gBAAgB,iBAAiB,CAAC,EAAE,QAAQ,CAAE;QAC1F,KAAK,CAAC,IAAI,+IAAA,CAAA,iBAAc,IAAI;QAC5B,cAAc,IAAI,EAAE;QACpB,cAAc,IAAI,EAAE;QACpB,cAAc,IAAI,EAAE;QACpB,cAAc,IAAI,EAAE;QACpB,cAAc,IAAI,EAAE;QACpB,cAAc,IAAI,EAAE;QACpB,cAAc,IAAI,EAAE;QACpB,cAAc,IAAI,EAAE;QACpB,cAAc,IAAI,EAAE;QACpB,cAAc,IAAI,EAAE;QACpB,cAAc,IAAI,EAAE;QACpB,cAAc,IAAI,EAAE;QACpB,cAAc,IAAI,EAAE;QACpB,cAAc,IAAI,EAAE;QACpB,cAAc,IAAI,EAAE;QACpB,IAAI,CAAC,aAAa,GAAG,EAAE;QACvB,IAAI,CAAC,aAAa,GAAG,EAAE;QACvB,IAAI,CAAC,YAAY,GAAG,EAAE;QACtB,IAAI,CAAC,YAAY,GAAG,EAAE;QACtB,IAAI,CAAC,eAAe,GAAG,EAAE;QACzB,IAAI,CAAC,QAAQ,GAAG,EAAE;QAClB,IAAI,CAAC,OAAO,GAAG,EAAE;QACjB,IAAI,CAAC,iBAAiB,GAAG;QACzB,IAAI,CAAC,eAAe,GAAG;QACvB,IAAI,CAAC,cAAc,GAAG;QACtB,IAAI,CAAC,oBAAoB,GAAG;QAC5B,IAAI,CAAC,cAAc,GAAG;QACtB,IAAI,CAAC,SAAS,GAAG,EAAE;QACnB,IAAI,CAAC,gBAAgB,GAAG;QACxB,IAAI,CAAC,aAAa,GAAG;QACrB,IAAI,CAAC,eAAe,GAAG;YACrB,iBAAiB;gBAAE,OAAO;YAAK;QACjC;QACA,IAAI,CAAC,oBAAoB;QACzB,IAAI,CAAC,WAAW;QAChB,IAAI,CAAC,cAAc,GAAG;YACpB,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE;gBACzB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,QAAQ,GAAG;YACnC;QACF;QACA,IAAI,CAAC,aAAa,GAAG;YACnB,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE;gBACzB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,QAAQ,GAAG;YACnC;QACF;IACF;IACA,uBAAuB;QACrB,IAAI,OAAO,KAAK,IAAI,CAAC,IAAI,CAAC,iBAAiB,GAAG;QAC9C,OAAO,+IAAA,CAAA,YAAS,CAAC,cAAc,CAAC;QAChC,OAAO,KAAK,GAAG,CAAC,MAAM;QACtB,MAAM,gBAAgB,IAAI,aAAa,OAAO,OAAO;QACrD,MAAM,kBAAkB,IAAI,+IAAA,CAAA,cAAW,CAAC,eAAe,MAAM,MAAM,+IAAA,CAAA,aAAU,EAAE,+IAAA,CAAA,YAAS;QACxF,IAAI,CAAC,gBAAgB,GAAG;QACxB,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,KAAK,GAAG,IAAI,CAAC,gBAAgB;IACpE;IACA,cAAc;QACZ,MAAM,WAAW,IAAI,CAAC,QAAQ;QAC9B,MAAM,yBAAyB,SAAS,eAAe;QACvD,MAAM,iBAAiB,IAAI,CAAC,eAAe;QAC3C,SAAS,eAAe,GAAG,SAAS,gBAAgB,UAAU,EAAE,QAAQ;YACtE,WAAW,YAAY,GAAG,WAAW,YAAY,CAAC,OAAO,CAAC,mCAAmC,sCAAsC,oBAAoB,OAAO,CAAC,wBAAwB,2BAA2B,oBAAoB,OAAO,CAAC,gCAAgC,mCAAmC,sBAAsB,OAAO,CAAC,8BAA8B,iCAAiC;YAC9Y,IAAK,MAAM,eAAe,eAAgB;gBACxC,WAAW,QAAQ,CAAC,YAAY,GAAG,cAAc,CAAC,YAAY;YAChE;YACA,uBAAuB,IAAI,CAAC,IAAI,EAAE,YAAY;QAChD;QACA,SAAS,OAAO,GAAG,SAAS,OAAO,IAAI,CAAC;QACxC,SAAS,OAAO,CAAC,QAAQ,GAAG;IAC9B;IACA,oBAAoB,SAAS,EAAE;QAC7B,MAAM,WAAW,IAAI,CAAC,QAAQ;QAC9B,MAAM,iBAAiB,IAAI,CAAC,eAAe;QAC3C,MAAM,mBAAmB,IAAI,CAAC,iBAAiB;QAC/C,MAAM,gBAAgB,IAAI,CAAC,cAAc;QACzC,IAAI,IAAI,CAAC,oBAAoB,KAAK,OAAO;YACvC,IAAK,MAAM,iBAAiB,UAAU,UAAU,CAAE;gBAChD,MAAM,eAAe,UAAU,YAAY,CAAC;gBAC5C,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,UAAU,EAAE,GAAG;gBACxC,MAAM,WAAW,IAAI,MAAM,WAAW,CAAC,iBAAiB;gBACxD,MAAM,eAAe,IAAI,aAAa,WAAW,CAAC,UAAU,UAAU;gBACtE,aAAa,QAAQ,CAAC,aAAa,KAAK;gBACxC,SAAS,YAAY,CAAC,eAAe;YACvC;YACA,IAAI,UAAU,QAAQ,OAAO,MAAM;gBACjC,MAAM,aAAa,iBAAiB,QAAQ,IAAI,YAAY,iBAAiB,IAAI,YAAY;gBAC7F,SAAS,QAAQ,CAAC,IAAI,+IAAA,CAAA,kBAAe,CAAC,YAAY;YACpD;YACA,MAAM,UAAU,mBAAmB,QAAQ,IAAI,YAAY,kBAAkB,IAAI,YAAY;YAC7F,SAAS,YAAY,CAAC,cAAc,IAAI,+IAAA,CAAA,kBAAe,CAAC,SAAS;YACjE,IAAI,CAAC,oBAAoB,GAAG;QAC9B;IACF;IACA,qFAAqF;IACrF,kBAAkB,QAAQ,EAAE;QAC1B,IAAI,SAAS,YAAY,CAAC,eAAe;YACvC,MAAM,IAAI,MAAM,CAAC,4CAA4C,EAAE,aAAa,CAAC,CAAC;QAChF;QACA,MAAM,gBAAgB,IAAI,CAAC,QAAQ;QACnC,IAAI,QAAQ,SAAS,QAAQ,QAAQ,QAAQ,cAAc,QAAQ,KAAK;YACtE,MAAM,IAAI,MAAM;QAClB;QACA,IAAK,MAAM,iBAAiB,cAAc,UAAU,CAAE;YACpD,IAAI,kBAAkB,cAAc;gBAClC;YACF;YACA,IAAI,CAAC,SAAS,YAAY,CAAC,gBAAgB;gBACzC,MAAM,IAAI,MACR,CAAC,qCAAqC,EAAE,cAAc,kDAAkD,CAAC;YAE7G;YACA,MAAM,eAAe,SAAS,YAAY,CAAC;YAC3C,MAAM,eAAe,cAAc,YAAY,CAAC;YAChD,IAAI,aAAa,QAAQ,KAAK,aAAa,QAAQ,IAAI,aAAa,UAAU,KAAK,aAAa,UAAU,EAAE;gBAC1G,MAAM,IAAI,MAAM;YAClB;QACF;IACF;IACA,mBAAmB;QACjB,OAAO,IAAI,CAAC,cAAc;IAC5B;IACA,iBAAiB;QACf,MAAM,iBAAiB,IAAI,CAAC,eAAe;QAC3C,IAAI,eAAe,MAAM,KAAK,GAAG;YAC/B,OAAO;QACT,OAAO;YACL,MAAM,aAAa,cAAc,CAAC,eAAe,MAAM,GAAG,EAAE;YAC5D,OAAO,WAAW,WAAW,GAAG,WAAW,WAAW;QACxD;IACF;IACA,gBAAgB;QACd,MAAM,iBAAiB,IAAI,CAAC,eAAe;QAC3C,MAAM,WAAW,IAAI,CAAC,QAAQ;QAC9B,IAAI,SAAS,QAAQ,OAAO,QAAQ,eAAe,MAAM,KAAK,GAAG;YAC/D,OAAO;QACT,OAAO;YACL,MAAM,aAAa,cAAc,CAAC,eAAe,MAAM,GAAG,EAAE;YAC5D,OAAO,WAAW,UAAU,GAAG,WAAW,UAAU;QACtD;IACF;IACA,YAAY,QAAQ,EAAE,cAAc,CAAC,CAAC,EAAE,aAAa,CAAC,CAAC,EAAE;QACvD,IAAI,CAAC,mBAAmB,CAAC;QACzB,IAAI,CAAC,iBAAiB,CAAC;QACvB,IAAI,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,iBAAiB,EAAE;YACjD,MAAM,IAAI,MAAM;QAClB;QACA,MAAM,QAAQ;YACZ,aAAa,CAAC;YACd,aAAa,CAAC;YACd,YAAY,CAAC;YACb,YAAY,CAAC;QACf;QACA,IAAI,YAAY;QAChB,MAAM,iBAAiB,IAAI,CAAC,eAAe;QAC3C,IAAI,IAAI,CAAC,cAAc,KAAK,GAAG;YAC7B,YAAY,cAAc,CAAC,eAAe,MAAM,GAAG,EAAE;QACvD;QACA,IAAI,gBAAgB,CAAC,GAAG;YACtB,MAAM,WAAW,GAAG,SAAS,YAAY,CAAC,YAAY,KAAK;QAC7D,OAAO;YACL,MAAM,WAAW,GAAG;QACtB;QACA,IAAI,cAAc,MAAM;YACtB,MAAM,WAAW,GAAG;QACtB,OAAO;YACL,MAAM,WAAW,GAAG,UAAU,WAAW,GAAG,UAAU,WAAW;QACnE;QACA,IAAI,SAAS,QAAQ,OAAO,MAAM;YAChC,IAAI,eAAe,CAAC,GAAG;gBACrB,MAAM,UAAU,GAAG,SAAS,QAAQ,GAAG,KAAK;YAC9C,OAAO;gBACL,MAAM,UAAU,GAAG;YACrB;YACA,IAAI,cAAc,MAAM;gBACtB,MAAM,UAAU,GAAG;YACrB,OAAO;gBACL,MAAM,UAAU,GAAG,UAAU,UAAU,GAAG,UAAU,UAAU;YAChE;QACF;QACA,IAAI,MAAM,UAAU,KAAK,CAAC,KAAK,MAAM,UAAU,GAAG,MAAM,UAAU,GAAG,IAAI,CAAC,cAAc,IAAI,MAAM,WAAW,GAAG,MAAM,WAAW,GAAG,IAAI,CAAC,eAAe,EAAE;YACxJ,MAAM,IAAI,MAAM;QAClB;QACA,MAAM,cAAc,IAAI,CAAC,YAAY;QACrC,MAAM,cAAc,IAAI,CAAC,YAAY;QACrC,MAAM,eAAe,IAAI,CAAC,aAAa;QACvC,MAAM,eAAe,IAAI,CAAC,aAAa;QACvC,MAAM,UAAU,IAAI,CAAC,QAAQ;QAC7B,MAAM,SAAS,IAAI,CAAC,OAAO;QAC3B,MAAM,kBAAkB,IAAI,CAAC,gBAAgB;QAC7C,MAAM,WAAW,IAAI,CAAC,SAAS;QAC/B,MAAM,gBAAgB,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,IAAI;QACtD,QAAQ,IAAI,CAAC;QACb,OAAO,IAAI,CAAC;QACZ,MAAM,aAAa,IAAI,CAAC,cAAc;QACtC,IAAI,CAAC,cAAc;QACnB,SAAS,IAAI,CAAC,IAAI,+IAAA,CAAA,UAAO;QACzB,gBAAgB,OAAO,CAAC,eAAe,aAAa;QACpD,gBAAgB,WAAW,GAAG;QAC9B,eAAe,IAAI,CAAC;QACpB,aAAa,IAAI,CAAC,MAAM,WAAW;QACnC,aAAa,IAAI,CAAC,MAAM,WAAW;QACnC,IAAI,SAAS,QAAQ,OAAO,MAAM;YAChC,YAAY,IAAI,CAAC,MAAM,UAAU;YACjC,YAAY,IAAI,CAAC,MAAM,UAAU;QACnC;QACA,MAAM,cAAc,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC;QAC/C,IAAK,IAAI,IAAI,GAAG,IAAI,MAAM,WAAW,EAAE,IAAK;YAC1C,YAAY,IAAI,CAAC,MAAM,WAAW,GAAG,GAAG;QAC1C;QACA,YAAY,WAAW,GAAG;QAC1B,IAAI,CAAC,aAAa,CAAC,YAAY;QAC/B,OAAO;IACT;IACA;;GAEC,GACD,cAAc,QAAQ,EAAE;QACtB,OAAO,IAAI,CAAC,WAAW,CAAC;IAC1B;IACA,cAAc,EAAE,EAAE,QAAQ,EAAE;QAC1B,IAAI,MAAM,IAAI,CAAC,cAAc,EAAE;YAC7B,MAAM,IAAI,MAAM;QAClB;QACA,IAAI,CAAC,iBAAiB,CAAC;QACvB,MAAM,QAAQ,IAAI,CAAC,eAAe,CAAC,GAAG;QACtC,IAAI,SAAS,QAAQ,OAAO,QAAQ,SAAS,QAAQ,GAAG,KAAK,GAAG,MAAM,UAAU,IAAI,SAAS,UAAU,CAAC,QAAQ,CAAC,KAAK,GAAG,MAAM,WAAW,EAAE;YAC1I,MAAM,IAAI,MAAM;QAClB;QACA,MAAM,gBAAgB,IAAI,CAAC,QAAQ;QACnC,MAAM,uBAAuB,SAAS,YAAY,CAAC;QACnD,MAAM,WAAW,cAAc,QAAQ,OAAO;QAC9C,MAAM,WAAW,cAAc,QAAQ;QACvC,MAAM,WAAW,SAAS,QAAQ;QAClC,MAAM,cAAc,MAAM,WAAW;QACrC,MAAM,cAAc,MAAM,WAAW;QACrC,IAAK,MAAM,iBAAiB,cAAc,UAAU,CAAE;YACpD,IAAI,kBAAkB,cAAc;gBAClC;YACF;YACA,MAAM,eAAe,SAAS,YAAY,CAAC;YAC3C,MAAM,eAAe,cAAc,YAAY,CAAC;YAChD,kBAAkB,cAAc,cAAc;YAC9C,MAAM,WAAW,aAAa,QAAQ;YACtC,IAAK,IAAI,IAAI,aAAa,KAAK,EAAE,IAAI,aAAa,IAAI,GAAG,IAAK;gBAC5D,MAAM,QAAQ,cAAc;gBAC5B,IAAK,IAAI,IAAI,GAAG,IAAI,UAAU,IAAK;oBACjC,aAAa,YAAY,CAAC,OAAO,GAAG;gBACtC;YACF;YACA,aAAa,WAAW,GAAG;QAC7B;QACA,IAAI,CAAC,aAAa,CAAC,GAAG,GAAG,qBAAqB,KAAK;QACnD,IAAI,UAAU;YACZ,MAAM,aAAa,MAAM,UAAU;YACnC,IAAK,IAAI,IAAI,GAAG,IAAI,SAAS,KAAK,EAAE,IAAK;gBACvC,SAAS,IAAI,CAAC,aAAa,GAAG,cAAc,SAAS,IAAI,CAAC;YAC5D;YACA,IAAK,IAAI,IAAI,SAAS,KAAK,EAAE,IAAI,MAAM,UAAU,EAAE,IAAI,GAAG,IAAK;gBAC7D,SAAS,IAAI,CAAC,aAAa,GAAG;YAChC;YACA,SAAS,WAAW,GAAG;YACvB,IAAI,CAAC,YAAY,CAAC,GAAG,GAAG,SAAS,KAAK;QACxC;QACA,OAAO;IACT;IACA,eAAe,UAAU,EAAE;QACzB,MAAM,SAAS,IAAI,CAAC,OAAO;QAC3B,MAAM,kBAAkB,IAAI,CAAC,gBAAgB;QAC7C,MAAM,gBAAgB,gBAAgB,KAAK,CAAC,IAAI;QAChD,IAAI,cAAc,OAAO,MAAM,IAAI,MAAM,CAAC,WAAW,KAAK,OAAO;YAC/D,OAAO,IAAI;QACb;QACA,MAAM,CAAC,WAAW,GAAG;QACrB,iBAAiB,OAAO,CAAC,eAAe,aAAa;QACrD,gBAAgB,WAAW,GAAG;QAC9B,OAAO,IAAI;IACb;IACA,WAAW;QACT,MAAM,IAAI,MAAM;IAClB;IACA,YAAY,UAAU,EAAE,MAAM,EAAE;QAC9B,MAAM,UAAU,IAAI,CAAC,QAAQ;QAC7B,MAAM,SAAS,IAAI,CAAC,OAAO;QAC3B,MAAM,kBAAkB,IAAI,CAAC,gBAAgB;QAC7C,MAAM,WAAW,IAAI,CAAC,SAAS;QAC/B,MAAM,gBAAgB,gBAAgB,KAAK,CAAC,IAAI;QAChD,IAAI,cAAc,SAAS,MAAM,IAAI,MAAM,CAAC,WAAW,KAAK,OAAO;YACjE,OAAO,IAAI;QACb;QACA,IAAI,OAAO,CAAC,WAAW,KAAK,MAAM;YAChC,OAAO,OAAO,CAAC,eAAe,aAAa;YAC3C,gBAAgB,WAAW,GAAG;QAChC;QACA,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC;QAC1B,OAAO,IAAI;IACb;IACA,YAAY,UAAU,EAAE,MAAM,EAAE;QAC9B,MAAM,WAAW,IAAI,CAAC,SAAS;QAC/B,MAAM,SAAS,IAAI,CAAC,OAAO;QAC3B,IAAI,cAAc,SAAS,MAAM,IAAI,MAAM,CAAC,WAAW,KAAK,OAAO;YACjE,OAAO;QACT;QACA,OAAO,OAAO,IAAI,CAAC,QAAQ,CAAC,WAAW;IACzC;IACA,aAAa,UAAU,EAAE,KAAK,EAAE;QAC9B,MAAM,UAAU,IAAI,CAAC,QAAQ;QAC7B,MAAM,SAAS,IAAI,CAAC,OAAO;QAC3B,MAAM,kBAAkB,IAAI,CAAC,gBAAgB;QAC7C,MAAM,WAAW,IAAI,CAAC,SAAS;QAC/B,MAAM,gBAAgB,gBAAgB,KAAK,CAAC,IAAI;QAChD,IAAI,cAAc,QAAQ,MAAM,IAAI,MAAM,CAAC,WAAW,KAAK,SAAS,OAAO,CAAC,WAAW,KAAK,OAAO;YACjG,OAAO,IAAI;QACb;QACA,IAAI,UAAU,MAAM;YAClB,QAAQ,CAAC,WAAW,CAAC,OAAO,CAAC,eAAe,aAAa;QAC3D,OAAO;YACL,iBAAiB,OAAO,CAAC,eAAe,aAAa;QACvD;QACA,gBAAgB,WAAW,GAAG;QAC9B,OAAO,CAAC,WAAW,GAAG;QACtB,OAAO,IAAI;IACb;IACA,aAAa,UAAU,EAAE;QACvB,MAAM,UAAU,IAAI,CAAC,QAAQ;QAC7B,MAAM,SAAS,IAAI,CAAC,OAAO;QAC3B,IAAI,cAAc,QAAQ,MAAM,IAAI,MAAM,CAAC,WAAW,KAAK,OAAO;YAChE,OAAO;QACT;QACA,OAAO,OAAO,CAAC,WAAW;IAC5B;IACA,UAAU;QACR,QAAQ,IAAI,CAAC;IACf;IACA,OAAO;QACL,MAAM,IAAI,MAAM;IAClB;IACA,SAAS;QACP,MAAM,IAAI,MAAM;IAClB;IACA,UAAU;QACR,IAAI,CAAC,QAAQ,CAAC,OAAO;QACrB,IAAI,CAAC,gBAAgB,CAAC,OAAO;QAC7B,IAAI,CAAC,gBAAgB,GAAG;QACxB,OAAO,IAAI;IACb;AACF;;CAIA,uCAAuC","ignoreList":[0]}},
    {"offset": {"line": 426, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 432, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/objects/Reflector.js"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nimport { Mesh, PerspectiveCamera, Color, Plane, Vector3, Matrix4, Vector4, WebGLRenderTarget, HalfFloatType, ShaderMaterial, UniformsUtils, NoToneMapping } from \"three\";\nimport { version } from \"../_polyfill/constants.js\";\nconst Reflector = /* @__PURE__ */ (() => {\n  const _Reflector = class extends Mesh {\n    constructor(geometry, options = {}) {\n      super(geometry);\n      this.isReflector = true;\n      this.type = \"Reflector\";\n      this.camera = new PerspectiveCamera();\n      const scope = this;\n      const color = options.color !== void 0 ? new Color(options.color) : new Color(8355711);\n      const textureWidth = options.textureWidth || 512;\n      const textureHeight = options.textureHeight || 512;\n      const clipBias = options.clipBias || 0;\n      const shader = options.shader || _Reflector.ReflectorShader;\n      const multisample = options.multisample !== void 0 ? options.multisample : 4;\n      const reflectorPlane = new Plane();\n      const normal = new Vector3();\n      const reflectorWorldPosition = new Vector3();\n      const cameraWorldPosition = new Vector3();\n      const rotationMatrix = new Matrix4();\n      const lookAtPosition = new Vector3(0, 0, -1);\n      const clipPlane = new Vector4();\n      const view = new Vector3();\n      const target = new Vector3();\n      const q = new Vector4();\n      const textureMatrix = new Matrix4();\n      const virtualCamera = this.camera;\n      const renderTarget = new WebGLRenderTarget(textureWidth, textureHeight, {\n        samples: multisample,\n        type: HalfFloatType\n      });\n      const material = new ShaderMaterial({\n        uniforms: UniformsUtils.clone(shader.uniforms),\n        fragmentShader: shader.fragmentShader,\n        vertexShader: shader.vertexShader\n      });\n      material.uniforms[\"tDiffuse\"].value = renderTarget.texture;\n      material.uniforms[\"color\"].value = color;\n      material.uniforms[\"textureMatrix\"].value = textureMatrix;\n      this.material = material;\n      this.onBeforeRender = function(renderer, scene, camera) {\n        reflectorWorldPosition.setFromMatrixPosition(scope.matrixWorld);\n        cameraWorldPosition.setFromMatrixPosition(camera.matrixWorld);\n        rotationMatrix.extractRotation(scope.matrixWorld);\n        normal.set(0, 0, 1);\n        normal.applyMatrix4(rotationMatrix);\n        view.subVectors(reflectorWorldPosition, cameraWorldPosition);\n        if (view.dot(normal) > 0)\n          return;\n        view.reflect(normal).negate();\n        view.add(reflectorWorldPosition);\n        rotationMatrix.extractRotation(camera.matrixWorld);\n        lookAtPosition.set(0, 0, -1);\n        lookAtPosition.applyMatrix4(rotationMatrix);\n        lookAtPosition.add(cameraWorldPosition);\n        target.subVectors(reflectorWorldPosition, lookAtPosition);\n        target.reflect(normal).negate();\n        target.add(reflectorWorldPosition);\n        virtualCamera.position.copy(view);\n        virtualCamera.up.set(0, 1, 0);\n        virtualCamera.up.applyMatrix4(rotationMatrix);\n        virtualCamera.up.reflect(normal);\n        virtualCamera.lookAt(target);\n        virtualCamera.far = camera.far;\n        virtualCamera.updateMatrixWorld();\n        virtualCamera.projectionMatrix.copy(camera.projectionMatrix);\n        textureMatrix.set(0.5, 0, 0, 0.5, 0, 0.5, 0, 0.5, 0, 0, 0.5, 0.5, 0, 0, 0, 1);\n        textureMatrix.multiply(virtualCamera.projectionMatrix);\n        textureMatrix.multiply(virtualCamera.matrixWorldInverse);\n        textureMatrix.multiply(scope.matrixWorld);\n        reflectorPlane.setFromNormalAndCoplanarPoint(normal, reflectorWorldPosition);\n        reflectorPlane.applyMatrix4(virtualCamera.matrixWorldInverse);\n        clipPlane.set(\n          reflectorPlane.normal.x,\n          reflectorPlane.normal.y,\n          reflectorPlane.normal.z,\n          reflectorPlane.constant\n        );\n        const projectionMatrix = virtualCamera.projectionMatrix;\n        q.x = (Math.sign(clipPlane.x) + projectionMatrix.elements[8]) / projectionMatrix.elements[0];\n        q.y = (Math.sign(clipPlane.y) + projectionMatrix.elements[9]) / projectionMatrix.elements[5];\n        q.z = -1;\n        q.w = (1 + projectionMatrix.elements[10]) / projectionMatrix.elements[14];\n        clipPlane.multiplyScalar(2 / clipPlane.dot(q));\n        projectionMatrix.elements[2] = clipPlane.x;\n        projectionMatrix.elements[6] = clipPlane.y;\n        projectionMatrix.elements[10] = clipPlane.z + 1 - clipBias;\n        projectionMatrix.elements[14] = clipPlane.w;\n        scope.visible = false;\n        const currentRenderTarget = renderer.getRenderTarget();\n        const currentXrEnabled = renderer.xr.enabled;\n        const currentShadowAutoUpdate = renderer.shadowMap.autoUpdate;\n        const currentToneMapping = renderer.toneMapping;\n        let isSRGB = false;\n        if (\"outputColorSpace\" in renderer)\n          isSRGB = renderer.outputColorSpace === \"srgb\";\n        else\n          isSRGB = renderer.outputEncoding === 3001;\n        renderer.xr.enabled = false;\n        renderer.shadowMap.autoUpdate = false;\n        if (\"outputColorSpace\" in renderer)\n          renderer.outputColorSpace = \"srgb-linear\";\n        else\n          renderer.outputEncoding = 3e3;\n        renderer.toneMapping = NoToneMapping;\n        renderer.setRenderTarget(renderTarget);\n        renderer.state.buffers.depth.setMask(true);\n        if (renderer.autoClear === false)\n          renderer.clear();\n        renderer.render(scene, virtualCamera);\n        renderer.xr.enabled = currentXrEnabled;\n        renderer.shadowMap.autoUpdate = currentShadowAutoUpdate;\n        renderer.toneMapping = currentToneMapping;\n        if (\"outputColorSpace\" in renderer)\n          renderer.outputColorSpace = isSRGB ? \"srgb\" : \"srgb-linear\";\n        else\n          renderer.outputEncoding = isSRGB ? 3001 : 3e3;\n        renderer.setRenderTarget(currentRenderTarget);\n        const viewport = camera.viewport;\n        if (viewport !== void 0) {\n          renderer.state.viewport(viewport);\n        }\n        scope.visible = true;\n      };\n      this.getRenderTarget = function() {\n        return renderTarget;\n      };\n      this.dispose = function() {\n        renderTarget.dispose();\n        scope.material.dispose();\n      };\n    }\n  };\n  let Reflector2 = _Reflector;\n  __publicField(Reflector2, \"ReflectorShader\", {\n    uniforms: {\n      color: {\n        value: null\n      },\n      tDiffuse: {\n        value: null\n      },\n      textureMatrix: {\n        value: null\n      }\n    },\n    vertexShader: (\n      /* glsl */\n      `\n\t\tuniform mat4 textureMatrix;\n\t\tvarying vec4 vUv;\n\n\t\t#include <common>\n\t\t#include <logdepthbuf_pars_vertex>\n\n\t\tvoid main() {\n\n\t\t\tvUv = textureMatrix * vec4( position, 1.0 );\n\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t\t#include <logdepthbuf_vertex>\n\n\t\t}`\n    ),\n    fragmentShader: (\n      /* glsl */\n      `\n\t\tuniform vec3 color;\n\t\tuniform sampler2D tDiffuse;\n\t\tvarying vec4 vUv;\n\n\t\t#include <logdepthbuf_pars_fragment>\n\n\t\tfloat blendOverlay( float base, float blend ) {\n\n\t\t\treturn( base < 0.5 ? ( 2.0 * base * blend ) : ( 1.0 - 2.0 * ( 1.0 - base ) * ( 1.0 - blend ) ) );\n\n\t\t}\n\n\t\tvec3 blendOverlay( vec3 base, vec3 blend ) {\n\n\t\t\treturn vec3( blendOverlay( base.r, blend.r ), blendOverlay( base.g, blend.g ), blendOverlay( base.b, blend.b ) );\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\t#include <logdepthbuf_fragment>\n\n\t\t\tvec4 base = texture2DProj( tDiffuse, vUv );\n\t\t\tgl_FragColor = vec4( blendOverlay( base.rgb, color ), 1.0 );\n\n\t\t\t#include <tonemapping_fragment>\n\t\t\t#include <${version >= 154 ? \"colorspace_fragment\" : \"encodings_fragment\"}>\n\n\t\t}`\n    )\n  });\n  return Reflector2;\n})();\nexport {\n  Reflector\n};\n//# sourceMappingURL=Reflector.js.map\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 633, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 639, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/objects/Refractor.js"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nimport { Mesh, PerspectiveCamera, Color, Plane, Matrix4, WebGLRenderTarget, HalfFloatType, ShaderMaterial, UniformsUtils, Vector3, Quaternion, Vector4, NoToneMapping } from \"three\";\nimport { version } from \"../_polyfill/constants.js\";\nconst Refractor = /* @__PURE__ */ (() => {\n  const _Refractor = class extends Mesh {\n    constructor(geometry, options = {}) {\n      super(geometry);\n      this.isRefractor = true;\n      this.type = \"Refractor\";\n      this.camera = new PerspectiveCamera();\n      const scope = this;\n      const color = options.color !== void 0 ? new Color(options.color) : new Color(8355711);\n      const textureWidth = options.textureWidth || 512;\n      const textureHeight = options.textureHeight || 512;\n      const clipBias = options.clipBias || 0;\n      const shader = options.shader || _Refractor.RefractorShader;\n      const multisample = options.multisample !== void 0 ? options.multisample : 4;\n      const virtualCamera = this.camera;\n      virtualCamera.matrixAutoUpdate = false;\n      virtualCamera.userData.refractor = true;\n      const refractorPlane = new Plane();\n      const textureMatrix = new Matrix4();\n      const renderTarget = new WebGLRenderTarget(textureWidth, textureHeight, {\n        samples: multisample,\n        type: HalfFloatType\n      });\n      this.material = new ShaderMaterial({\n        uniforms: UniformsUtils.clone(shader.uniforms),\n        vertexShader: shader.vertexShader,\n        fragmentShader: shader.fragmentShader,\n        transparent: true\n        // ensures, refractors are drawn from farthest to closest\n      });\n      this.material.uniforms[\"color\"].value = color;\n      this.material.uniforms[\"tDiffuse\"].value = renderTarget.texture;\n      this.material.uniforms[\"textureMatrix\"].value = textureMatrix;\n      const visible = function() {\n        const refractorWorldPosition = new Vector3();\n        const cameraWorldPosition = new Vector3();\n        const rotationMatrix = new Matrix4();\n        const view = new Vector3();\n        const normal = new Vector3();\n        return function visible2(camera) {\n          refractorWorldPosition.setFromMatrixPosition(scope.matrixWorld);\n          cameraWorldPosition.setFromMatrixPosition(camera.matrixWorld);\n          view.subVectors(refractorWorldPosition, cameraWorldPosition);\n          rotationMatrix.extractRotation(scope.matrixWorld);\n          normal.set(0, 0, 1);\n          normal.applyMatrix4(rotationMatrix);\n          return view.dot(normal) < 0;\n        };\n      }();\n      const updateRefractorPlane = function() {\n        const normal = new Vector3();\n        const position = new Vector3();\n        const quaternion = new Quaternion();\n        const scale = new Vector3();\n        return function updateRefractorPlane2() {\n          scope.matrixWorld.decompose(position, quaternion, scale);\n          normal.set(0, 0, 1).applyQuaternion(quaternion).normalize();\n          normal.negate();\n          refractorPlane.setFromNormalAndCoplanarPoint(normal, position);\n        };\n      }();\n      const updateVirtualCamera = function() {\n        const clipPlane = new Plane();\n        const clipVector = new Vector4();\n        const q = new Vector4();\n        return function updateVirtualCamera2(camera) {\n          virtualCamera.matrixWorld.copy(camera.matrixWorld);\n          virtualCamera.matrixWorldInverse.copy(virtualCamera.matrixWorld).invert();\n          virtualCamera.projectionMatrix.copy(camera.projectionMatrix);\n          virtualCamera.far = camera.far;\n          clipPlane.copy(refractorPlane);\n          clipPlane.applyMatrix4(virtualCamera.matrixWorldInverse);\n          clipVector.set(clipPlane.normal.x, clipPlane.normal.y, clipPlane.normal.z, clipPlane.constant);\n          const projectionMatrix = virtualCamera.projectionMatrix;\n          q.x = (Math.sign(clipVector.x) + projectionMatrix.elements[8]) / projectionMatrix.elements[0];\n          q.y = (Math.sign(clipVector.y) + projectionMatrix.elements[9]) / projectionMatrix.elements[5];\n          q.z = -1;\n          q.w = (1 + projectionMatrix.elements[10]) / projectionMatrix.elements[14];\n          clipVector.multiplyScalar(2 / clipVector.dot(q));\n          projectionMatrix.elements[2] = clipVector.x;\n          projectionMatrix.elements[6] = clipVector.y;\n          projectionMatrix.elements[10] = clipVector.z + 1 - clipBias;\n          projectionMatrix.elements[14] = clipVector.w;\n        };\n      }();\n      function updateTextureMatrix(camera) {\n        textureMatrix.set(0.5, 0, 0, 0.5, 0, 0.5, 0, 0.5, 0, 0, 0.5, 0.5, 0, 0, 0, 1);\n        textureMatrix.multiply(camera.projectionMatrix);\n        textureMatrix.multiply(camera.matrixWorldInverse);\n        textureMatrix.multiply(scope.matrixWorld);\n      }\n      function render(renderer, scene, camera) {\n        scope.visible = false;\n        const currentRenderTarget = renderer.getRenderTarget();\n        const currentXrEnabled = renderer.xr.enabled;\n        const currentShadowAutoUpdate = renderer.shadowMap.autoUpdate;\n        const currentToneMapping = renderer.toneMapping;\n        let isSRGB = false;\n        if (\"outputColorSpace\" in renderer)\n          isSRGB = renderer.outputColorSpace === \"srgb\";\n        else\n          isSRGB = renderer.outputEncoding === 3001;\n        renderer.xr.enabled = false;\n        renderer.shadowMap.autoUpdate = false;\n        if (\"outputColorSpace\" in renderer)\n          renderer.outputColorSpace = \"srgb-linear\";\n        else\n          renderer.outputEncoding = 3e3;\n        renderer.toneMapping = NoToneMapping;\n        renderer.setRenderTarget(renderTarget);\n        if (renderer.autoClear === false)\n          renderer.clear();\n        renderer.render(scene, virtualCamera);\n        renderer.xr.enabled = currentXrEnabled;\n        renderer.shadowMap.autoUpdate = currentShadowAutoUpdate;\n        renderer.toneMapping = currentToneMapping;\n        renderer.setRenderTarget(currentRenderTarget);\n        if (\"outputColorSpace\" in renderer)\n          renderer.outputColorSpace = isSRGB ? \"srgb\" : \"srgb-linear\";\n        else\n          renderer.outputEncoding = isSRGB ? 3001 : 3e3;\n        const viewport = camera.viewport;\n        if (viewport !== void 0) {\n          renderer.state.viewport(viewport);\n        }\n        scope.visible = true;\n      }\n      this.onBeforeRender = function(renderer, scene, camera) {\n        if (camera.userData.refractor === true)\n          return;\n        if (!visible(camera) === true)\n          return;\n        updateRefractorPlane();\n        updateTextureMatrix(camera);\n        updateVirtualCamera(camera);\n        render(renderer, scene, camera);\n      };\n      this.getRenderTarget = function() {\n        return renderTarget;\n      };\n      this.dispose = function() {\n        renderTarget.dispose();\n        scope.material.dispose();\n      };\n    }\n  };\n  let Refractor2 = _Refractor;\n  __publicField(Refractor2, \"RefractorShader\", {\n    uniforms: {\n      color: {\n        value: null\n      },\n      tDiffuse: {\n        value: null\n      },\n      textureMatrix: {\n        value: null\n      }\n    },\n    vertexShader: (\n      /* glsl */\n      `\n\n\t\tuniform mat4 textureMatrix;\n\n\t\tvarying vec4 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = textureMatrix * vec4( position, 1.0 );\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}`\n    ),\n    fragmentShader: (\n      /* glsl */\n      `\n\n\t\tuniform vec3 color;\n\t\tuniform sampler2D tDiffuse;\n\n\t\tvarying vec4 vUv;\n\n\t\tfloat blendOverlay( float base, float blend ) {\n\n\t\t\treturn( base < 0.5 ? ( 2.0 * base * blend ) : ( 1.0 - 2.0 * ( 1.0 - base ) * ( 1.0 - blend ) ) );\n\n\t\t}\n\n\t\tvec3 blendOverlay( vec3 base, vec3 blend ) {\n\n\t\t\treturn vec3( blendOverlay( base.r, blend.r ), blendOverlay( base.g, blend.g ), blendOverlay( base.b, blend.b ) );\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvec4 base = texture2DProj( tDiffuse, vUv );\n\t\t\tgl_FragColor = vec4( blendOverlay( base.rgb, color ), 1.0 );\n\n\t\t\t#include <tonemapping_fragment>\n\t\t\t#include <${version >= 154 ? \"colorspace_fragment\" : \"encodings_fragment\"}>\n\n\t\t}`\n    )\n  });\n  return Refractor2;\n})();\nexport {\n  Refractor\n};\n//# sourceMappingURL=Refractor.js.map\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 851, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 857, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/objects/ShadowMesh.js"],"sourcesContent":["import { Mesh, MeshBasicMaterial, EqualStencilFunc, IncrementStencilOp, Matrix4 } from \"three\";\nconst _shadowMatrix = /* @__PURE__ */ new Matrix4();\nclass ShadowMesh extends Mesh {\n  constructor(mesh) {\n    const shadowMaterial = new MeshBasicMaterial({\n      color: 0,\n      transparent: true,\n      opacity: 0.6,\n      depthWrite: false,\n      stencilWrite: true,\n      stencilFunc: EqualStencilFunc,\n      stencilRef: 0,\n      stencilZPass: IncrementStencilOp\n    });\n    super(mesh.geometry, shadowMaterial);\n    this.isShadowMesh = true;\n    this.meshMatrix = mesh.matrixWorld;\n    this.frustumCulled = false;\n    this.matrixAutoUpdate = false;\n  }\n  update(plane, lightPosition4D) {\n    const dot = plane.normal.x * lightPosition4D.x + plane.normal.y * lightPosition4D.y + plane.normal.z * lightPosition4D.z + -plane.constant * lightPosition4D.w;\n    const sme = _shadowMatrix.elements;\n    sme[0] = dot - lightPosition4D.x * plane.normal.x;\n    sme[4] = -lightPosition4D.x * plane.normal.y;\n    sme[8] = -lightPosition4D.x * plane.normal.z;\n    sme[12] = -lightPosition4D.x * -plane.constant;\n    sme[1] = -lightPosition4D.y * plane.normal.x;\n    sme[5] = dot - lightPosition4D.y * plane.normal.y;\n    sme[9] = -lightPosition4D.y * plane.normal.z;\n    sme[13] = -lightPosition4D.y * -plane.constant;\n    sme[2] = -lightPosition4D.z * plane.normal.x;\n    sme[6] = -lightPosition4D.z * plane.normal.y;\n    sme[10] = dot - lightPosition4D.z * plane.normal.z;\n    sme[14] = -lightPosition4D.z * -plane.constant;\n    sme[3] = -lightPosition4D.w * plane.normal.x;\n    sme[7] = -lightPosition4D.w * plane.normal.y;\n    sme[11] = -lightPosition4D.w * plane.normal.z;\n    sme[15] = dot - lightPosition4D.w * -plane.constant;\n    this.matrix.multiplyMatrices(_shadowMatrix, this.meshMatrix);\n  }\n}\nexport {\n  ShadowMesh\n};\n//# sourceMappingURL=ShadowMesh.js.map\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,gBAAgB,aAAa,GAAG,IAAI,+IAAA,CAAA,UAAO;AACjD,MAAM,mBAAmB,+IAAA,CAAA,OAAI;IAC3B,YAAY,IAAI,CAAE;QAChB,MAAM,iBAAiB,IAAI,+IAAA,CAAA,oBAAiB,CAAC;YAC3C,OAAO;YACP,aAAa;YACb,SAAS;YACT,YAAY;YACZ,cAAc;YACd,aAAa,+IAAA,CAAA,mBAAgB;YAC7B,YAAY;YACZ,cAAc,+IAAA,CAAA,qBAAkB;QAClC;QACA,KAAK,CAAC,KAAK,QAAQ,EAAE;QACrB,IAAI,CAAC,YAAY,GAAG;QACpB,IAAI,CAAC,UAAU,GAAG,KAAK,WAAW;QAClC,IAAI,CAAC,aAAa,GAAG;QACrB,IAAI,CAAC,gBAAgB,GAAG;IAC1B;IACA,OAAO,KAAK,EAAE,eAAe,EAAE;QAC7B,MAAM,MAAM,MAAM,MAAM,CAAC,CAAC,GAAG,gBAAgB,CAAC,GAAG,MAAM,MAAM,CAAC,CAAC,GAAG,gBAAgB,CAAC,GAAG,MAAM,MAAM,CAAC,CAAC,GAAG,gBAAgB,CAAC,GAAG,CAAC,MAAM,QAAQ,GAAG,gBAAgB,CAAC;QAC9J,MAAM,MAAM,cAAc,QAAQ;QAClC,GAAG,CAAC,EAAE,GAAG,MAAM,gBAAgB,CAAC,GAAG,MAAM,MAAM,CAAC,CAAC;QACjD,GAAG,CAAC,EAAE,GAAG,CAAC,gBAAgB,CAAC,GAAG,MAAM,MAAM,CAAC,CAAC;QAC5C,GAAG,CAAC,EAAE,GAAG,CAAC,gBAAgB,CAAC,GAAG,MAAM,MAAM,CAAC,CAAC;QAC5C,GAAG,CAAC,GAAG,GAAG,CAAC,gBAAgB,CAAC,GAAG,CAAC,MAAM,QAAQ;QAC9C,GAAG,CAAC,EAAE,GAAG,CAAC,gBAAgB,CAAC,GAAG,MAAM,MAAM,CAAC,CAAC;QAC5C,GAAG,CAAC,EAAE,GAAG,MAAM,gBAAgB,CAAC,GAAG,MAAM,MAAM,CAAC,CAAC;QACjD,GAAG,CAAC,EAAE,GAAG,CAAC,gBAAgB,CAAC,GAAG,MAAM,MAAM,CAAC,CAAC;QAC5C,GAAG,CAAC,GAAG,GAAG,CAAC,gBAAgB,CAAC,GAAG,CAAC,MAAM,QAAQ;QAC9C,GAAG,CAAC,EAAE,GAAG,CAAC,gBAAgB,CAAC,GAAG,MAAM,MAAM,CAAC,CAAC;QAC5C,GAAG,CAAC,EAAE,GAAG,CAAC,gBAAgB,CAAC,GAAG,MAAM,MAAM,CAAC,CAAC;QAC5C,GAAG,CAAC,GAAG,GAAG,MAAM,gBAAgB,CAAC,GAAG,MAAM,MAAM,CAAC,CAAC;QAClD,GAAG,CAAC,GAAG,GAAG,CAAC,gBAAgB,CAAC,GAAG,CAAC,MAAM,QAAQ;QAC9C,GAAG,CAAC,EAAE,GAAG,CAAC,gBAAgB,CAAC,GAAG,MAAM,MAAM,CAAC,CAAC;QAC5C,GAAG,CAAC,EAAE,GAAG,CAAC,gBAAgB,CAAC,GAAG,MAAM,MAAM,CAAC,CAAC;QAC5C,GAAG,CAAC,GAAG,GAAG,CAAC,gBAAgB,CAAC,GAAG,MAAM,MAAM,CAAC,CAAC;QAC7C,GAAG,CAAC,GAAG,GAAG,MAAM,gBAAgB,CAAC,GAAG,CAAC,MAAM,QAAQ;QACnD,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,eAAe,IAAI,CAAC,UAAU;IAC7D;AACF;;CAIA,sCAAsC","ignoreList":[0]}},
    {"offset": {"line": 905, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 911, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/objects/Lensflare.js"],"sourcesContent":["import { BufferGeometry, InterleavedBuffer, InterleavedBufferAttribute, Mesh, MeshBasicMaterial, Vector3, Texture, NearestFilter, RawShaderMaterial, Color, Vector2, AdditiveBlending, Box2, Vector4 } from \"three\";\nconst Lensflare = /* @__PURE__ */ (() => {\n  class Lensflare2 extends Mesh {\n    constructor() {\n      super(Lensflare2.Geometry, new MeshBasicMaterial({ opacity: 0, transparent: true }));\n      this.isLensflare = true;\n      this.type = \"Lensflare\";\n      this.frustumCulled = false;\n      this.renderOrder = Infinity;\n      const positionScreen = new Vector3();\n      const positionView = new Vector3();\n      const tempMap = new Texture({ width: 16, height: 16 });\n      tempMap.isFramebufferTexture = true;\n      tempMap.magFilter = NearestFilter;\n      tempMap.minFilter = NearestFilter;\n      tempMap.generateMipmaps = false;\n      tempMap.needsUpdate = true;\n      const occlusionMap = new Texture({ width: 16, height: 16 });\n      occlusionMap.isFramebufferTexture = true;\n      occlusionMap.magFilter = NearestFilter;\n      occlusionMap.minFilter = NearestFilter;\n      occlusionMap.generateMipmaps = false;\n      occlusionMap.needsUpdate = true;\n      const geometry = Lensflare2.Geometry;\n      const material1a = new RawShaderMaterial({\n        uniforms: {\n          scale: { value: null },\n          screenPosition: { value: null }\n        },\n        vertexShader: (\n          /* glsl */\n          `\n\n\t\t\t\tprecision highp float;\n\n\t\t\t\tuniform vec3 screenPosition;\n\t\t\t\tuniform vec2 scale;\n\n\t\t\t\tattribute vec3 position;\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tgl_Position = vec4( position.xy * scale + screenPosition.xy, screenPosition.z, 1.0 );\n\n\t\t\t\t}`\n        ),\n        fragmentShader: (\n          /* glsl */\n          `\n\n\t\t\t\tprecision highp float;\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tgl_FragColor = vec4( 1.0, 0.0, 1.0, 1.0 );\n\n\t\t\t\t}`\n        ),\n        depthTest: true,\n        depthWrite: false,\n        transparent: false\n      });\n      const material1b = new RawShaderMaterial({\n        uniforms: {\n          map: { value: tempMap },\n          scale: { value: null },\n          screenPosition: { value: null }\n        },\n        vertexShader: (\n          /* glsl */\n          `\n\n\t\t\t\tprecision highp float;\n\n\t\t\t\tuniform vec3 screenPosition;\n\t\t\t\tuniform vec2 scale;\n\n\t\t\t\tattribute vec3 position;\n\t\t\t\tattribute vec2 uv;\n\n\t\t\t\tvarying vec2 vUV;\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvUV = uv;\n\n\t\t\t\t\tgl_Position = vec4( position.xy * scale + screenPosition.xy, screenPosition.z, 1.0 );\n\n\t\t\t\t}`\n        ),\n        fragmentShader: (\n          /* glsl */\n          `\n\n\t\t\t\tprecision highp float;\n\n\t\t\t\tuniform sampler2D map;\n\n\t\t\t\tvarying vec2 vUV;\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tgl_FragColor = texture2D( map, vUV );\n\n\t\t\t\t}`\n        ),\n        depthTest: false,\n        depthWrite: false,\n        transparent: false\n      });\n      const mesh1 = new Mesh(geometry, material1a);\n      const elements = [];\n      const shader = LensflareElement.Shader;\n      const material2 = new RawShaderMaterial({\n        uniforms: {\n          map: { value: null },\n          occlusionMap: { value: occlusionMap },\n          color: { value: new Color(16777215) },\n          scale: { value: new Vector2() },\n          screenPosition: { value: new Vector3() }\n        },\n        vertexShader: shader.vertexShader,\n        fragmentShader: shader.fragmentShader,\n        blending: AdditiveBlending,\n        transparent: true,\n        depthWrite: false\n      });\n      const mesh2 = new Mesh(geometry, material2);\n      this.addElement = function(element) {\n        elements.push(element);\n      };\n      const scale = new Vector2();\n      const screenPositionPixels = new Vector2();\n      const validArea = new Box2();\n      const viewport = new Vector4();\n      this.onBeforeRender = function(renderer, scene, camera) {\n        renderer.getCurrentViewport(viewport);\n        const invAspect = viewport.w / viewport.z;\n        const halfViewportWidth = viewport.z / 2;\n        const halfViewportHeight = viewport.w / 2;\n        let size = 16 / viewport.w;\n        scale.set(size * invAspect, size);\n        validArea.min.set(viewport.x, viewport.y);\n        validArea.max.set(viewport.x + (viewport.z - 16), viewport.y + (viewport.w - 16));\n        positionView.setFromMatrixPosition(this.matrixWorld);\n        positionView.applyMatrix4(camera.matrixWorldInverse);\n        if (positionView.z > 0)\n          return;\n        positionScreen.copy(positionView).applyMatrix4(camera.projectionMatrix);\n        screenPositionPixels.x = viewport.x + positionScreen.x * halfViewportWidth + halfViewportWidth - 8;\n        screenPositionPixels.y = viewport.y + positionScreen.y * halfViewportHeight + halfViewportHeight - 8;\n        if (validArea.containsPoint(screenPositionPixels)) {\n          renderer.copyFramebufferToTexture(screenPositionPixels, tempMap);\n          let uniforms = material1a.uniforms;\n          uniforms[\"scale\"].value = scale;\n          uniforms[\"screenPosition\"].value = positionScreen;\n          renderer.renderBufferDirect(camera, null, geometry, material1a, mesh1, null);\n          renderer.copyFramebufferToTexture(screenPositionPixels, occlusionMap);\n          uniforms = material1b.uniforms;\n          uniforms[\"scale\"].value = scale;\n          uniforms[\"screenPosition\"].value = positionScreen;\n          renderer.renderBufferDirect(camera, null, geometry, material1b, mesh1, null);\n          const vecX = -positionScreen.x * 2;\n          const vecY = -positionScreen.y * 2;\n          for (let i = 0, l = elements.length; i < l; i++) {\n            const element = elements[i];\n            const uniforms2 = material2.uniforms;\n            uniforms2[\"color\"].value.copy(element.color);\n            uniforms2[\"map\"].value = element.texture;\n            uniforms2[\"screenPosition\"].value.x = positionScreen.x + vecX * element.distance;\n            uniforms2[\"screenPosition\"].value.y = positionScreen.y + vecY * element.distance;\n            size = element.size / viewport.w;\n            const invAspect2 = viewport.w / viewport.z;\n            uniforms2[\"scale\"].value.set(size * invAspect2, size);\n            material2.uniformsNeedUpdate = true;\n            renderer.renderBufferDirect(camera, null, geometry, material2, mesh2, null);\n          }\n        }\n      };\n      this.dispose = function() {\n        material1a.dispose();\n        material1b.dispose();\n        material2.dispose();\n        tempMap.dispose();\n        occlusionMap.dispose();\n        for (let i = 0, l = elements.length; i < l; i++) {\n          elements[i].texture.dispose();\n        }\n      };\n    }\n  }\n  const _geometry = new BufferGeometry();\n  const interleavedBuffer = new InterleavedBuffer(\n    new Float32Array([-1, -1, 0, 0, 0, 1, -1, 0, 1, 0, 1, 1, 0, 1, 1, -1, 1, 0, 0, 1]),\n    5\n  );\n  _geometry.setIndex([0, 1, 2, 0, 2, 3]);\n  _geometry.setAttribute(\"position\", new InterleavedBufferAttribute(interleavedBuffer, 3, 0, false));\n  _geometry.setAttribute(\"uv\", new InterleavedBufferAttribute(interleavedBuffer, 2, 3, false));\n  Lensflare2.Geometry = _geometry;\n  return Lensflare2;\n})();\nconst LensflareElement = /* @__PURE__ */ (() => {\n  class LensflareElement2 {\n    constructor(texture, size = 1, distance = 0, color = new Color(16777215)) {\n      this.texture = texture;\n      this.size = size;\n      this.distance = distance;\n      this.color = color;\n    }\n  }\n  LensflareElement2.Shader = {\n    uniforms: {\n      map: { value: null },\n      occlusionMap: { value: null },\n      color: { value: null },\n      scale: { value: null },\n      screenPosition: { value: null }\n    },\n    vertexShader: (\n      /* glsl */\n      `\n\n      precision highp float;\n\n      uniform vec3 screenPosition;\n      uniform vec2 scale;\n\n      uniform sampler2D occlusionMap;\n\n      attribute vec3 position;\n      attribute vec2 uv;\n\n      varying vec2 vUV;\n      varying float vVisibility;\n\n      void main() {\n\n        vUV = uv;\n\n        vec2 pos = position.xy;\n\n        vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\n        visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\n        visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\n        visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\n        visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\n        visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\n        visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\n        visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\n        visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\n\n        vVisibility =        visibility.r / 9.0;\n        vVisibility *= 1.0 - visibility.g / 9.0;\n        vVisibility *=       visibility.b / 9.0;\n\n        gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n\n      }\n    `\n    ),\n    fragmentShader: (\n      /* glsl */\n      `\n\n      precision highp float;\n\n      uniform sampler2D map;\n      uniform vec3 color;\n\n      varying vec2 vUV;\n      varying float vVisibility;\n\n      void main() {\n\n        vec4 texture = texture2D( map, vUV );\n        texture.a *= vVisibility;\n        gl_FragColor = texture;\n        gl_FragColor.rgb *= color;\n\n      }\n    `\n    )\n  };\n  return LensflareElement2;\n})();\nexport {\n  Lensflare,\n  LensflareElement\n};\n//# sourceMappingURL=Lensflare.js.map\n"],"names":[],"mappings":";;;;AAAA;;AACA,MAAM,YAAY,aAAa,GAAG,CAAC;IACjC,MAAM,mBAAmB,+IAAA,CAAA,OAAI;QAC3B,aAAc;YACZ,KAAK,CAAC,WAAW,QAAQ,EAAE,IAAI,+IAAA,CAAA,oBAAiB,CAAC;gBAAE,SAAS;gBAAG,aAAa;YAAK;YACjF,IAAI,CAAC,WAAW,GAAG;YACnB,IAAI,CAAC,IAAI,GAAG;YACZ,IAAI,CAAC,aAAa,GAAG;YACrB,IAAI,CAAC,WAAW,GAAG;YACnB,MAAM,iBAAiB,IAAI,+IAAA,CAAA,UAAO;YAClC,MAAM,eAAe,IAAI,+IAAA,CAAA,UAAO;YAChC,MAAM,UAAU,IAAI,+IAAA,CAAA,UAAO,CAAC;gBAAE,OAAO;gBAAI,QAAQ;YAAG;YACpD,QAAQ,oBAAoB,GAAG;YAC/B,QAAQ,SAAS,GAAG,+IAAA,CAAA,gBAAa;YACjC,QAAQ,SAAS,GAAG,+IAAA,CAAA,gBAAa;YACjC,QAAQ,eAAe,GAAG;YAC1B,QAAQ,WAAW,GAAG;YACtB,MAAM,eAAe,IAAI,+IAAA,CAAA,UAAO,CAAC;gBAAE,OAAO;gBAAI,QAAQ;YAAG;YACzD,aAAa,oBAAoB,GAAG;YACpC,aAAa,SAAS,GAAG,+IAAA,CAAA,gBAAa;YACtC,aAAa,SAAS,GAAG,+IAAA,CAAA,gBAAa;YACtC,aAAa,eAAe,GAAG;YAC/B,aAAa,WAAW,GAAG;YAC3B,MAAM,WAAW,WAAW,QAAQ;YACpC,MAAM,aAAa,IAAI,+IAAA,CAAA,oBAAiB,CAAC;gBACvC,UAAU;oBACR,OAAO;wBAAE,OAAO;oBAAK;oBACrB,gBAAgB;wBAAE,OAAO;oBAAK;gBAChC;gBACA,cACE,QAAQ,GACR,CAAC;;;;;;;;;;;;;KAaN,CAAC;gBAEE,gBACE,QAAQ,GACR,CAAC;;;;;;;;KAQN,CAAC;gBAEE,WAAW;gBACX,YAAY;gBACZ,aAAa;YACf;YACA,MAAM,aAAa,IAAI,+IAAA,CAAA,oBAAiB,CAAC;gBACvC,UAAU;oBACR,KAAK;wBAAE,OAAO;oBAAQ;oBACtB,OAAO;wBAAE,OAAO;oBAAK;oBACrB,gBAAgB;wBAAE,OAAO;oBAAK;gBAChC;gBACA,cACE,QAAQ,GACR,CAAC;;;;;;;;;;;;;;;;;;KAkBN,CAAC;gBAEE,gBACE,QAAQ,GACR,CAAC;;;;;;;;;;;;KAYN,CAAC;gBAEE,WAAW;gBACX,YAAY;gBACZ,aAAa;YACf;YACA,MAAM,QAAQ,IAAI,+IAAA,CAAA,OAAI,CAAC,UAAU;YACjC,MAAM,WAAW,EAAE;YACnB,MAAM,SAAS,iBAAiB,MAAM;YACtC,MAAM,YAAY,IAAI,+IAAA,CAAA,oBAAiB,CAAC;gBACtC,UAAU;oBACR,KAAK;wBAAE,OAAO;oBAAK;oBACnB,cAAc;wBAAE,OAAO;oBAAa;oBACpC,OAAO;wBAAE,OAAO,IAAI,+IAAA,CAAA,QAAK,CAAC;oBAAU;oBACpC,OAAO;wBAAE,OAAO,IAAI,+IAAA,CAAA,UAAO;oBAAG;oBAC9B,gBAAgB;wBAAE,OAAO,IAAI,+IAAA,CAAA,UAAO;oBAAG;gBACzC;gBACA,cAAc,OAAO,YAAY;gBACjC,gBAAgB,OAAO,cAAc;gBACrC,UAAU,+IAAA,CAAA,mBAAgB;gBAC1B,aAAa;gBACb,YAAY;YACd;YACA,MAAM,QAAQ,IAAI,+IAAA,CAAA,OAAI,CAAC,UAAU;YACjC,IAAI,CAAC,UAAU,GAAG,SAAS,OAAO;gBAChC,SAAS,IAAI,CAAC;YAChB;YACA,MAAM,QAAQ,IAAI,+IAAA,CAAA,UAAO;YACzB,MAAM,uBAAuB,IAAI,+IAAA,CAAA,UAAO;YACxC,MAAM,YAAY,IAAI,+IAAA,CAAA,OAAI;YAC1B,MAAM,WAAW,IAAI,+IAAA,CAAA,UAAO;YAC5B,IAAI,CAAC,cAAc,GAAG,SAAS,QAAQ,EAAE,KAAK,EAAE,MAAM;gBACpD,SAAS,kBAAkB,CAAC;gBAC5B,MAAM,YAAY,SAAS,CAAC,GAAG,SAAS,CAAC;gBACzC,MAAM,oBAAoB,SAAS,CAAC,GAAG;gBACvC,MAAM,qBAAqB,SAAS,CAAC,GAAG;gBACxC,IAAI,OAAO,KAAK,SAAS,CAAC;gBAC1B,MAAM,GAAG,CAAC,OAAO,WAAW;gBAC5B,UAAU,GAAG,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE,SAAS,CAAC;gBACxC,UAAU,GAAG,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,EAAE,GAAG,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,EAAE;gBAC/E,aAAa,qBAAqB,CAAC,IAAI,CAAC,WAAW;gBACnD,aAAa,YAAY,CAAC,OAAO,kBAAkB;gBACnD,IAAI,aAAa,CAAC,GAAG,GACnB;gBACF,eAAe,IAAI,CAAC,cAAc,YAAY,CAAC,OAAO,gBAAgB;gBACtE,qBAAqB,CAAC,GAAG,SAAS,CAAC,GAAG,eAAe,CAAC,GAAG,oBAAoB,oBAAoB;gBACjG,qBAAqB,CAAC,GAAG,SAAS,CAAC,GAAG,eAAe,CAAC,GAAG,qBAAqB,qBAAqB;gBACnG,IAAI,UAAU,aAAa,CAAC,uBAAuB;oBACjD,SAAS,wBAAwB,CAAC,sBAAsB;oBACxD,IAAI,WAAW,WAAW,QAAQ;oBAClC,QAAQ,CAAC,QAAQ,CAAC,KAAK,GAAG;oBAC1B,QAAQ,CAAC,iBAAiB,CAAC,KAAK,GAAG;oBACnC,SAAS,kBAAkB,CAAC,QAAQ,MAAM,UAAU,YAAY,OAAO;oBACvE,SAAS,wBAAwB,CAAC,sBAAsB;oBACxD,WAAW,WAAW,QAAQ;oBAC9B,QAAQ,CAAC,QAAQ,CAAC,KAAK,GAAG;oBAC1B,QAAQ,CAAC,iBAAiB,CAAC,KAAK,GAAG;oBACnC,SAAS,kBAAkB,CAAC,QAAQ,MAAM,UAAU,YAAY,OAAO;oBACvE,MAAM,OAAO,CAAC,eAAe,CAAC,GAAG;oBACjC,MAAM,OAAO,CAAC,eAAe,CAAC,GAAG;oBACjC,IAAK,IAAI,IAAI,GAAG,IAAI,SAAS,MAAM,EAAE,IAAI,GAAG,IAAK;wBAC/C,MAAM,UAAU,QAAQ,CAAC,EAAE;wBAC3B,MAAM,YAAY,UAAU,QAAQ;wBACpC,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,KAAK;wBAC3C,SAAS,CAAC,MAAM,CAAC,KAAK,GAAG,QAAQ,OAAO;wBACxC,SAAS,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,GAAG,eAAe,CAAC,GAAG,OAAO,QAAQ,QAAQ;wBAChF,SAAS,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,GAAG,eAAe,CAAC,GAAG,OAAO,QAAQ,QAAQ;wBAChF,OAAO,QAAQ,IAAI,GAAG,SAAS,CAAC;wBAChC,MAAM,aAAa,SAAS,CAAC,GAAG,SAAS,CAAC;wBAC1C,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,YAAY;wBAChD,UAAU,kBAAkB,GAAG;wBAC/B,SAAS,kBAAkB,CAAC,QAAQ,MAAM,UAAU,WAAW,OAAO;oBACxE;gBACF;YACF;YACA,IAAI,CAAC,OAAO,GAAG;gBACb,WAAW,OAAO;gBAClB,WAAW,OAAO;gBAClB,UAAU,OAAO;gBACjB,QAAQ,OAAO;gBACf,aAAa,OAAO;gBACpB,IAAK,IAAI,IAAI,GAAG,IAAI,SAAS,MAAM,EAAE,IAAI,GAAG,IAAK;oBAC/C,QAAQ,CAAC,EAAE,CAAC,OAAO,CAAC,OAAO;gBAC7B;YACF;QACF;IACF;IACA,MAAM,YAAY,IAAI,+IAAA,CAAA,iBAAc;IACpC,MAAM,oBAAoB,IAAI,+IAAA,CAAA,oBAAiB,CAC7C,IAAI,aAAa;QAAC,CAAC;QAAG,CAAC;QAAG;QAAG;QAAG;QAAG;QAAG,CAAC;QAAG;QAAG;QAAG;QAAG;QAAG;QAAG;QAAG;QAAG;QAAG,CAAC;QAAG;QAAG;QAAG;QAAG;KAAE,GACjF;IAEF,UAAU,QAAQ,CAAC;QAAC;QAAG;QAAG;QAAG;QAAG;QAAG;KAAE;IACrC,UAAU,YAAY,CAAC,YAAY,IAAI,+IAAA,CAAA,6BAA0B,CAAC,mBAAmB,GAAG,GAAG;IAC3F,UAAU,YAAY,CAAC,MAAM,IAAI,+IAAA,CAAA,6BAA0B,CAAC,mBAAmB,GAAG,GAAG;IACrF,WAAW,QAAQ,GAAG;IACtB,OAAO;AACT,CAAC;AACD,MAAM,mBAAmB,aAAa,GAAG,CAAC;IACxC,MAAM;QACJ,YAAY,OAAO,EAAE,OAAO,CAAC,EAAE,WAAW,CAAC,EAAE,QAAQ,IAAI,+IAAA,CAAA,QAAK,CAAC,SAAS,CAAE;YACxE,IAAI,CAAC,OAAO,GAAG;YACf,IAAI,CAAC,IAAI,GAAG;YACZ,IAAI,CAAC,QAAQ,GAAG;YAChB,IAAI,CAAC,KAAK,GAAG;QACf;IACF;IACA,kBAAkB,MAAM,GAAG;QACzB,UAAU;YACR,KAAK;gBAAE,OAAO;YAAK;YACnB,cAAc;gBAAE,OAAO;YAAK;YAC5B,OAAO;gBAAE,OAAO;YAAK;YACrB,OAAO;gBAAE,OAAO;YAAK;YACrB,gBAAgB;gBAAE,OAAO;YAAK;QAChC;QACA,cACE,QAAQ,GACR,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAsCH,CAAC;QAED,gBACE,QAAQ,GACR,CAAC;;;;;;;;;;;;;;;;;;IAkBH,CAAC;IAEH;IACA,OAAO;AACT,CAAC;;CAKD,qCAAqC","ignoreList":[0]}},
    {"offset": {"line": 1249, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1255, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/objects/MarchingCubes.js"],"sourcesContent":["import { Mesh, BufferGeometry, BufferAttribute, DynamicDrawUsage, Sphere, Vector3, Color } from \"three\";\nclass MarchingCubes extends Mesh {\n  constructor(resolution, material, enableUvs = false, enableColors = false, maxPolyCount = 1e4) {\n    const geometry = new BufferGeometry();\n    super(geometry, material);\n    this.isMarchingCubes = true;\n    const scope = this;\n    const vlist = new Float32Array(12 * 3);\n    const nlist = new Float32Array(12 * 3);\n    const clist = new Float32Array(12 * 3);\n    this.enableUvs = enableUvs;\n    this.enableColors = enableColors;\n    this.init = function(resolution2) {\n      this.resolution = resolution2;\n      this.isolation = 80;\n      this.size = resolution2;\n      this.size2 = this.size * this.size;\n      this.size3 = this.size2 * this.size;\n      this.halfsize = this.size / 2;\n      this.delta = 2 / this.size;\n      this.yd = this.size;\n      this.zd = this.size2;\n      this.field = new Float32Array(this.size3);\n      this.normal_cache = new Float32Array(this.size3 * 3);\n      this.palette = new Float32Array(this.size3 * 3);\n      this.count = 0;\n      const maxVertexCount = maxPolyCount * 3;\n      this.positionArray = new Float32Array(maxVertexCount * 3);\n      const positionAttribute = new BufferAttribute(this.positionArray, 3);\n      positionAttribute.setUsage(DynamicDrawUsage);\n      geometry.setAttribute(\"position\", positionAttribute);\n      this.normalArray = new Float32Array(maxVertexCount * 3);\n      const normalAttribute = new BufferAttribute(this.normalArray, 3);\n      normalAttribute.setUsage(DynamicDrawUsage);\n      geometry.setAttribute(\"normal\", normalAttribute);\n      if (this.enableUvs) {\n        this.uvArray = new Float32Array(maxVertexCount * 2);\n        const uvAttribute = new BufferAttribute(this.uvArray, 2);\n        uvAttribute.setUsage(DynamicDrawUsage);\n        geometry.setAttribute(\"uv\", uvAttribute);\n      }\n      if (this.enableColors) {\n        this.colorArray = new Float32Array(maxVertexCount * 3);\n        const colorAttribute = new BufferAttribute(this.colorArray, 3);\n        colorAttribute.setUsage(DynamicDrawUsage);\n        geometry.setAttribute(\"color\", colorAttribute);\n      }\n      geometry.boundingSphere = new Sphere(new Vector3(), 1);\n    };\n    function lerp(a, b, t) {\n      return a + (b - a) * t;\n    }\n    function VIntX(q, offset, isol, x, y, z, valp1, valp2, c_offset1, c_offset2) {\n      const mu = (isol - valp1) / (valp2 - valp1), nc = scope.normal_cache;\n      vlist[offset + 0] = x + mu * scope.delta;\n      vlist[offset + 1] = y;\n      vlist[offset + 2] = z;\n      nlist[offset + 0] = lerp(nc[q + 0], nc[q + 3], mu);\n      nlist[offset + 1] = lerp(nc[q + 1], nc[q + 4], mu);\n      nlist[offset + 2] = lerp(nc[q + 2], nc[q + 5], mu);\n      clist[offset + 0] = lerp(scope.palette[c_offset1 * 3 + 0], scope.palette[c_offset2 * 3 + 0], mu);\n      clist[offset + 1] = lerp(scope.palette[c_offset1 * 3 + 1], scope.palette[c_offset2 * 3 + 1], mu);\n      clist[offset + 2] = lerp(scope.palette[c_offset1 * 3 + 2], scope.palette[c_offset2 * 3 + 2], mu);\n    }\n    function VIntY(q, offset, isol, x, y, z, valp1, valp2, c_offset1, c_offset2) {\n      const mu = (isol - valp1) / (valp2 - valp1), nc = scope.normal_cache;\n      vlist[offset + 0] = x;\n      vlist[offset + 1] = y + mu * scope.delta;\n      vlist[offset + 2] = z;\n      const q2 = q + scope.yd * 3;\n      nlist[offset + 0] = lerp(nc[q + 0], nc[q2 + 0], mu);\n      nlist[offset + 1] = lerp(nc[q + 1], nc[q2 + 1], mu);\n      nlist[offset + 2] = lerp(nc[q + 2], nc[q2 + 2], mu);\n      clist[offset + 0] = lerp(scope.palette[c_offset1 * 3 + 0], scope.palette[c_offset2 * 3 + 0], mu);\n      clist[offset + 1] = lerp(scope.palette[c_offset1 * 3 + 1], scope.palette[c_offset2 * 3 + 1], mu);\n      clist[offset + 2] = lerp(scope.palette[c_offset1 * 3 + 2], scope.palette[c_offset2 * 3 + 2], mu);\n    }\n    function VIntZ(q, offset, isol, x, y, z, valp1, valp2, c_offset1, c_offset2) {\n      const mu = (isol - valp1) / (valp2 - valp1), nc = scope.normal_cache;\n      vlist[offset + 0] = x;\n      vlist[offset + 1] = y;\n      vlist[offset + 2] = z + mu * scope.delta;\n      const q2 = q + scope.zd * 3;\n      nlist[offset + 0] = lerp(nc[q + 0], nc[q2 + 0], mu);\n      nlist[offset + 1] = lerp(nc[q + 1], nc[q2 + 1], mu);\n      nlist[offset + 2] = lerp(nc[q + 2], nc[q2 + 2], mu);\n      clist[offset + 0] = lerp(scope.palette[c_offset1 * 3 + 0], scope.palette[c_offset2 * 3 + 0], mu);\n      clist[offset + 1] = lerp(scope.palette[c_offset1 * 3 + 1], scope.palette[c_offset2 * 3 + 1], mu);\n      clist[offset + 2] = lerp(scope.palette[c_offset1 * 3 + 2], scope.palette[c_offset2 * 3 + 2], mu);\n    }\n    function compNorm(q) {\n      const q3 = q * 3;\n      if (scope.normal_cache[q3] === 0) {\n        scope.normal_cache[q3 + 0] = scope.field[q - 1] - scope.field[q + 1];\n        scope.normal_cache[q3 + 1] = scope.field[q - scope.yd] - scope.field[q + scope.yd];\n        scope.normal_cache[q3 + 2] = scope.field[q - scope.zd] - scope.field[q + scope.zd];\n      }\n    }\n    function polygonize(fx, fy, fz, q, isol) {\n      const q1 = q + 1, qy = q + scope.yd, qz = q + scope.zd, q1y = q1 + scope.yd, q1z = q1 + scope.zd, qyz = q + scope.yd + scope.zd, q1yz = q1 + scope.yd + scope.zd;\n      let cubeindex = 0;\n      const field0 = scope.field[q], field1 = scope.field[q1], field2 = scope.field[qy], field3 = scope.field[q1y], field4 = scope.field[qz], field5 = scope.field[q1z], field6 = scope.field[qyz], field7 = scope.field[q1yz];\n      if (field0 < isol)\n        cubeindex |= 1;\n      if (field1 < isol)\n        cubeindex |= 2;\n      if (field2 < isol)\n        cubeindex |= 8;\n      if (field3 < isol)\n        cubeindex |= 4;\n      if (field4 < isol)\n        cubeindex |= 16;\n      if (field5 < isol)\n        cubeindex |= 32;\n      if (field6 < isol)\n        cubeindex |= 128;\n      if (field7 < isol)\n        cubeindex |= 64;\n      const bits = edgeTable[cubeindex];\n      if (bits === 0)\n        return 0;\n      const d = scope.delta, fx2 = fx + d, fy2 = fy + d, fz2 = fz + d;\n      if (bits & 1) {\n        compNorm(q);\n        compNorm(q1);\n        VIntX(q * 3, 0, isol, fx, fy, fz, field0, field1, q, q1);\n      }\n      if (bits & 2) {\n        compNorm(q1);\n        compNorm(q1y);\n        VIntY(q1 * 3, 3, isol, fx2, fy, fz, field1, field3, q1, q1y);\n      }\n      if (bits & 4) {\n        compNorm(qy);\n        compNorm(q1y);\n        VIntX(qy * 3, 6, isol, fx, fy2, fz, field2, field3, qy, q1y);\n      }\n      if (bits & 8) {\n        compNorm(q);\n        compNorm(qy);\n        VIntY(q * 3, 9, isol, fx, fy, fz, field0, field2, q, qy);\n      }\n      if (bits & 16) {\n        compNorm(qz);\n        compNorm(q1z);\n        VIntX(qz * 3, 12, isol, fx, fy, fz2, field4, field5, qz, q1z);\n      }\n      if (bits & 32) {\n        compNorm(q1z);\n        compNorm(q1yz);\n        VIntY(q1z * 3, 15, isol, fx2, fy, fz2, field5, field7, q1z, q1yz);\n      }\n      if (bits & 64) {\n        compNorm(qyz);\n        compNorm(q1yz);\n        VIntX(qyz * 3, 18, isol, fx, fy2, fz2, field6, field7, qyz, q1yz);\n      }\n      if (bits & 128) {\n        compNorm(qz);\n        compNorm(qyz);\n        VIntY(qz * 3, 21, isol, fx, fy, fz2, field4, field6, qz, qyz);\n      }\n      if (bits & 256) {\n        compNorm(q);\n        compNorm(qz);\n        VIntZ(q * 3, 24, isol, fx, fy, fz, field0, field4, q, qz);\n      }\n      if (bits & 512) {\n        compNorm(q1);\n        compNorm(q1z);\n        VIntZ(q1 * 3, 27, isol, fx2, fy, fz, field1, field5, q1, q1z);\n      }\n      if (bits & 1024) {\n        compNorm(q1y);\n        compNorm(q1yz);\n        VIntZ(q1y * 3, 30, isol, fx2, fy2, fz, field3, field7, q1y, q1yz);\n      }\n      if (bits & 2048) {\n        compNorm(qy);\n        compNorm(qyz);\n        VIntZ(qy * 3, 33, isol, fx, fy2, fz, field2, field6, qy, qyz);\n      }\n      cubeindex <<= 4;\n      let o1, o2, o3, numtris = 0, i = 0;\n      while (triTable[cubeindex + i] != -1) {\n        o1 = cubeindex + i;\n        o2 = o1 + 1;\n        o3 = o1 + 2;\n        posnormtriv(vlist, nlist, clist, 3 * triTable[o1], 3 * triTable[o2], 3 * triTable[o3]);\n        i += 3;\n        numtris++;\n      }\n      return numtris;\n    }\n    function posnormtriv(pos, norm, colors, o1, o2, o3) {\n      const c = scope.count * 3;\n      scope.positionArray[c + 0] = pos[o1];\n      scope.positionArray[c + 1] = pos[o1 + 1];\n      scope.positionArray[c + 2] = pos[o1 + 2];\n      scope.positionArray[c + 3] = pos[o2];\n      scope.positionArray[c + 4] = pos[o2 + 1];\n      scope.positionArray[c + 5] = pos[o2 + 2];\n      scope.positionArray[c + 6] = pos[o3];\n      scope.positionArray[c + 7] = pos[o3 + 1];\n      scope.positionArray[c + 8] = pos[o3 + 2];\n      if (scope.material.flatShading === true) {\n        const nx = (norm[o1 + 0] + norm[o2 + 0] + norm[o3 + 0]) / 3;\n        const ny = (norm[o1 + 1] + norm[o2 + 1] + norm[o3 + 1]) / 3;\n        const nz = (norm[o1 + 2] + norm[o2 + 2] + norm[o3 + 2]) / 3;\n        scope.normalArray[c + 0] = nx;\n        scope.normalArray[c + 1] = ny;\n        scope.normalArray[c + 2] = nz;\n        scope.normalArray[c + 3] = nx;\n        scope.normalArray[c + 4] = ny;\n        scope.normalArray[c + 5] = nz;\n        scope.normalArray[c + 6] = nx;\n        scope.normalArray[c + 7] = ny;\n        scope.normalArray[c + 8] = nz;\n      } else {\n        scope.normalArray[c + 0] = norm[o1 + 0];\n        scope.normalArray[c + 1] = norm[o1 + 1];\n        scope.normalArray[c + 2] = norm[o1 + 2];\n        scope.normalArray[c + 3] = norm[o2 + 0];\n        scope.normalArray[c + 4] = norm[o2 + 1];\n        scope.normalArray[c + 5] = norm[o2 + 2];\n        scope.normalArray[c + 6] = norm[o3 + 0];\n        scope.normalArray[c + 7] = norm[o3 + 1];\n        scope.normalArray[c + 8] = norm[o3 + 2];\n      }\n      if (scope.enableUvs) {\n        const d = scope.count * 2;\n        scope.uvArray[d + 0] = pos[o1 + 0];\n        scope.uvArray[d + 1] = pos[o1 + 2];\n        scope.uvArray[d + 2] = pos[o2 + 0];\n        scope.uvArray[d + 3] = pos[o2 + 2];\n        scope.uvArray[d + 4] = pos[o3 + 0];\n        scope.uvArray[d + 5] = pos[o3 + 2];\n      }\n      if (scope.enableColors) {\n        scope.colorArray[c + 0] = colors[o1 + 0];\n        scope.colorArray[c + 1] = colors[o1 + 1];\n        scope.colorArray[c + 2] = colors[o1 + 2];\n        scope.colorArray[c + 3] = colors[o2 + 0];\n        scope.colorArray[c + 4] = colors[o2 + 1];\n        scope.colorArray[c + 5] = colors[o2 + 2];\n        scope.colorArray[c + 6] = colors[o3 + 0];\n        scope.colorArray[c + 7] = colors[o3 + 1];\n        scope.colorArray[c + 8] = colors[o3 + 2];\n      }\n      scope.count += 3;\n    }\n    this.addBall = function(ballx, bally, ballz, strength, subtract, colors) {\n      const sign = Math.sign(strength);\n      strength = Math.abs(strength);\n      const userDefineColor = !(colors === void 0 || colors === null);\n      let ballColor = new Color(ballx, bally, ballz);\n      if (userDefineColor) {\n        try {\n          ballColor = colors instanceof Color ? colors : Array.isArray(colors) ? new Color(\n            Math.min(Math.abs(colors[0]), 1),\n            Math.min(Math.abs(colors[1]), 1),\n            Math.min(Math.abs(colors[2]), 1)\n          ) : new Color(colors);\n        } catch (err) {\n          ballColor = new Color(ballx, bally, ballz);\n        }\n      }\n      const radius = this.size * Math.sqrt(strength / subtract), zs = ballz * this.size, ys = bally * this.size, xs = ballx * this.size;\n      let min_z = Math.floor(zs - radius);\n      if (min_z < 1)\n        min_z = 1;\n      let max_z = Math.floor(zs + radius);\n      if (max_z > this.size - 1)\n        max_z = this.size - 1;\n      let min_y = Math.floor(ys - radius);\n      if (min_y < 1)\n        min_y = 1;\n      let max_y = Math.floor(ys + radius);\n      if (max_y > this.size - 1)\n        max_y = this.size - 1;\n      let min_x = Math.floor(xs - radius);\n      if (min_x < 1)\n        min_x = 1;\n      let max_x = Math.floor(xs + radius);\n      if (max_x > this.size - 1)\n        max_x = this.size - 1;\n      let x, y, z, y_offset, z_offset, fx, fy, fz, fz2, fy2, val;\n      for (z = min_z; z < max_z; z++) {\n        z_offset = this.size2 * z;\n        fz = z / this.size - ballz;\n        fz2 = fz * fz;\n        for (y = min_y; y < max_y; y++) {\n          y_offset = z_offset + this.size * y;\n          fy = y / this.size - bally;\n          fy2 = fy * fy;\n          for (x = min_x; x < max_x; x++) {\n            fx = x / this.size - ballx;\n            val = strength / (1e-6 + fx * fx + fy2 + fz2) - subtract;\n            if (val > 0) {\n              this.field[y_offset + x] += val * sign;\n              const ratio = Math.sqrt((x - xs) * (x - xs) + (y - ys) * (y - ys) + (z - zs) * (z - zs)) / radius;\n              const contrib = 1 - ratio * ratio * ratio * (ratio * (ratio * 6 - 15) + 10);\n              this.palette[(y_offset + x) * 3 + 0] += ballColor.r * contrib;\n              this.palette[(y_offset + x) * 3 + 1] += ballColor.g * contrib;\n              this.palette[(y_offset + x) * 3 + 2] += ballColor.b * contrib;\n            }\n          }\n        }\n      }\n    };\n    this.addPlaneX = function(strength, subtract) {\n      const size = this.size, yd = this.yd, zd = this.zd, field = this.field;\n      let x, y, z, xx, val, xdiv, cxy, dist = size * Math.sqrt(strength / subtract);\n      if (dist > size)\n        dist = size;\n      for (x = 0; x < dist; x++) {\n        xdiv = x / size;\n        xx = xdiv * xdiv;\n        val = strength / (1e-4 + xx) - subtract;\n        if (val > 0) {\n          for (y = 0; y < size; y++) {\n            cxy = x + y * yd;\n            for (z = 0; z < size; z++) {\n              field[zd * z + cxy] += val;\n            }\n          }\n        }\n      }\n    };\n    this.addPlaneY = function(strength, subtract) {\n      const size = this.size, yd = this.yd, zd = this.zd, field = this.field;\n      let x, y, z, yy, val, ydiv, cy, cxy, dist = size * Math.sqrt(strength / subtract);\n      if (dist > size)\n        dist = size;\n      for (y = 0; y < dist; y++) {\n        ydiv = y / size;\n        yy = ydiv * ydiv;\n        val = strength / (1e-4 + yy) - subtract;\n        if (val > 0) {\n          cy = y * yd;\n          for (x = 0; x < size; x++) {\n            cxy = cy + x;\n            for (z = 0; z < size; z++)\n              field[zd * z + cxy] += val;\n          }\n        }\n      }\n    };\n    this.addPlaneZ = function(strength, subtract) {\n      const size = this.size, yd = this.yd, zd = this.zd, field = this.field;\n      let x, y, z, zz, val, zdiv, cz, cyz, dist = size * Math.sqrt(strength / subtract);\n      if (dist > size)\n        dist = size;\n      for (z = 0; z < dist; z++) {\n        zdiv = z / size;\n        zz = zdiv * zdiv;\n        val = strength / (1e-4 + zz) - subtract;\n        if (val > 0) {\n          cz = zd * z;\n          for (y = 0; y < size; y++) {\n            cyz = cz + y * yd;\n            for (x = 0; x < size; x++)\n              field[cyz + x] += val;\n          }\n        }\n      }\n    };\n    this.setCell = function(x, y, z, value) {\n      const index = this.size2 * z + this.size * y + x;\n      this.field[index] = value;\n    };\n    this.getCell = function(x, y, z) {\n      const index = this.size2 * z + this.size * y + x;\n      return this.field[index];\n    };\n    this.blur = function(intensity = 1) {\n      const field = this.field;\n      const fieldCopy = field.slice();\n      const size = this.size;\n      const size2 = this.size2;\n      for (let x = 0; x < size; x++) {\n        for (let y = 0; y < size; y++) {\n          for (let z = 0; z < size; z++) {\n            const index = size2 * z + size * y + x;\n            let val = fieldCopy[index];\n            let count = 1;\n            for (let x2 = -1; x2 <= 1; x2 += 2) {\n              const x3 = x2 + x;\n              if (x3 < 0 || x3 >= size)\n                continue;\n              for (let y2 = -1; y2 <= 1; y2 += 2) {\n                const y3 = y2 + y;\n                if (y3 < 0 || y3 >= size)\n                  continue;\n                for (let z2 = -1; z2 <= 1; z2 += 2) {\n                  const z3 = z2 + z;\n                  if (z3 < 0 || z3 >= size)\n                    continue;\n                  const index2 = size2 * z3 + size * y3 + x3;\n                  const val2 = fieldCopy[index2];\n                  count++;\n                  val += intensity * (val2 - val) / count;\n                }\n              }\n            }\n            field[index] = val;\n          }\n        }\n      }\n    };\n    this.reset = function() {\n      for (let i = 0; i < this.size3; i++) {\n        this.normal_cache[i * 3] = 0;\n        this.field[i] = 0;\n        this.palette[i * 3] = this.palette[i * 3 + 1] = this.palette[i * 3 + 2] = 0;\n      }\n    };\n    this.update = function() {\n      this.count = 0;\n      const smin2 = this.size - 2;\n      for (let z = 1; z < smin2; z++) {\n        const z_offset = this.size2 * z;\n        const fz = (z - this.halfsize) / this.halfsize;\n        for (let y = 1; y < smin2; y++) {\n          const y_offset = z_offset + this.size * y;\n          const fy = (y - this.halfsize) / this.halfsize;\n          for (let x = 1; x < smin2; x++) {\n            const fx = (x - this.halfsize) / this.halfsize;\n            const q = y_offset + x;\n            polygonize(fx, fy, fz, q, this.isolation);\n          }\n        }\n      }\n      this.geometry.setDrawRange(0, this.count);\n      geometry.getAttribute(\"position\").needsUpdate = true;\n      geometry.getAttribute(\"normal\").needsUpdate = true;\n      if (this.enableUvs)\n        geometry.getAttribute(\"uv\").needsUpdate = true;\n      if (this.enableColors)\n        geometry.getAttribute(\"color\").needsUpdate = true;\n      if (this.count / 3 > maxPolyCount)\n        console.warn(\n          \"THREE.MarchingCubes: Geometry buffers too small for rendering. Please create an instance with a higher poly count.\"\n        );\n    };\n    this.init(resolution);\n  }\n}\nconst edgeTable = new Int32Array([\n  0,\n  265,\n  515,\n  778,\n  1030,\n  1295,\n  1541,\n  1804,\n  2060,\n  2309,\n  2575,\n  2822,\n  3082,\n  3331,\n  3593,\n  3840,\n  400,\n  153,\n  915,\n  666,\n  1430,\n  1183,\n  1941,\n  1692,\n  2460,\n  2197,\n  2975,\n  2710,\n  3482,\n  3219,\n  3993,\n  3728,\n  560,\n  825,\n  51,\n  314,\n  1590,\n  1855,\n  1077,\n  1340,\n  2620,\n  2869,\n  2111,\n  2358,\n  3642,\n  3891,\n  3129,\n  3376,\n  928,\n  681,\n  419,\n  170,\n  1958,\n  1711,\n  1445,\n  1196,\n  2988,\n  2725,\n  2479,\n  2214,\n  4010,\n  3747,\n  3497,\n  3232,\n  1120,\n  1385,\n  1635,\n  1898,\n  102,\n  367,\n  613,\n  876,\n  3180,\n  3429,\n  3695,\n  3942,\n  2154,\n  2403,\n  2665,\n  2912,\n  1520,\n  1273,\n  2035,\n  1786,\n  502,\n  255,\n  1013,\n  764,\n  3580,\n  3317,\n  4095,\n  3830,\n  2554,\n  2291,\n  3065,\n  2800,\n  1616,\n  1881,\n  1107,\n  1370,\n  598,\n  863,\n  85,\n  348,\n  3676,\n  3925,\n  3167,\n  3414,\n  2650,\n  2899,\n  2137,\n  2384,\n  1984,\n  1737,\n  1475,\n  1226,\n  966,\n  719,\n  453,\n  204,\n  4044,\n  3781,\n  3535,\n  3270,\n  3018,\n  2755,\n  2505,\n  2240,\n  2240,\n  2505,\n  2755,\n  3018,\n  3270,\n  3535,\n  3781,\n  4044,\n  204,\n  453,\n  719,\n  966,\n  1226,\n  1475,\n  1737,\n  1984,\n  2384,\n  2137,\n  2899,\n  2650,\n  3414,\n  3167,\n  3925,\n  3676,\n  348,\n  85,\n  863,\n  598,\n  1370,\n  1107,\n  1881,\n  1616,\n  2800,\n  3065,\n  2291,\n  2554,\n  3830,\n  4095,\n  3317,\n  3580,\n  764,\n  1013,\n  255,\n  502,\n  1786,\n  2035,\n  1273,\n  1520,\n  2912,\n  2665,\n  2403,\n  2154,\n  3942,\n  3695,\n  3429,\n  3180,\n  876,\n  613,\n  367,\n  102,\n  1898,\n  1635,\n  1385,\n  1120,\n  3232,\n  3497,\n  3747,\n  4010,\n  2214,\n  2479,\n  2725,\n  2988,\n  1196,\n  1445,\n  1711,\n  1958,\n  170,\n  419,\n  681,\n  928,\n  3376,\n  3129,\n  3891,\n  3642,\n  2358,\n  2111,\n  2869,\n  2620,\n  1340,\n  1077,\n  1855,\n  1590,\n  314,\n  51,\n  825,\n  560,\n  3728,\n  3993,\n  3219,\n  3482,\n  2710,\n  2975,\n  2197,\n  2460,\n  1692,\n  1941,\n  1183,\n  1430,\n  666,\n  915,\n  153,\n  400,\n  3840,\n  3593,\n  3331,\n  3082,\n  2822,\n  2575,\n  2309,\n  2060,\n  1804,\n  1541,\n  1295,\n  1030,\n  778,\n  515,\n  265,\n  0\n]);\nconst triTable = new Int32Array([\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  0,\n  8,\n  3,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  0,\n  1,\n  9,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  1,\n  8,\n  3,\n  9,\n  8,\n  1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  1,\n  2,\n  10,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  0,\n  8,\n  3,\n  1,\n  2,\n  10,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  9,\n  2,\n  10,\n  0,\n  2,\n  9,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  2,\n  8,\n  3,\n  2,\n  10,\n  8,\n  10,\n  9,\n  8,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  3,\n  11,\n  2,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  0,\n  11,\n  2,\n  8,\n  11,\n  0,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  1,\n  9,\n  0,\n  2,\n  3,\n  11,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  1,\n  11,\n  2,\n  1,\n  9,\n  11,\n  9,\n  8,\n  11,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  3,\n  10,\n  1,\n  11,\n  10,\n  3,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  0,\n  10,\n  1,\n  0,\n  8,\n  10,\n  8,\n  11,\n  10,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  3,\n  9,\n  0,\n  3,\n  11,\n  9,\n  11,\n  10,\n  9,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  9,\n  8,\n  10,\n  10,\n  8,\n  11,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  4,\n  7,\n  8,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  4,\n  3,\n  0,\n  7,\n  3,\n  4,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  0,\n  1,\n  9,\n  8,\n  4,\n  7,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  4,\n  1,\n  9,\n  4,\n  7,\n  1,\n  7,\n  3,\n  1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  1,\n  2,\n  10,\n  8,\n  4,\n  7,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  3,\n  4,\n  7,\n  3,\n  0,\n  4,\n  1,\n  2,\n  10,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  9,\n  2,\n  10,\n  9,\n  0,\n  2,\n  8,\n  4,\n  7,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  2,\n  10,\n  9,\n  2,\n  9,\n  7,\n  2,\n  7,\n  3,\n  7,\n  9,\n  4,\n  -1,\n  -1,\n  -1,\n  -1,\n  8,\n  4,\n  7,\n  3,\n  11,\n  2,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  11,\n  4,\n  7,\n  11,\n  2,\n  4,\n  2,\n  0,\n  4,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  9,\n  0,\n  1,\n  8,\n  4,\n  7,\n  2,\n  3,\n  11,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  4,\n  7,\n  11,\n  9,\n  4,\n  11,\n  9,\n  11,\n  2,\n  9,\n  2,\n  1,\n  -1,\n  -1,\n  -1,\n  -1,\n  3,\n  10,\n  1,\n  3,\n  11,\n  10,\n  7,\n  8,\n  4,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  1,\n  11,\n  10,\n  1,\n  4,\n  11,\n  1,\n  0,\n  4,\n  7,\n  11,\n  4,\n  -1,\n  -1,\n  -1,\n  -1,\n  4,\n  7,\n  8,\n  9,\n  0,\n  11,\n  9,\n  11,\n  10,\n  11,\n  0,\n  3,\n  -1,\n  -1,\n  -1,\n  -1,\n  4,\n  7,\n  11,\n  4,\n  11,\n  9,\n  9,\n  11,\n  10,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  9,\n  5,\n  4,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  9,\n  5,\n  4,\n  0,\n  8,\n  3,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  0,\n  5,\n  4,\n  1,\n  5,\n  0,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  8,\n  5,\n  4,\n  8,\n  3,\n  5,\n  3,\n  1,\n  5,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  1,\n  2,\n  10,\n  9,\n  5,\n  4,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  3,\n  0,\n  8,\n  1,\n  2,\n  10,\n  4,\n  9,\n  5,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  5,\n  2,\n  10,\n  5,\n  4,\n  2,\n  4,\n  0,\n  2,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  2,\n  10,\n  5,\n  3,\n  2,\n  5,\n  3,\n  5,\n  4,\n  3,\n  4,\n  8,\n  -1,\n  -1,\n  -1,\n  -1,\n  9,\n  5,\n  4,\n  2,\n  3,\n  11,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  0,\n  11,\n  2,\n  0,\n  8,\n  11,\n  4,\n  9,\n  5,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  0,\n  5,\n  4,\n  0,\n  1,\n  5,\n  2,\n  3,\n  11,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  2,\n  1,\n  5,\n  2,\n  5,\n  8,\n  2,\n  8,\n  11,\n  4,\n  8,\n  5,\n  -1,\n  -1,\n  -1,\n  -1,\n  10,\n  3,\n  11,\n  10,\n  1,\n  3,\n  9,\n  5,\n  4,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  4,\n  9,\n  5,\n  0,\n  8,\n  1,\n  8,\n  10,\n  1,\n  8,\n  11,\n  10,\n  -1,\n  -1,\n  -1,\n  -1,\n  5,\n  4,\n  0,\n  5,\n  0,\n  11,\n  5,\n  11,\n  10,\n  11,\n  0,\n  3,\n  -1,\n  -1,\n  -1,\n  -1,\n  5,\n  4,\n  8,\n  5,\n  8,\n  10,\n  10,\n  8,\n  11,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  9,\n  7,\n  8,\n  5,\n  7,\n  9,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  9,\n  3,\n  0,\n  9,\n  5,\n  3,\n  5,\n  7,\n  3,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  0,\n  7,\n  8,\n  0,\n  1,\n  7,\n  1,\n  5,\n  7,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  1,\n  5,\n  3,\n  3,\n  5,\n  7,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  9,\n  7,\n  8,\n  9,\n  5,\n  7,\n  10,\n  1,\n  2,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  10,\n  1,\n  2,\n  9,\n  5,\n  0,\n  5,\n  3,\n  0,\n  5,\n  7,\n  3,\n  -1,\n  -1,\n  -1,\n  -1,\n  8,\n  0,\n  2,\n  8,\n  2,\n  5,\n  8,\n  5,\n  7,\n  10,\n  5,\n  2,\n  -1,\n  -1,\n  -1,\n  -1,\n  2,\n  10,\n  5,\n  2,\n  5,\n  3,\n  3,\n  5,\n  7,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  7,\n  9,\n  5,\n  7,\n  8,\n  9,\n  3,\n  11,\n  2,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  9,\n  5,\n  7,\n  9,\n  7,\n  2,\n  9,\n  2,\n  0,\n  2,\n  7,\n  11,\n  -1,\n  -1,\n  -1,\n  -1,\n  2,\n  3,\n  11,\n  0,\n  1,\n  8,\n  1,\n  7,\n  8,\n  1,\n  5,\n  7,\n  -1,\n  -1,\n  -1,\n  -1,\n  11,\n  2,\n  1,\n  11,\n  1,\n  7,\n  7,\n  1,\n  5,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  9,\n  5,\n  8,\n  8,\n  5,\n  7,\n  10,\n  1,\n  3,\n  10,\n  3,\n  11,\n  -1,\n  -1,\n  -1,\n  -1,\n  5,\n  7,\n  0,\n  5,\n  0,\n  9,\n  7,\n  11,\n  0,\n  1,\n  0,\n  10,\n  11,\n  10,\n  0,\n  -1,\n  11,\n  10,\n  0,\n  11,\n  0,\n  3,\n  10,\n  5,\n  0,\n  8,\n  0,\n  7,\n  5,\n  7,\n  0,\n  -1,\n  11,\n  10,\n  5,\n  7,\n  11,\n  5,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  10,\n  6,\n  5,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  0,\n  8,\n  3,\n  5,\n  10,\n  6,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  9,\n  0,\n  1,\n  5,\n  10,\n  6,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  1,\n  8,\n  3,\n  1,\n  9,\n  8,\n  5,\n  10,\n  6,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  1,\n  6,\n  5,\n  2,\n  6,\n  1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  1,\n  6,\n  5,\n  1,\n  2,\n  6,\n  3,\n  0,\n  8,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  9,\n  6,\n  5,\n  9,\n  0,\n  6,\n  0,\n  2,\n  6,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  5,\n  9,\n  8,\n  5,\n  8,\n  2,\n  5,\n  2,\n  6,\n  3,\n  2,\n  8,\n  -1,\n  -1,\n  -1,\n  -1,\n  2,\n  3,\n  11,\n  10,\n  6,\n  5,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  11,\n  0,\n  8,\n  11,\n  2,\n  0,\n  10,\n  6,\n  5,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  0,\n  1,\n  9,\n  2,\n  3,\n  11,\n  5,\n  10,\n  6,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  5,\n  10,\n  6,\n  1,\n  9,\n  2,\n  9,\n  11,\n  2,\n  9,\n  8,\n  11,\n  -1,\n  -1,\n  -1,\n  -1,\n  6,\n  3,\n  11,\n  6,\n  5,\n  3,\n  5,\n  1,\n  3,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  0,\n  8,\n  11,\n  0,\n  11,\n  5,\n  0,\n  5,\n  1,\n  5,\n  11,\n  6,\n  -1,\n  -1,\n  -1,\n  -1,\n  3,\n  11,\n  6,\n  0,\n  3,\n  6,\n  0,\n  6,\n  5,\n  0,\n  5,\n  9,\n  -1,\n  -1,\n  -1,\n  -1,\n  6,\n  5,\n  9,\n  6,\n  9,\n  11,\n  11,\n  9,\n  8,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  5,\n  10,\n  6,\n  4,\n  7,\n  8,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  4,\n  3,\n  0,\n  4,\n  7,\n  3,\n  6,\n  5,\n  10,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  1,\n  9,\n  0,\n  5,\n  10,\n  6,\n  8,\n  4,\n  7,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  10,\n  6,\n  5,\n  1,\n  9,\n  7,\n  1,\n  7,\n  3,\n  7,\n  9,\n  4,\n  -1,\n  -1,\n  -1,\n  -1,\n  6,\n  1,\n  2,\n  6,\n  5,\n  1,\n  4,\n  7,\n  8,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  1,\n  2,\n  5,\n  5,\n  2,\n  6,\n  3,\n  0,\n  4,\n  3,\n  4,\n  7,\n  -1,\n  -1,\n  -1,\n  -1,\n  8,\n  4,\n  7,\n  9,\n  0,\n  5,\n  0,\n  6,\n  5,\n  0,\n  2,\n  6,\n  -1,\n  -1,\n  -1,\n  -1,\n  7,\n  3,\n  9,\n  7,\n  9,\n  4,\n  3,\n  2,\n  9,\n  5,\n  9,\n  6,\n  2,\n  6,\n  9,\n  -1,\n  3,\n  11,\n  2,\n  7,\n  8,\n  4,\n  10,\n  6,\n  5,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  5,\n  10,\n  6,\n  4,\n  7,\n  2,\n  4,\n  2,\n  0,\n  2,\n  7,\n  11,\n  -1,\n  -1,\n  -1,\n  -1,\n  0,\n  1,\n  9,\n  4,\n  7,\n  8,\n  2,\n  3,\n  11,\n  5,\n  10,\n  6,\n  -1,\n  -1,\n  -1,\n  -1,\n  9,\n  2,\n  1,\n  9,\n  11,\n  2,\n  9,\n  4,\n  11,\n  7,\n  11,\n  4,\n  5,\n  10,\n  6,\n  -1,\n  8,\n  4,\n  7,\n  3,\n  11,\n  5,\n  3,\n  5,\n  1,\n  5,\n  11,\n  6,\n  -1,\n  -1,\n  -1,\n  -1,\n  5,\n  1,\n  11,\n  5,\n  11,\n  6,\n  1,\n  0,\n  11,\n  7,\n  11,\n  4,\n  0,\n  4,\n  11,\n  -1,\n  0,\n  5,\n  9,\n  0,\n  6,\n  5,\n  0,\n  3,\n  6,\n  11,\n  6,\n  3,\n  8,\n  4,\n  7,\n  -1,\n  6,\n  5,\n  9,\n  6,\n  9,\n  11,\n  4,\n  7,\n  9,\n  7,\n  11,\n  9,\n  -1,\n  -1,\n  -1,\n  -1,\n  10,\n  4,\n  9,\n  6,\n  4,\n  10,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  4,\n  10,\n  6,\n  4,\n  9,\n  10,\n  0,\n  8,\n  3,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  10,\n  0,\n  1,\n  10,\n  6,\n  0,\n  6,\n  4,\n  0,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  8,\n  3,\n  1,\n  8,\n  1,\n  6,\n  8,\n  6,\n  4,\n  6,\n  1,\n  10,\n  -1,\n  -1,\n  -1,\n  -1,\n  1,\n  4,\n  9,\n  1,\n  2,\n  4,\n  2,\n  6,\n  4,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  3,\n  0,\n  8,\n  1,\n  2,\n  9,\n  2,\n  4,\n  9,\n  2,\n  6,\n  4,\n  -1,\n  -1,\n  -1,\n  -1,\n  0,\n  2,\n  4,\n  4,\n  2,\n  6,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  8,\n  3,\n  2,\n  8,\n  2,\n  4,\n  4,\n  2,\n  6,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  10,\n  4,\n  9,\n  10,\n  6,\n  4,\n  11,\n  2,\n  3,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  0,\n  8,\n  2,\n  2,\n  8,\n  11,\n  4,\n  9,\n  10,\n  4,\n  10,\n  6,\n  -1,\n  -1,\n  -1,\n  -1,\n  3,\n  11,\n  2,\n  0,\n  1,\n  6,\n  0,\n  6,\n  4,\n  6,\n  1,\n  10,\n  -1,\n  -1,\n  -1,\n  -1,\n  6,\n  4,\n  1,\n  6,\n  1,\n  10,\n  4,\n  8,\n  1,\n  2,\n  1,\n  11,\n  8,\n  11,\n  1,\n  -1,\n  9,\n  6,\n  4,\n  9,\n  3,\n  6,\n  9,\n  1,\n  3,\n  11,\n  6,\n  3,\n  -1,\n  -1,\n  -1,\n  -1,\n  8,\n  11,\n  1,\n  8,\n  1,\n  0,\n  11,\n  6,\n  1,\n  9,\n  1,\n  4,\n  6,\n  4,\n  1,\n  -1,\n  3,\n  11,\n  6,\n  3,\n  6,\n  0,\n  0,\n  6,\n  4,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  6,\n  4,\n  8,\n  11,\n  6,\n  8,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  7,\n  10,\n  6,\n  7,\n  8,\n  10,\n  8,\n  9,\n  10,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  0,\n  7,\n  3,\n  0,\n  10,\n  7,\n  0,\n  9,\n  10,\n  6,\n  7,\n  10,\n  -1,\n  -1,\n  -1,\n  -1,\n  10,\n  6,\n  7,\n  1,\n  10,\n  7,\n  1,\n  7,\n  8,\n  1,\n  8,\n  0,\n  -1,\n  -1,\n  -1,\n  -1,\n  10,\n  6,\n  7,\n  10,\n  7,\n  1,\n  1,\n  7,\n  3,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  1,\n  2,\n  6,\n  1,\n  6,\n  8,\n  1,\n  8,\n  9,\n  8,\n  6,\n  7,\n  -1,\n  -1,\n  -1,\n  -1,\n  2,\n  6,\n  9,\n  2,\n  9,\n  1,\n  6,\n  7,\n  9,\n  0,\n  9,\n  3,\n  7,\n  3,\n  9,\n  -1,\n  7,\n  8,\n  0,\n  7,\n  0,\n  6,\n  6,\n  0,\n  2,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  7,\n  3,\n  2,\n  6,\n  7,\n  2,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  2,\n  3,\n  11,\n  10,\n  6,\n  8,\n  10,\n  8,\n  9,\n  8,\n  6,\n  7,\n  -1,\n  -1,\n  -1,\n  -1,\n  2,\n  0,\n  7,\n  2,\n  7,\n  11,\n  0,\n  9,\n  7,\n  6,\n  7,\n  10,\n  9,\n  10,\n  7,\n  -1,\n  1,\n  8,\n  0,\n  1,\n  7,\n  8,\n  1,\n  10,\n  7,\n  6,\n  7,\n  10,\n  2,\n  3,\n  11,\n  -1,\n  11,\n  2,\n  1,\n  11,\n  1,\n  7,\n  10,\n  6,\n  1,\n  6,\n  7,\n  1,\n  -1,\n  -1,\n  -1,\n  -1,\n  8,\n  9,\n  6,\n  8,\n  6,\n  7,\n  9,\n  1,\n  6,\n  11,\n  6,\n  3,\n  1,\n  3,\n  6,\n  -1,\n  0,\n  9,\n  1,\n  11,\n  6,\n  7,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  7,\n  8,\n  0,\n  7,\n  0,\n  6,\n  3,\n  11,\n  0,\n  11,\n  6,\n  0,\n  -1,\n  -1,\n  -1,\n  -1,\n  7,\n  11,\n  6,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  7,\n  6,\n  11,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  3,\n  0,\n  8,\n  11,\n  7,\n  6,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  0,\n  1,\n  9,\n  11,\n  7,\n  6,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  8,\n  1,\n  9,\n  8,\n  3,\n  1,\n  11,\n  7,\n  6,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  10,\n  1,\n  2,\n  6,\n  11,\n  7,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  1,\n  2,\n  10,\n  3,\n  0,\n  8,\n  6,\n  11,\n  7,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  2,\n  9,\n  0,\n  2,\n  10,\n  9,\n  6,\n  11,\n  7,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  6,\n  11,\n  7,\n  2,\n  10,\n  3,\n  10,\n  8,\n  3,\n  10,\n  9,\n  8,\n  -1,\n  -1,\n  -1,\n  -1,\n  7,\n  2,\n  3,\n  6,\n  2,\n  7,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  7,\n  0,\n  8,\n  7,\n  6,\n  0,\n  6,\n  2,\n  0,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  2,\n  7,\n  6,\n  2,\n  3,\n  7,\n  0,\n  1,\n  9,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  1,\n  6,\n  2,\n  1,\n  8,\n  6,\n  1,\n  9,\n  8,\n  8,\n  7,\n  6,\n  -1,\n  -1,\n  -1,\n  -1,\n  10,\n  7,\n  6,\n  10,\n  1,\n  7,\n  1,\n  3,\n  7,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  10,\n  7,\n  6,\n  1,\n  7,\n  10,\n  1,\n  8,\n  7,\n  1,\n  0,\n  8,\n  -1,\n  -1,\n  -1,\n  -1,\n  0,\n  3,\n  7,\n  0,\n  7,\n  10,\n  0,\n  10,\n  9,\n  6,\n  10,\n  7,\n  -1,\n  -1,\n  -1,\n  -1,\n  7,\n  6,\n  10,\n  7,\n  10,\n  8,\n  8,\n  10,\n  9,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  6,\n  8,\n  4,\n  11,\n  8,\n  6,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  3,\n  6,\n  11,\n  3,\n  0,\n  6,\n  0,\n  4,\n  6,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  8,\n  6,\n  11,\n  8,\n  4,\n  6,\n  9,\n  0,\n  1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  9,\n  4,\n  6,\n  9,\n  6,\n  3,\n  9,\n  3,\n  1,\n  11,\n  3,\n  6,\n  -1,\n  -1,\n  -1,\n  -1,\n  6,\n  8,\n  4,\n  6,\n  11,\n  8,\n  2,\n  10,\n  1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  1,\n  2,\n  10,\n  3,\n  0,\n  11,\n  0,\n  6,\n  11,\n  0,\n  4,\n  6,\n  -1,\n  -1,\n  -1,\n  -1,\n  4,\n  11,\n  8,\n  4,\n  6,\n  11,\n  0,\n  2,\n  9,\n  2,\n  10,\n  9,\n  -1,\n  -1,\n  -1,\n  -1,\n  10,\n  9,\n  3,\n  10,\n  3,\n  2,\n  9,\n  4,\n  3,\n  11,\n  3,\n  6,\n  4,\n  6,\n  3,\n  -1,\n  8,\n  2,\n  3,\n  8,\n  4,\n  2,\n  4,\n  6,\n  2,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  0,\n  4,\n  2,\n  4,\n  6,\n  2,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  1,\n  9,\n  0,\n  2,\n  3,\n  4,\n  2,\n  4,\n  6,\n  4,\n  3,\n  8,\n  -1,\n  -1,\n  -1,\n  -1,\n  1,\n  9,\n  4,\n  1,\n  4,\n  2,\n  2,\n  4,\n  6,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  8,\n  1,\n  3,\n  8,\n  6,\n  1,\n  8,\n  4,\n  6,\n  6,\n  10,\n  1,\n  -1,\n  -1,\n  -1,\n  -1,\n  10,\n  1,\n  0,\n  10,\n  0,\n  6,\n  6,\n  0,\n  4,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  4,\n  6,\n  3,\n  4,\n  3,\n  8,\n  6,\n  10,\n  3,\n  0,\n  3,\n  9,\n  10,\n  9,\n  3,\n  -1,\n  10,\n  9,\n  4,\n  6,\n  10,\n  4,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  4,\n  9,\n  5,\n  7,\n  6,\n  11,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  0,\n  8,\n  3,\n  4,\n  9,\n  5,\n  11,\n  7,\n  6,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  5,\n  0,\n  1,\n  5,\n  4,\n  0,\n  7,\n  6,\n  11,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  11,\n  7,\n  6,\n  8,\n  3,\n  4,\n  3,\n  5,\n  4,\n  3,\n  1,\n  5,\n  -1,\n  -1,\n  -1,\n  -1,\n  9,\n  5,\n  4,\n  10,\n  1,\n  2,\n  7,\n  6,\n  11,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  6,\n  11,\n  7,\n  1,\n  2,\n  10,\n  0,\n  8,\n  3,\n  4,\n  9,\n  5,\n  -1,\n  -1,\n  -1,\n  -1,\n  7,\n  6,\n  11,\n  5,\n  4,\n  10,\n  4,\n  2,\n  10,\n  4,\n  0,\n  2,\n  -1,\n  -1,\n  -1,\n  -1,\n  3,\n  4,\n  8,\n  3,\n  5,\n  4,\n  3,\n  2,\n  5,\n  10,\n  5,\n  2,\n  11,\n  7,\n  6,\n  -1,\n  7,\n  2,\n  3,\n  7,\n  6,\n  2,\n  5,\n  4,\n  9,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  9,\n  5,\n  4,\n  0,\n  8,\n  6,\n  0,\n  6,\n  2,\n  6,\n  8,\n  7,\n  -1,\n  -1,\n  -1,\n  -1,\n  3,\n  6,\n  2,\n  3,\n  7,\n  6,\n  1,\n  5,\n  0,\n  5,\n  4,\n  0,\n  -1,\n  -1,\n  -1,\n  -1,\n  6,\n  2,\n  8,\n  6,\n  8,\n  7,\n  2,\n  1,\n  8,\n  4,\n  8,\n  5,\n  1,\n  5,\n  8,\n  -1,\n  9,\n  5,\n  4,\n  10,\n  1,\n  6,\n  1,\n  7,\n  6,\n  1,\n  3,\n  7,\n  -1,\n  -1,\n  -1,\n  -1,\n  1,\n  6,\n  10,\n  1,\n  7,\n  6,\n  1,\n  0,\n  7,\n  8,\n  7,\n  0,\n  9,\n  5,\n  4,\n  -1,\n  4,\n  0,\n  10,\n  4,\n  10,\n  5,\n  0,\n  3,\n  10,\n  6,\n  10,\n  7,\n  3,\n  7,\n  10,\n  -1,\n  7,\n  6,\n  10,\n  7,\n  10,\n  8,\n  5,\n  4,\n  10,\n  4,\n  8,\n  10,\n  -1,\n  -1,\n  -1,\n  -1,\n  6,\n  9,\n  5,\n  6,\n  11,\n  9,\n  11,\n  8,\n  9,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  3,\n  6,\n  11,\n  0,\n  6,\n  3,\n  0,\n  5,\n  6,\n  0,\n  9,\n  5,\n  -1,\n  -1,\n  -1,\n  -1,\n  0,\n  11,\n  8,\n  0,\n  5,\n  11,\n  0,\n  1,\n  5,\n  5,\n  6,\n  11,\n  -1,\n  -1,\n  -1,\n  -1,\n  6,\n  11,\n  3,\n  6,\n  3,\n  5,\n  5,\n  3,\n  1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  1,\n  2,\n  10,\n  9,\n  5,\n  11,\n  9,\n  11,\n  8,\n  11,\n  5,\n  6,\n  -1,\n  -1,\n  -1,\n  -1,\n  0,\n  11,\n  3,\n  0,\n  6,\n  11,\n  0,\n  9,\n  6,\n  5,\n  6,\n  9,\n  1,\n  2,\n  10,\n  -1,\n  11,\n  8,\n  5,\n  11,\n  5,\n  6,\n  8,\n  0,\n  5,\n  10,\n  5,\n  2,\n  0,\n  2,\n  5,\n  -1,\n  6,\n  11,\n  3,\n  6,\n  3,\n  5,\n  2,\n  10,\n  3,\n  10,\n  5,\n  3,\n  -1,\n  -1,\n  -1,\n  -1,\n  5,\n  8,\n  9,\n  5,\n  2,\n  8,\n  5,\n  6,\n  2,\n  3,\n  8,\n  2,\n  -1,\n  -1,\n  -1,\n  -1,\n  9,\n  5,\n  6,\n  9,\n  6,\n  0,\n  0,\n  6,\n  2,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  1,\n  5,\n  8,\n  1,\n  8,\n  0,\n  5,\n  6,\n  8,\n  3,\n  8,\n  2,\n  6,\n  2,\n  8,\n  -1,\n  1,\n  5,\n  6,\n  2,\n  1,\n  6,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  1,\n  3,\n  6,\n  1,\n  6,\n  10,\n  3,\n  8,\n  6,\n  5,\n  6,\n  9,\n  8,\n  9,\n  6,\n  -1,\n  10,\n  1,\n  0,\n  10,\n  0,\n  6,\n  9,\n  5,\n  0,\n  5,\n  6,\n  0,\n  -1,\n  -1,\n  -1,\n  -1,\n  0,\n  3,\n  8,\n  5,\n  6,\n  10,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  10,\n  5,\n  6,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  11,\n  5,\n  10,\n  7,\n  5,\n  11,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  11,\n  5,\n  10,\n  11,\n  7,\n  5,\n  8,\n  3,\n  0,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  5,\n  11,\n  7,\n  5,\n  10,\n  11,\n  1,\n  9,\n  0,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  10,\n  7,\n  5,\n  10,\n  11,\n  7,\n  9,\n  8,\n  1,\n  8,\n  3,\n  1,\n  -1,\n  -1,\n  -1,\n  -1,\n  11,\n  1,\n  2,\n  11,\n  7,\n  1,\n  7,\n  5,\n  1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  0,\n  8,\n  3,\n  1,\n  2,\n  7,\n  1,\n  7,\n  5,\n  7,\n  2,\n  11,\n  -1,\n  -1,\n  -1,\n  -1,\n  9,\n  7,\n  5,\n  9,\n  2,\n  7,\n  9,\n  0,\n  2,\n  2,\n  11,\n  7,\n  -1,\n  -1,\n  -1,\n  -1,\n  7,\n  5,\n  2,\n  7,\n  2,\n  11,\n  5,\n  9,\n  2,\n  3,\n  2,\n  8,\n  9,\n  8,\n  2,\n  -1,\n  2,\n  5,\n  10,\n  2,\n  3,\n  5,\n  3,\n  7,\n  5,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  8,\n  2,\n  0,\n  8,\n  5,\n  2,\n  8,\n  7,\n  5,\n  10,\n  2,\n  5,\n  -1,\n  -1,\n  -1,\n  -1,\n  9,\n  0,\n  1,\n  5,\n  10,\n  3,\n  5,\n  3,\n  7,\n  3,\n  10,\n  2,\n  -1,\n  -1,\n  -1,\n  -1,\n  9,\n  8,\n  2,\n  9,\n  2,\n  1,\n  8,\n  7,\n  2,\n  10,\n  2,\n  5,\n  7,\n  5,\n  2,\n  -1,\n  1,\n  3,\n  5,\n  3,\n  7,\n  5,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  0,\n  8,\n  7,\n  0,\n  7,\n  1,\n  1,\n  7,\n  5,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  9,\n  0,\n  3,\n  9,\n  3,\n  5,\n  5,\n  3,\n  7,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  9,\n  8,\n  7,\n  5,\n  9,\n  7,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  5,\n  8,\n  4,\n  5,\n  10,\n  8,\n  10,\n  11,\n  8,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  5,\n  0,\n  4,\n  5,\n  11,\n  0,\n  5,\n  10,\n  11,\n  11,\n  3,\n  0,\n  -1,\n  -1,\n  -1,\n  -1,\n  0,\n  1,\n  9,\n  8,\n  4,\n  10,\n  8,\n  10,\n  11,\n  10,\n  4,\n  5,\n  -1,\n  -1,\n  -1,\n  -1,\n  10,\n  11,\n  4,\n  10,\n  4,\n  5,\n  11,\n  3,\n  4,\n  9,\n  4,\n  1,\n  3,\n  1,\n  4,\n  -1,\n  2,\n  5,\n  1,\n  2,\n  8,\n  5,\n  2,\n  11,\n  8,\n  4,\n  5,\n  8,\n  -1,\n  -1,\n  -1,\n  -1,\n  0,\n  4,\n  11,\n  0,\n  11,\n  3,\n  4,\n  5,\n  11,\n  2,\n  11,\n  1,\n  5,\n  1,\n  11,\n  -1,\n  0,\n  2,\n  5,\n  0,\n  5,\n  9,\n  2,\n  11,\n  5,\n  4,\n  5,\n  8,\n  11,\n  8,\n  5,\n  -1,\n  9,\n  4,\n  5,\n  2,\n  11,\n  3,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  2,\n  5,\n  10,\n  3,\n  5,\n  2,\n  3,\n  4,\n  5,\n  3,\n  8,\n  4,\n  -1,\n  -1,\n  -1,\n  -1,\n  5,\n  10,\n  2,\n  5,\n  2,\n  4,\n  4,\n  2,\n  0,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  3,\n  10,\n  2,\n  3,\n  5,\n  10,\n  3,\n  8,\n  5,\n  4,\n  5,\n  8,\n  0,\n  1,\n  9,\n  -1,\n  5,\n  10,\n  2,\n  5,\n  2,\n  4,\n  1,\n  9,\n  2,\n  9,\n  4,\n  2,\n  -1,\n  -1,\n  -1,\n  -1,\n  8,\n  4,\n  5,\n  8,\n  5,\n  3,\n  3,\n  5,\n  1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  0,\n  4,\n  5,\n  1,\n  0,\n  5,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  8,\n  4,\n  5,\n  8,\n  5,\n  3,\n  9,\n  0,\n  5,\n  0,\n  3,\n  5,\n  -1,\n  -1,\n  -1,\n  -1,\n  9,\n  4,\n  5,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  4,\n  11,\n  7,\n  4,\n  9,\n  11,\n  9,\n  10,\n  11,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  0,\n  8,\n  3,\n  4,\n  9,\n  7,\n  9,\n  11,\n  7,\n  9,\n  10,\n  11,\n  -1,\n  -1,\n  -1,\n  -1,\n  1,\n  10,\n  11,\n  1,\n  11,\n  4,\n  1,\n  4,\n  0,\n  7,\n  4,\n  11,\n  -1,\n  -1,\n  -1,\n  -1,\n  3,\n  1,\n  4,\n  3,\n  4,\n  8,\n  1,\n  10,\n  4,\n  7,\n  4,\n  11,\n  10,\n  11,\n  4,\n  -1,\n  4,\n  11,\n  7,\n  9,\n  11,\n  4,\n  9,\n  2,\n  11,\n  9,\n  1,\n  2,\n  -1,\n  -1,\n  -1,\n  -1,\n  9,\n  7,\n  4,\n  9,\n  11,\n  7,\n  9,\n  1,\n  11,\n  2,\n  11,\n  1,\n  0,\n  8,\n  3,\n  -1,\n  11,\n  7,\n  4,\n  11,\n  4,\n  2,\n  2,\n  4,\n  0,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  11,\n  7,\n  4,\n  11,\n  4,\n  2,\n  8,\n  3,\n  4,\n  3,\n  2,\n  4,\n  -1,\n  -1,\n  -1,\n  -1,\n  2,\n  9,\n  10,\n  2,\n  7,\n  9,\n  2,\n  3,\n  7,\n  7,\n  4,\n  9,\n  -1,\n  -1,\n  -1,\n  -1,\n  9,\n  10,\n  7,\n  9,\n  7,\n  4,\n  10,\n  2,\n  7,\n  8,\n  7,\n  0,\n  2,\n  0,\n  7,\n  -1,\n  3,\n  7,\n  10,\n  3,\n  10,\n  2,\n  7,\n  4,\n  10,\n  1,\n  10,\n  0,\n  4,\n  0,\n  10,\n  -1,\n  1,\n  10,\n  2,\n  8,\n  7,\n  4,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  4,\n  9,\n  1,\n  4,\n  1,\n  7,\n  7,\n  1,\n  3,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  4,\n  9,\n  1,\n  4,\n  1,\n  7,\n  0,\n  8,\n  1,\n  8,\n  7,\n  1,\n  -1,\n  -1,\n  -1,\n  -1,\n  4,\n  0,\n  3,\n  7,\n  4,\n  3,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  4,\n  8,\n  7,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  9,\n  10,\n  8,\n  10,\n  11,\n  8,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  3,\n  0,\n  9,\n  3,\n  9,\n  11,\n  11,\n  9,\n  10,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  0,\n  1,\n  10,\n  0,\n  10,\n  8,\n  8,\n  10,\n  11,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  3,\n  1,\n  10,\n  11,\n  3,\n  10,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  1,\n  2,\n  11,\n  1,\n  11,\n  9,\n  9,\n  11,\n  8,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  3,\n  0,\n  9,\n  3,\n  9,\n  11,\n  1,\n  2,\n  9,\n  2,\n  11,\n  9,\n  -1,\n  -1,\n  -1,\n  -1,\n  0,\n  2,\n  11,\n  8,\n  0,\n  11,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  3,\n  2,\n  11,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  2,\n  3,\n  8,\n  2,\n  8,\n  10,\n  10,\n  8,\n  9,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  9,\n  10,\n  2,\n  0,\n  9,\n  2,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  2,\n  3,\n  8,\n  2,\n  8,\n  10,\n  0,\n  1,\n  8,\n  1,\n  10,\n  8,\n  -1,\n  -1,\n  -1,\n  -1,\n  1,\n  10,\n  2,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  1,\n  3,\n  8,\n  9,\n  1,\n  8,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  0,\n  9,\n  1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  0,\n  3,\n  8,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1\n]);\nexport {\n  MarchingCubes,\n  edgeTable,\n  triTable\n};\n//# sourceMappingURL=MarchingCubes.js.map\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 6035, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6041, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/objects/LightningStorm.js"],"sourcesContent":["import { Object3D, MeshBasicMaterial, MathUtils, Mesh } from \"three\";\nimport { LightningStrike } from \"../geometries/LightningStrike.js\";\nclass LightningStorm extends Object3D {\n  constructor(stormParams = {}) {\n    super();\n    this.isLightningStorm = true;\n    this.stormParams = stormParams;\n    stormParams.size = stormParams.size !== void 0 ? stormParams.size : 1e3;\n    stormParams.minHeight = stormParams.minHeight !== void 0 ? stormParams.minHeight : 80;\n    stormParams.maxHeight = stormParams.maxHeight !== void 0 ? stormParams.maxHeight : 100;\n    stormParams.maxSlope = stormParams.maxSlope !== void 0 ? stormParams.maxSlope : 1.1;\n    stormParams.maxLightnings = stormParams.maxLightnings !== void 0 ? stormParams.maxLightnings : 3;\n    stormParams.lightningMinPeriod = stormParams.lightningMinPeriod !== void 0 ? stormParams.lightningMinPeriod : 3;\n    stormParams.lightningMaxPeriod = stormParams.lightningMaxPeriod !== void 0 ? stormParams.lightningMaxPeriod : 7;\n    stormParams.lightningMinDuration = stormParams.lightningMinDuration !== void 0 ? stormParams.lightningMinDuration : 1;\n    stormParams.lightningMaxDuration = stormParams.lightningMaxDuration !== void 0 ? stormParams.lightningMaxDuration : 2.5;\n    this.lightningParameters = LightningStrike.copyParameters(\n      stormParams.lightningParameters,\n      stormParams.lightningParameters\n    );\n    this.lightningParameters.isEternal = false;\n    this.lightningMaterial = stormParams.lightningMaterial !== void 0 ? stormParams.lightningMaterial : new MeshBasicMaterial({ color: 11599871 });\n    if (stormParams.onRayPosition !== void 0) {\n      this.onRayPosition = stormParams.onRayPosition;\n    } else {\n      this.onRayPosition = function(source, dest) {\n        dest.set((Math.random() - 0.5) * stormParams.size, 0, (Math.random() - 0.5) * stormParams.size);\n        const height = MathUtils.lerp(stormParams.minHeight, stormParams.maxHeight, Math.random());\n        source.set(stormParams.maxSlope * (2 * Math.random() - 1), 1, stormParams.maxSlope * (2 * Math.random() - 1)).multiplyScalar(height).add(dest);\n      };\n    }\n    this.onLightningDown = stormParams.onLightningDown;\n    this.inited = false;\n    this.nextLightningTime = 0;\n    this.lightningsMeshes = [];\n    this.deadLightningsMeshes = [];\n    for (let i = 0; i < this.stormParams.maxLightnings; i++) {\n      const lightning = new LightningStrike(LightningStrike.copyParameters({}, this.lightningParameters));\n      const mesh = new Mesh(lightning, this.lightningMaterial);\n      this.deadLightningsMeshes.push(mesh);\n    }\n  }\n  update(time) {\n    if (!this.inited) {\n      this.nextLightningTime = this.getNextLightningTime(time) * Math.random();\n      this.inited = true;\n    }\n    if (time >= this.nextLightningTime) {\n      const lightningMesh = this.deadLightningsMeshes.pop();\n      if (lightningMesh) {\n        const lightningParams1 = LightningStrike.copyParameters(\n          lightningMesh.geometry.rayParameters,\n          this.lightningParameters\n        );\n        lightningParams1.birthTime = time;\n        lightningParams1.deathTime = time + MathUtils.lerp(this.stormParams.lightningMinDuration, this.stormParams.lightningMaxDuration, Math.random());\n        this.onRayPosition(lightningParams1.sourceOffset, lightningParams1.destOffset);\n        lightningParams1.noiseSeed = Math.random();\n        this.add(lightningMesh);\n        this.lightningsMeshes.push(lightningMesh);\n      }\n      this.nextLightningTime = this.getNextLightningTime(time);\n    }\n    let i = 0, il = this.lightningsMeshes.length;\n    while (i < il) {\n      const mesh = this.lightningsMeshes[i];\n      const lightning = mesh.geometry;\n      const prevState = lightning.state;\n      lightning.update(time);\n      if (prevState === LightningStrike.RAY_PROPAGATING && lightning.state > prevState) {\n        if (this.onLightningDown) {\n          this.onLightningDown(lightning);\n        }\n      }\n      if (lightning.state === LightningStrike.RAY_EXTINGUISHED) {\n        this.lightningsMeshes.splice(this.lightningsMeshes.indexOf(mesh), 1);\n        this.deadLightningsMeshes.push(mesh);\n        this.remove(mesh);\n        il--;\n      } else {\n        i++;\n      }\n    }\n  }\n  getNextLightningTime(currentTime) {\n    return currentTime + MathUtils.lerp(this.stormParams.lightningMinPeriod, this.stormParams.lightningMaxPeriod, Math.random()) / (this.stormParams.maxLightnings + 1);\n  }\n  copy(source, recursive) {\n    super.copy(source, recursive);\n    this.stormParams.size = source.stormParams.size;\n    this.stormParams.minHeight = source.stormParams.minHeight;\n    this.stormParams.maxHeight = source.stormParams.maxHeight;\n    this.stormParams.maxSlope = source.stormParams.maxSlope;\n    this.stormParams.maxLightnings = source.stormParams.maxLightnings;\n    this.stormParams.lightningMinPeriod = source.stormParams.lightningMinPeriod;\n    this.stormParams.lightningMaxPeriod = source.stormParams.lightningMaxPeriod;\n    this.stormParams.lightningMinDuration = source.stormParams.lightningMinDuration;\n    this.stormParams.lightningMaxDuration = source.stormParams.lightningMaxDuration;\n    this.lightningParameters = LightningStrike.copyParameters({}, source.lightningParameters);\n    this.lightningMaterial = source.stormParams.lightningMaterial;\n    this.onLightningDown = source.onLightningDown;\n    return this;\n  }\n  clone() {\n    return new this.constructor(this.stormParams).copy(this);\n  }\n}\nexport {\n  LightningStorm\n};\n//# sourceMappingURL=LightningStorm.js.map\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 6151, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6157, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/objects/ReflectorRTT.js"],"sourcesContent":["import { Reflector } from \"./Reflector.js\";\nclass ReflectorRTT extends Reflector {\n  constructor(geometry, options) {\n    super(geometry, options);\n    this.geometry.setDrawRange(0, 0);\n  }\n}\nexport {\n  ReflectorRTT\n};\n//# sourceMappingURL=ReflectorRTT.js.map\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,qBAAqB,uJAAA,CAAA,YAAS;IAClC,YAAY,QAAQ,EAAE,OAAO,CAAE;QAC7B,KAAK,CAAC,UAAU;QAChB,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,GAAG;IAChC;AACF;;CAIA,wCAAwC","ignoreList":[0]}},
    {"offset": {"line": 6170, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6176, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/objects/ReflectorForSSRPass.js"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nimport { Mesh, Matrix4, Vector2, Color, Vector3, PerspectiveCamera, DepthTexture, UnsignedShortType, NearestFilter, WebGLRenderTarget, ShaderMaterial, UniformsUtils, Plane, HalfFloatType } from \"three\";\nconst ReflectorForSSRPass = /* @__PURE__ */ (() => {\n  const _ReflectorForSSRPass = class extends Mesh {\n    constructor(geometry, options = {}) {\n      super(geometry);\n      this.isReflectorForSSRPass = true;\n      this.type = \"ReflectorForSSRPass\";\n      const scope = this;\n      const color = options.color !== void 0 ? new Color(options.color) : new Color(8355711);\n      const textureWidth = options.textureWidth || 512;\n      const textureHeight = options.textureHeight || 512;\n      const clipBias = options.clipBias || 0;\n      const shader = options.shader || _ReflectorForSSRPass.ReflectorShader;\n      const useDepthTexture = options.useDepthTexture === true;\n      const yAxis = new Vector3(0, 1, 0);\n      const vecTemp0 = new Vector3();\n      const vecTemp1 = new Vector3();\n      scope.needsUpdate = false;\n      scope.maxDistance = _ReflectorForSSRPass.ReflectorShader.uniforms.maxDistance.value;\n      scope.opacity = _ReflectorForSSRPass.ReflectorShader.uniforms.opacity.value;\n      scope.color = color;\n      scope.resolution = options.resolution || new Vector2(window.innerWidth, window.innerHeight);\n      scope._distanceAttenuation = _ReflectorForSSRPass.ReflectorShader.defines.DISTANCE_ATTENUATION;\n      Object.defineProperty(scope, \"distanceAttenuation\", {\n        get() {\n          return scope._distanceAttenuation;\n        },\n        set(val) {\n          if (scope._distanceAttenuation === val)\n            return;\n          scope._distanceAttenuation = val;\n          scope.material.defines.DISTANCE_ATTENUATION = val;\n          scope.material.needsUpdate = true;\n        }\n      });\n      scope._fresnel = _ReflectorForSSRPass.ReflectorShader.defines.FRESNEL;\n      Object.defineProperty(scope, \"fresnel\", {\n        get() {\n          return scope._fresnel;\n        },\n        set(val) {\n          if (scope._fresnel === val)\n            return;\n          scope._fresnel = val;\n          scope.material.defines.FRESNEL = val;\n          scope.material.needsUpdate = true;\n        }\n      });\n      const normal = new Vector3();\n      const reflectorWorldPosition = new Vector3();\n      const cameraWorldPosition = new Vector3();\n      const rotationMatrix = new Matrix4();\n      const lookAtPosition = new Vector3(0, 0, -1);\n      const view = new Vector3();\n      const target = new Vector3();\n      const textureMatrix = new Matrix4();\n      const virtualCamera = new PerspectiveCamera();\n      let depthTexture;\n      if (useDepthTexture) {\n        depthTexture = new DepthTexture();\n        depthTexture.type = UnsignedShortType;\n        depthTexture.minFilter = NearestFilter;\n        depthTexture.magFilter = NearestFilter;\n      }\n      const parameters = {\n        depthTexture: useDepthTexture ? depthTexture : null,\n        type: HalfFloatType\n      };\n      const renderTarget = new WebGLRenderTarget(textureWidth, textureHeight, parameters);\n      const material = new ShaderMaterial({\n        transparent: useDepthTexture,\n        defines: Object.assign({}, _ReflectorForSSRPass.ReflectorShader.defines, {\n          useDepthTexture\n        }),\n        uniforms: UniformsUtils.clone(shader.uniforms),\n        fragmentShader: shader.fragmentShader,\n        vertexShader: shader.vertexShader\n      });\n      material.uniforms[\"tDiffuse\"].value = renderTarget.texture;\n      material.uniforms[\"color\"].value = scope.color;\n      material.uniforms[\"textureMatrix\"].value = textureMatrix;\n      if (useDepthTexture) {\n        material.uniforms[\"tDepth\"].value = renderTarget.depthTexture;\n      }\n      this.material = material;\n      const globalPlane = new Plane(new Vector3(0, 1, 0), clipBias);\n      const globalPlanes = [globalPlane];\n      this.doRender = function(renderer, scene, camera) {\n        material.uniforms[\"maxDistance\"].value = scope.maxDistance;\n        material.uniforms[\"color\"].value = scope.color;\n        material.uniforms[\"opacity\"].value = scope.opacity;\n        vecTemp0.copy(camera.position).normalize();\n        vecTemp1.copy(vecTemp0).reflect(yAxis);\n        material.uniforms[\"fresnelCoe\"].value = (vecTemp0.dot(vecTemp1) + 1) / 2;\n        reflectorWorldPosition.setFromMatrixPosition(scope.matrixWorld);\n        cameraWorldPosition.setFromMatrixPosition(camera.matrixWorld);\n        rotationMatrix.extractRotation(scope.matrixWorld);\n        normal.set(0, 0, 1);\n        normal.applyMatrix4(rotationMatrix);\n        view.subVectors(reflectorWorldPosition, cameraWorldPosition);\n        if (view.dot(normal) > 0)\n          return;\n        view.reflect(normal).negate();\n        view.add(reflectorWorldPosition);\n        rotationMatrix.extractRotation(camera.matrixWorld);\n        lookAtPosition.set(0, 0, -1);\n        lookAtPosition.applyMatrix4(rotationMatrix);\n        lookAtPosition.add(cameraWorldPosition);\n        target.subVectors(reflectorWorldPosition, lookAtPosition);\n        target.reflect(normal).negate();\n        target.add(reflectorWorldPosition);\n        virtualCamera.position.copy(view);\n        virtualCamera.up.set(0, 1, 0);\n        virtualCamera.up.applyMatrix4(rotationMatrix);\n        virtualCamera.up.reflect(normal);\n        virtualCamera.lookAt(target);\n        virtualCamera.far = camera.far;\n        virtualCamera.updateMatrixWorld();\n        virtualCamera.projectionMatrix.copy(camera.projectionMatrix);\n        material.uniforms[\"virtualCameraNear\"].value = camera.near;\n        material.uniforms[\"virtualCameraFar\"].value = camera.far;\n        material.uniforms[\"virtualCameraMatrixWorld\"].value = virtualCamera.matrixWorld;\n        material.uniforms[\"virtualCameraProjectionMatrix\"].value = camera.projectionMatrix;\n        material.uniforms[\"virtualCameraProjectionMatrixInverse\"].value = camera.projectionMatrixInverse;\n        material.uniforms[\"resolution\"].value = scope.resolution;\n        textureMatrix.set(0.5, 0, 0, 0.5, 0, 0.5, 0, 0.5, 0, 0, 0.5, 0.5, 0, 0, 0, 1);\n        textureMatrix.multiply(virtualCamera.projectionMatrix);\n        textureMatrix.multiply(virtualCamera.matrixWorldInverse);\n        textureMatrix.multiply(scope.matrixWorld);\n        const currentRenderTarget = renderer.getRenderTarget();\n        const currentXrEnabled = renderer.xr.enabled;\n        const currentShadowAutoUpdate = renderer.shadowMap.autoUpdate;\n        const currentClippingPlanes = renderer.clippingPlanes;\n        renderer.xr.enabled = false;\n        renderer.shadowMap.autoUpdate = false;\n        renderer.clippingPlanes = globalPlanes;\n        renderer.setRenderTarget(renderTarget);\n        renderer.state.buffers.depth.setMask(true);\n        if (renderer.autoClear === false)\n          renderer.clear();\n        renderer.render(scene, virtualCamera);\n        renderer.xr.enabled = currentXrEnabled;\n        renderer.shadowMap.autoUpdate = currentShadowAutoUpdate;\n        renderer.clippingPlanes = currentClippingPlanes;\n        renderer.setRenderTarget(currentRenderTarget);\n        const viewport = camera.viewport;\n        if (viewport !== void 0) {\n          renderer.state.viewport(viewport);\n        }\n      };\n      this.getRenderTarget = function() {\n        return renderTarget;\n      };\n    }\n  };\n  let ReflectorForSSRPass2 = _ReflectorForSSRPass;\n  __publicField(ReflectorForSSRPass2, \"ReflectorShader\", {\n    defines: {\n      DISTANCE_ATTENUATION: true,\n      FRESNEL: true\n    },\n    uniforms: {\n      color: { value: null },\n      tDiffuse: { value: null },\n      tDepth: { value: null },\n      textureMatrix: { value: new Matrix4() },\n      maxDistance: { value: 180 },\n      opacity: { value: 0.5 },\n      fresnelCoe: { value: null },\n      virtualCameraNear: { value: null },\n      virtualCameraFar: { value: null },\n      virtualCameraProjectionMatrix: { value: new Matrix4() },\n      virtualCameraMatrixWorld: { value: new Matrix4() },\n      virtualCameraProjectionMatrixInverse: { value: new Matrix4() },\n      resolution: { value: new Vector2() }\n    },\n    vertexShader: (\n      /* glsl */\n      `\n\t\tuniform mat4 textureMatrix;\n\t\tvarying vec4 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = textureMatrix * vec4( position, 1.0 );\n\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}`\n    ),\n    fragmentShader: (\n      /* glsl */\n      `\n\t\tuniform vec3 color;\n\t\tuniform sampler2D tDiffuse;\n\t\tuniform sampler2D tDepth;\n\t\tuniform float maxDistance;\n\t\tuniform float opacity;\n\t\tuniform float fresnelCoe;\n\t\tuniform float virtualCameraNear;\n\t\tuniform float virtualCameraFar;\n\t\tuniform mat4 virtualCameraProjectionMatrix;\n\t\tuniform mat4 virtualCameraProjectionMatrixInverse;\n\t\tuniform mat4 virtualCameraMatrixWorld;\n\t\tuniform vec2 resolution;\n\t\tvarying vec4 vUv;\n\t\t#include <packing>\n\t\tfloat blendOverlay( float base, float blend ) {\n\t\t\treturn( base < 0.5 ? ( 2.0 * base * blend ) : ( 1.0 - 2.0 * ( 1.0 - base ) * ( 1.0 - blend ) ) );\n\t\t}\n\t\tvec3 blendOverlay( vec3 base, vec3 blend ) {\n\t\t\treturn vec3( blendOverlay( base.r, blend.r ), blendOverlay( base.g, blend.g ), blendOverlay( base.b, blend.b ) );\n\t\t}\n\t\tfloat getDepth( const in vec2 uv ) {\n\t\t\treturn texture2D( tDepth, uv ).x;\n\t\t}\n\t\tfloat getViewZ( const in float depth ) {\n\t\t\treturn perspectiveDepthToViewZ( depth, virtualCameraNear, virtualCameraFar );\n\t\t}\n\t\tvec3 getViewPosition( const in vec2 uv, const in float depth/*clip space*/, const in float clipW ) {\n\t\t\tvec4 clipPosition = vec4( ( vec3( uv, depth ) - 0.5 ) * 2.0, 1.0 );//ndc\n\t\t\tclipPosition *= clipW; //clip\n\t\t\treturn ( virtualCameraProjectionMatrixInverse * clipPosition ).xyz;//view\n\t\t}\n\t\tvoid main() {\n\t\t\tvec4 base = texture2DProj( tDiffuse, vUv );\n\t\t\t#ifdef useDepthTexture\n\t\t\t\tvec2 uv=(gl_FragCoord.xy-.5)/resolution.xy;\n\t\t\t\tuv.x=1.-uv.x;\n\t\t\t\tfloat depth = texture2DProj( tDepth, vUv ).r;\n\t\t\t\tfloat viewZ = getViewZ( depth );\n\t\t\t\tfloat clipW = virtualCameraProjectionMatrix[2][3] * viewZ+virtualCameraProjectionMatrix[3][3];\n\t\t\t\tvec3 viewPosition=getViewPosition( uv, depth, clipW );\n\t\t\t\tvec3 worldPosition=(virtualCameraMatrixWorld*vec4(viewPosition,1)).xyz;\n\t\t\t\tif(worldPosition.y>maxDistance) discard;\n\t\t\t\tfloat op=opacity;\n\t\t\t\t#ifdef DISTANCE_ATTENUATION\n\t\t\t\t\tfloat ratio=1.-(worldPosition.y/maxDistance);\n\t\t\t\t\tfloat attenuation=ratio*ratio;\n\t\t\t\t\top=opacity*attenuation;\n\t\t\t\t#endif\n\t\t\t\t#ifdef FRESNEL\n\t\t\t\t\top*=fresnelCoe;\n\t\t\t\t#endif\n\t\t\t\tgl_FragColor = vec4( blendOverlay( base.rgb, color ), op );\n\t\t\t#else\n\t\t\t\tgl_FragColor = vec4( blendOverlay( base.rgb, color ), 1.0 );\n\t\t\t#endif\n\t\t}\n\t`\n    )\n  });\n  return ReflectorForSSRPass2;\n})();\nexport {\n  ReflectorForSSRPass\n};\n//# sourceMappingURL=ReflectorForSSRPass.js.map\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 6465, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6471, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/objects/Sky.js"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nimport { Vector3, ShaderMaterial, UniformsUtils, BackSide, Mesh, BoxGeometry } from \"three\";\nimport { version } from \"../_polyfill/constants.js\";\nconst Sky = /* @__PURE__ */ (() => {\n  const SkyShader = {\n    uniforms: {\n      turbidity: { value: 2 },\n      rayleigh: { value: 1 },\n      mieCoefficient: { value: 5e-3 },\n      mieDirectionalG: { value: 0.8 },\n      sunPosition: { value: new Vector3() },\n      up: { value: new Vector3(0, 1, 0) }\n    },\n    vertexShader: (\n      /* glsl */\n      `\n      uniform vec3 sunPosition;\n      uniform float rayleigh;\n      uniform float turbidity;\n      uniform float mieCoefficient;\n      uniform vec3 up;\n\n      varying vec3 vWorldPosition;\n      varying vec3 vSunDirection;\n      varying float vSunfade;\n      varying vec3 vBetaR;\n      varying vec3 vBetaM;\n      varying float vSunE;\n\n      // constants for atmospheric scattering\n      const float e = 2.71828182845904523536028747135266249775724709369995957;\n      const float pi = 3.141592653589793238462643383279502884197169;\n\n      // wavelength of used primaries, according to preetham\n      const vec3 lambda = vec3( 680E-9, 550E-9, 450E-9 );\n      // this pre-calcuation replaces older TotalRayleigh(vec3 lambda) function:\n      // (8.0 * pow(pi, 3.0) * pow(pow(n, 2.0) - 1.0, 2.0) * (6.0 + 3.0 * pn)) / (3.0 * N * pow(lambda, vec3(4.0)) * (6.0 - 7.0 * pn))\n      const vec3 totalRayleigh = vec3( 5.804542996261093E-6, 1.3562911419845635E-5, 3.0265902468824876E-5 );\n\n      // mie stuff\n      // K coefficient for the primaries\n      const float v = 4.0;\n      const vec3 K = vec3( 0.686, 0.678, 0.666 );\n      // MieConst = pi * pow( ( 2.0 * pi ) / lambda, vec3( v - 2.0 ) ) * K\n      const vec3 MieConst = vec3( 1.8399918514433978E14, 2.7798023919660528E14, 4.0790479543861094E14 );\n\n      // earth shadow hack\n      // cutoffAngle = pi / 1.95;\n      const float cutoffAngle = 1.6110731556870734;\n      const float steepness = 1.5;\n      const float EE = 1000.0;\n\n      float sunIntensity( float zenithAngleCos ) {\n        zenithAngleCos = clamp( zenithAngleCos, -1.0, 1.0 );\n        return EE * max( 0.0, 1.0 - pow( e, -( ( cutoffAngle - acos( zenithAngleCos ) ) / steepness ) ) );\n      }\n\n      vec3 totalMie( float T ) {\n        float c = ( 0.2 * T ) * 10E-18;\n        return 0.434 * c * MieConst;\n      }\n\n      void main() {\n\n        vec4 worldPosition = modelMatrix * vec4( position, 1.0 );\n        vWorldPosition = worldPosition.xyz;\n\n        gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n        gl_Position.z = gl_Position.w; // set z to camera.far\n\n        vSunDirection = normalize( sunPosition );\n\n        vSunE = sunIntensity( dot( vSunDirection, up ) );\n\n        vSunfade = 1.0 - clamp( 1.0 - exp( ( sunPosition.y / 450000.0 ) ), 0.0, 1.0 );\n\n        float rayleighCoefficient = rayleigh - ( 1.0 * ( 1.0 - vSunfade ) );\n\n      // extinction (absorbtion + out scattering)\n      // rayleigh coefficients\n        vBetaR = totalRayleigh * rayleighCoefficient;\n\n      // mie coefficients\n        vBetaM = totalMie( turbidity ) * mieCoefficient;\n\n      }\n    `\n    ),\n    fragmentShader: (\n      /* glsl */\n      `\n      varying vec3 vWorldPosition;\n      varying vec3 vSunDirection;\n      varying float vSunfade;\n      varying vec3 vBetaR;\n      varying vec3 vBetaM;\n      varying float vSunE;\n\n      uniform float mieDirectionalG;\n      uniform vec3 up;\n\n      const vec3 cameraPos = vec3( 0.0, 0.0, 0.0 );\n\n      // constants for atmospheric scattering\n      const float pi = 3.141592653589793238462643383279502884197169;\n\n      const float n = 1.0003; // refractive index of air\n      const float N = 2.545E25; // number of molecules per unit volume for air at 288.15K and 1013mb (sea level -45 celsius)\n\n      // optical length at zenith for molecules\n      const float rayleighZenithLength = 8.4E3;\n      const float mieZenithLength = 1.25E3;\n      // 66 arc seconds -> degrees, and the cosine of that\n      const float sunAngularDiameterCos = 0.999956676946448443553574619906976478926848692873900859324;\n\n      // 3.0 / ( 16.0 * pi )\n      const float THREE_OVER_SIXTEENPI = 0.05968310365946075;\n      // 1.0 / ( 4.0 * pi )\n      const float ONE_OVER_FOURPI = 0.07957747154594767;\n\n      float rayleighPhase( float cosTheta ) {\n        return THREE_OVER_SIXTEENPI * ( 1.0 + pow( cosTheta, 2.0 ) );\n      }\n\n      float hgPhase( float cosTheta, float g ) {\n        float g2 = pow( g, 2.0 );\n        float inverse = 1.0 / pow( 1.0 - 2.0 * g * cosTheta + g2, 1.5 );\n        return ONE_OVER_FOURPI * ( ( 1.0 - g2 ) * inverse );\n      }\n\n      void main() {\n\n        vec3 direction = normalize( vWorldPosition - cameraPos );\n\n      // optical length\n      // cutoff angle at 90 to avoid singularity in next formula.\n        float zenithAngle = acos( max( 0.0, dot( up, direction ) ) );\n        float inverse = 1.0 / ( cos( zenithAngle ) + 0.15 * pow( 93.885 - ( ( zenithAngle * 180.0 ) / pi ), -1.253 ) );\n        float sR = rayleighZenithLength * inverse;\n        float sM = mieZenithLength * inverse;\n\n      // combined extinction factor\n        vec3 Fex = exp( -( vBetaR * sR + vBetaM * sM ) );\n\n      // in scattering\n        float cosTheta = dot( direction, vSunDirection );\n\n        float rPhase = rayleighPhase( cosTheta * 0.5 + 0.5 );\n        vec3 betaRTheta = vBetaR * rPhase;\n\n        float mPhase = hgPhase( cosTheta, mieDirectionalG );\n        vec3 betaMTheta = vBetaM * mPhase;\n\n        vec3 Lin = pow( vSunE * ( ( betaRTheta + betaMTheta ) / ( vBetaR + vBetaM ) ) * ( 1.0 - Fex ), vec3( 1.5 ) );\n        Lin *= mix( vec3( 1.0 ), pow( vSunE * ( ( betaRTheta + betaMTheta ) / ( vBetaR + vBetaM ) ) * Fex, vec3( 1.0 / 2.0 ) ), clamp( pow( 1.0 - dot( up, vSunDirection ), 5.0 ), 0.0, 1.0 ) );\n\n      // nightsky\n        float theta = acos( direction.y ); // elevation --> y-axis, [-pi/2, pi/2]\n        float phi = atan( direction.z, direction.x ); // azimuth --> x-axis [-pi/2, pi/2]\n        vec2 uv = vec2( phi, theta ) / vec2( 2.0 * pi, pi ) + vec2( 0.5, 0.0 );\n        vec3 L0 = vec3( 0.1 ) * Fex;\n\n      // composition + solar disc\n        float sundisk = smoothstep( sunAngularDiameterCos, sunAngularDiameterCos + 0.00002, cosTheta );\n        L0 += ( vSunE * 19000.0 * Fex ) * sundisk;\n\n        vec3 texColor = ( Lin + L0 ) * 0.04 + vec3( 0.0, 0.0003, 0.00075 );\n\n        vec3 retColor = pow( texColor, vec3( 1.0 / ( 1.2 + ( 1.2 * vSunfade ) ) ) );\n\n        gl_FragColor = vec4( retColor, 1.0 );\n\n      #include <tonemapping_fragment>\n      #include <${version >= 154 ? \"colorspace_fragment\" : \"encodings_fragment\"}>\n\n      }\n    `\n    )\n  };\n  const material = new ShaderMaterial({\n    name: \"SkyShader\",\n    fragmentShader: SkyShader.fragmentShader,\n    vertexShader: SkyShader.vertexShader,\n    uniforms: UniformsUtils.clone(SkyShader.uniforms),\n    side: BackSide,\n    depthWrite: false\n  });\n  class Sky2 extends Mesh {\n    constructor() {\n      super(new BoxGeometry(1, 1, 1), material);\n    }\n  }\n  __publicField(Sky2, \"SkyShader\", SkyShader);\n  __publicField(Sky2, \"material\", material);\n  return Sky2;\n})();\nexport {\n  Sky\n};\n//# sourceMappingURL=Sky.js.map\n"],"names":[],"mappings":";;;AAOA;AADA;AANA,IAAI,YAAY,OAAO,cAAc;AACrC,IAAI,kBAAkB,CAAC,KAAK,KAAK,QAAU,OAAO,MAAM,UAAU,KAAK,KAAK;QAAE,YAAY;QAAM,cAAc;QAAM,UAAU;QAAM;IAAM,KAAK,GAAG,CAAC,IAAI,GAAG;AAC1J,IAAI,gBAAgB,CAAC,KAAK,KAAK;IAC7B,gBAAgB,KAAK,OAAO,QAAQ,WAAW,MAAM,KAAK,KAAK;IAC/D,OAAO;AACT;;;AAGA,MAAM,MAAM,aAAa,GAAG,CAAC;IAC3B,MAAM,YAAY;QAChB,UAAU;YACR,WAAW;gBAAE,OAAO;YAAE;YACtB,UAAU;gBAAE,OAAO;YAAE;YACrB,gBAAgB;gBAAE,OAAO;YAAK;YAC9B,iBAAiB;gBAAE,OAAO;YAAI;YAC9B,aAAa;gBAAE,OAAO,IAAI,+IAAA,CAAA,UAAO;YAAG;YACpC,IAAI;gBAAE,OAAO,IAAI,+IAAA,CAAA,UAAO,CAAC,GAAG,GAAG;YAAG;QACpC;QACA,cACE,QAAQ,GACR,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAuEH,CAAC;QAED,gBACE,QAAQ,GACR,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;gBAmFS,EAAE,yJAAA,CAAA,UAAO,IAAI,MAAM,wBAAwB,qBAAqB;;;IAG5E,CAAC;IAEH;IACA,MAAM,WAAW,IAAI,+IAAA,CAAA,iBAAc,CAAC;QAClC,MAAM;QACN,gBAAgB,UAAU,cAAc;QACxC,cAAc,UAAU,YAAY;QACpC,UAAU,+IAAA,CAAA,gBAAa,CAAC,KAAK,CAAC,UAAU,QAAQ;QAChD,MAAM,+IAAA,CAAA,WAAQ;QACd,YAAY;IACd;IACA,MAAM,aAAa,+IAAA,CAAA,OAAI;QACrB,aAAc;YACZ,KAAK,CAAC,IAAI,+IAAA,CAAA,cAAW,CAAC,GAAG,GAAG,IAAI;QAClC;IACF;IACA,cAAc,MAAM,aAAa;IACjC,cAAc,MAAM,YAAY;IAChC,OAAO;AACT,CAAC;;CAID,+BAA+B","ignoreList":[0]}},
    {"offset": {"line": 6690, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6696, "column": 0}, "map": {"version":3,"sources":["file://D%3A/VS%20Code/portfolio%20new%20react/node_modules/three-stdlib/objects/GroundProjectedEnv.js"],"sourcesContent":["import { Mesh, IcosahedronGeometry, ShaderMaterial, DoubleSide } from \"three\";\nimport { version } from \"../_polyfill/constants.js\";\nconst isCubeTexture = (def) => def && def.isCubeTexture;\nclass GroundProjectedEnv extends Mesh {\n  constructor(texture, options) {\n    var _a, _b;\n    const isCubeMap = isCubeTexture(texture);\n    const w = (_b = isCubeMap ? (_a = texture.image[0]) == null ? void 0 : _a.width : texture.image.width) != null ? _b : 1024;\n    const cubeSize = w / 4;\n    const _lodMax = Math.floor(Math.log2(cubeSize));\n    const _cubeSize = Math.pow(2, _lodMax);\n    const width = 3 * Math.max(_cubeSize, 16 * 7);\n    const height = 4 * _cubeSize;\n    const defines = [\n      isCubeMap ? \"#define ENVMAP_TYPE_CUBE\" : \"\",\n      `#define CUBEUV_TEXEL_WIDTH ${1 / width}`,\n      `#define CUBEUV_TEXEL_HEIGHT ${1 / height}`,\n      `#define CUBEUV_MAX_MIP ${_lodMax}.0`\n    ];\n    const vertexShader = (\n      /* glsl */\n      `\n        varying vec3 vWorldPosition;\n        void main() \n        {\n            vec4 worldPosition = ( modelMatrix * vec4( position, 1.0 ) );\n            vWorldPosition = worldPosition.xyz;\n            \n            gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n        }\n        `\n    );\n    const fragmentShader = defines.join(\"\\n\") + /* glsl */\n    `\n        #define ENVMAP_TYPE_CUBE_UV\n        varying vec3 vWorldPosition;\n        uniform float radius;\n        uniform float height;\n        uniform float angle;\n        #ifdef ENVMAP_TYPE_CUBE\n            uniform samplerCube map;\n        #else\n            uniform sampler2D map;\n        #endif\n        // From: https://www.shadertoy.com/view/4tsBD7\n        float diskIntersectWithBackFaceCulling( vec3 ro, vec3 rd, vec3 c, vec3 n, float r ) \n        {\n            float d = dot ( rd, n );\n            \n            if( d > 0.0 ) { return 1e6; }\n            \n            vec3  o = ro - c;\n            float t = - dot( n, o ) / d;\n            vec3  q = o + rd * t;\n            \n            return ( dot( q, q ) < r * r ) ? t : 1e6;\n        }\n        // From: https://www.iquilezles.org/www/articles/intersectors/intersectors.htm\n        float sphereIntersect( vec3 ro, vec3 rd, vec3 ce, float ra ) \n        {\n            vec3 oc = ro - ce;\n            float b = dot( oc, rd );\n            float c = dot( oc, oc ) - ra * ra;\n            float h = b * b - c;\n            \n            if( h < 0.0 ) { return -1.0; }\n            \n            h = sqrt( h );\n            \n            return - b + h;\n        }\n        vec3 project() \n        {\n            vec3 p = normalize( vWorldPosition );\n            vec3 camPos = cameraPosition;\n            camPos.y -= height;\n            float intersection = sphereIntersect( camPos, p, vec3( 0.0 ), radius );\n            if( intersection > 0.0 ) {\n                \n                vec3 h = vec3( 0.0, - height, 0.0 );\n                float intersection2 = diskIntersectWithBackFaceCulling( camPos, p, h, vec3( 0.0, 1.0, 0.0 ), radius );\n                p = ( camPos + min( intersection, intersection2 ) * p ) / radius;\n            } else {\n                p = vec3( 0.0, 1.0, 0.0 );\n            }\n            return p;\n        }\n        #include <common>\n        #include <cube_uv_reflection_fragment>\n        void main() \n        {\n            vec3 projectedWorldPosition = project();\n            \n            #ifdef ENVMAP_TYPE_CUBE\n                vec3 outcolor = textureCube( map, projectedWorldPosition ).rgb;\n            #else\n                vec3 direction = normalize( projectedWorldPosition );\n                vec2 uv = equirectUv( direction );\n                vec3 outcolor = texture2D( map, uv ).rgb;\n            #endif\n            gl_FragColor = vec4( outcolor, 1.0 );\n            #include <tonemapping_fragment>\n            #include <${version >= 154 ? \"colorspace_fragment\" : \"encodings_fragment\"}>\n        }\n        `;\n    const uniforms = {\n      map: { value: texture },\n      height: { value: (options == null ? void 0 : options.height) || 15 },\n      radius: { value: (options == null ? void 0 : options.radius) || 100 }\n    };\n    const geometry = new IcosahedronGeometry(1, 16);\n    const material = new ShaderMaterial({\n      uniforms,\n      fragmentShader,\n      vertexShader,\n      side: DoubleSide\n    });\n    super(geometry, material);\n  }\n  set radius(radius) {\n    this.material.uniforms.radius.value = radius;\n  }\n  get radius() {\n    return this.material.uniforms.radius.value;\n  }\n  set height(height) {\n    this.material.uniforms.height.value = height;\n  }\n  get height() {\n    return this.material.uniforms.height.value;\n  }\n}\nexport {\n  GroundProjectedEnv\n};\n//# sourceMappingURL=GroundProjectedEnv.js.map\n"],"names":[],"mappings":";;;AACA;AADA;;;AAEA,MAAM,gBAAgB,CAAC,MAAQ,OAAO,IAAI,aAAa;AACvD,MAAM,2BAA2B,+IAAA,CAAA,OAAI;IACnC,YAAY,OAAO,EAAE,OAAO,CAAE;QAC5B,IAAI,IAAI;QACR,MAAM,YAAY,cAAc;QAChC,MAAM,IAAI,CAAC,KAAK,YAAY,CAAC,KAAK,QAAQ,KAAK,CAAC,EAAE,KAAK,OAAO,KAAK,IAAI,GAAG,KAAK,GAAG,QAAQ,KAAK,CAAC,KAAK,KAAK,OAAO,KAAK;QACtH,MAAM,WAAW,IAAI;QACrB,MAAM,UAAU,KAAK,KAAK,CAAC,KAAK,IAAI,CAAC;QACrC,MAAM,YAAY,KAAK,GAAG,CAAC,GAAG;QAC9B,MAAM,QAAQ,IAAI,KAAK,GAAG,CAAC,WAAW,KAAK;QAC3C,MAAM,SAAS,IAAI;QACnB,MAAM,UAAU;YACd,YAAY,6BAA6B;YACzC,CAAC,2BAA2B,EAAE,IAAI,OAAO;YACzC,CAAC,4BAA4B,EAAE,IAAI,QAAQ;YAC3C,CAAC,uBAAuB,EAAE,QAAQ,EAAE,CAAC;SACtC;QACD,MAAM,eACJ,QAAQ,GACR,CAAC;;;;;;;;;QASC,CAAC;QAEL,MAAM,iBAAiB,QAAQ,IAAI,CAAC,QAAQ,QAAQ,GACpD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;sBAqEiB,EAAE,yJAAA,CAAA,UAAO,IAAI,MAAM,wBAAwB,qBAAqB;;QAE9E,CAAC;QACL,MAAM,WAAW;YACf,KAAK;gBAAE,OAAO;YAAQ;YACtB,QAAQ;gBAAE,OAAO,CAAC,WAAW,OAAO,KAAK,IAAI,QAAQ,MAAM,KAAK;YAAG;YACnE,QAAQ;gBAAE,OAAO,CAAC,WAAW,OAAO,KAAK,IAAI,QAAQ,MAAM,KAAK;YAAI;QACtE;QACA,MAAM,WAAW,IAAI,+IAAA,CAAA,sBAAmB,CAAC,GAAG;QAC5C,MAAM,WAAW,IAAI,+IAAA,CAAA,iBAAc,CAAC;YAClC;YACA;YACA;YACA,MAAM,+IAAA,CAAA,aAAU;QAClB;QACA,KAAK,CAAC,UAAU;IAClB;IACA,IAAI,OAAO,MAAM,EAAE;QACjB,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,GAAG;IACxC;IACA,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK;IAC5C;IACA,IAAI,OAAO,MAAM,EAAE;QACjB,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,GAAG;IACxC;IACA,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK;IAC5C;AACF;;CAIA,8CAA8C","ignoreList":[0]}},
    {"offset": {"line": 6837, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}